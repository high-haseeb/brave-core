"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.throwIfErrors = exports.removeEmptyHeaders = exports.getHeaders = exports["default"] = void 0;

var _regenerator = _interopRequireDefault(require("@babel/runtime/regenerator"));

var _asyncToGenerator2 = _interopRequireDefault(require("@babel/runtime/helpers/asyncToGenerator"));

var _classCallCheck2 = _interopRequireDefault(require("@babel/runtime/helpers/classCallCheck"));

var _createClass2 = _interopRequireDefault(require("@babel/runtime/helpers/createClass"));

var _defineProperty2 = _interopRequireDefault(require("@babel/runtime/helpers/defineProperty"));

var _slicedToArray2 = _interopRequireDefault(require("@babel/runtime/helpers/slicedToArray"));

var _axios = _interopRequireDefault(require("axios"));

function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }

function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { (0, _defineProperty2["default"])(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }

var removeEmptyHeaders = function removeEmptyHeaders(headers) {
  return Object.fromEntries(Object.entries(headers).filter(function (_ref) {
    var _ref2 = (0, _slicedToArray2["default"])(_ref, 2),
        _key = _ref2[0],
        value = _ref2[1];

    return !!value;
  }));
};

exports.removeEmptyHeaders = removeEmptyHeaders;

var getHeaders = function getHeaders(headers, token) {
  return _objectSpread(_objectSpread({}, headers), {}, {
    Accept: '*/*',
    'Content-Type': 'application/json'
  }, token ? {
    Authorization: "Bearer ".concat(token)
  } : {});
};

exports.getHeaders = getHeaders;

var throwIfErrors = function throwIfErrors(data) {
  if (data.error) {
    if (data.error.message) throw new Error(data.error.message);
    throw new Error("JSON-RPC error: ".concat(JSON.stringify(data.error)));
  }
};

exports.throwIfErrors = throwIfErrors;

var LotusRpcEngine = /*#__PURE__*/function () {
  function LotusRpcEngine(config) {
    (0, _classCallCheck2["default"])(this, LotusRpcEngine);
    (0, _defineProperty2["default"])(this, "apiAddress", void 0);
    (0, _defineProperty2["default"])(this, "namespace", void 0);
    (0, _defineProperty2["default"])(this, "delimeter", void 0);
    (0, _defineProperty2["default"])(this, "axiosOpts", void 0);
    if (!config) throw new Error('Must pass a config object to the LotusRpcEngine constructor.');
    this.apiAddress = config.apiAddress;
    this.namespace = config.namespace || 'Filecoin';
    this.delimeter = config.delimeter || '.';
    this.axiosOpts = config.axiosOpts || {};
    this.axiosOpts.headers = getHeaders(this.axiosOpts.headers, config.token);
    this.axiosOpts.headers = removeEmptyHeaders(this.axiosOpts.headers);
  }

  (0, _createClass2["default"])(LotusRpcEngine, [{
    key: "request",
    value: function () {
      var _request = (0, _asyncToGenerator2["default"])( /*#__PURE__*/_regenerator["default"].mark(function _callee(method) {
        var _len,
            params,
            _key2,
            _yield$axios$post,
            data,
            _args = arguments;

        return _regenerator["default"].wrap(function _callee$(_context) {
          while (1) {
            switch (_context.prev = _context.next) {
              case 0:
                for (_len = _args.length, params = new Array(_len > 1 ? _len - 1 : 0), _key2 = 1; _key2 < _len; _key2++) {
                  params[_key2 - 1] = _args[_key2];
                }

                _context.next = 3;
                return _axios["default"].post(this.apiAddress, {
                  jsonrpc: '2.0',
                  method: "".concat(this.namespace).concat(this.delimeter).concat(method),
                  params: params,
                  id: 1
                }, this.axiosOpts);

              case 3:
                _yield$axios$post = _context.sent;
                data = _yield$axios$post.data;
                throwIfErrors(data);
                return _context.abrupt("return", data.result);

              case 7:
              case "end":
                return _context.stop();
            }
          }
        }, _callee, this);
      }));

      function request(_x) {
        return _request.apply(this, arguments);
      }

      return request;
    }()
  }]);
  return LotusRpcEngine;
}();

exports["default"] = LotusRpcEngine;
//# sourceMappingURL=index.js.map