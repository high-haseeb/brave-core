{"version":3,"sources":["../../../src/utils/createPath/index.ts"],"names":["CoinType","default","validatePath","MAINNET_PATH_CODE","TESTNET_PATH_CODE","createPath","coinTypeCode","i","Error","extractCoinTypeFromPath","path","split","coinType","bip44Code","replace","Number","TEST","MAIN"],"mappings":";;AAAA;AACA,SAASA,QAAT,QAAyB,wBAAzB;AACA,SAASC,OAAO,IAAIC,YAApB,QAAwC,gBAAxC;AAIA,IAAMC,iBAA+B,GAAG,GAAxC;AACA,IAAMC,iBAA+B,GAAG,CAAxC;AAEA,OAAO,IAAMC,UAAU,GAAG,SAAbA,UAAa,CAACC,YAAD,EAA6BC,CAA7B,EAA2C;AACnE,MAAID,YAAY,KAAKH,iBAAjB,IAAsCG,YAAY,KAAKF,iBAA3D,EACE,MAAM,IAAII,KAAJ,CAAU,8BAAV,CAAN;AACF,yBAAgBF,YAAhB,oBAAsCC,CAAtC;AACD,CAJM;AAMP,OAAO,IAAME,uBAAuB,GAAG,SAA1BA,uBAA0B,CAACC,IAAD,EAA4B;AAAA,oBACrCA,IAAI,CAACC,KAAL,CAAW,GAAX,CADqC;AAAA;AAAA,MACtDC,QADsD;;AAEjE,MAAMC,SAAS,GAAGD,QAAQ,CAACE,OAAT,CAAiB,GAAjB,EAAsB,EAAtB,CAAlB;AAEA,MAAIC,MAAM,CAACF,SAAD,CAAN,KAAsB,CAA1B,EAA6B,OAAOb,QAAQ,CAACgB,IAAhB;AAC7B,MAAID,MAAM,CAACF,SAAD,CAAN,KAAsB,GAA1B,EAA+B,OAAOb,QAAQ,CAACiB,IAAhB;AAE/B,QAAM,IAAIT,KAAJ,CAAU,qBAAV,CAAN;AACD,CARM;AAUP,OAAO,IAAMF,YAAY,GAAG,SAAfA,YAAe,CAACM,QAAD,EAAsC;AAChE,MAAIA,QAAQ,KAAK,GAAjB,EAAsB,OAAO,CAAP;AACtB,MAAIA,QAAQ,KAAK,GAAjB,EAAsB,OAAO,GAAP;AACtB,QAAM,IAAIJ,KAAJ,CAAU,uBAAV,CAAN;AACD,CAJM","sourcesContent":["/* tslint:disable no-shadowed-variable */\nimport { CoinType } from '@glif/filecoin-address'\nexport { default as validatePath } from './validatePath'\n\nexport type CoinTypeCode = 461 | 1\n\nconst MAINNET_PATH_CODE: CoinTypeCode = 461\nconst TESTNET_PATH_CODE: CoinTypeCode = 1\n\nexport const createPath = (coinTypeCode: CoinTypeCode, i: number) => {\n  if (coinTypeCode !== MAINNET_PATH_CODE && coinTypeCode !== TESTNET_PATH_CODE)\n    throw new Error('Invalid cointype code passed')\n  return `m/44'/${coinTypeCode}'/0'/0/${i}`\n}\n\nexport const extractCoinTypeFromPath = (path: string): CoinType => {\n  const [, , coinType, , ,] = path.split('/')\n  const bip44Code = coinType.replace(\"'\", '')\n\n  if (Number(bip44Code) === 1) return CoinType.TEST\n  if (Number(bip44Code) === 461) return CoinType.MAIN\n\n  throw new Error('Invalid path passed')\n}\n\nexport const coinTypeCode = (coinType: CoinType): CoinTypeCode => {\n  if (coinType === 't') return 1\n  if (coinType === 'f') return 461\n  throw new Error('Unrecognized CoinType')\n}\n"],"file":"index.js"}