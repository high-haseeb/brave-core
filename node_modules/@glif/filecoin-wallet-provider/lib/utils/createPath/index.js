import _slicedToArray from "@babel/runtime/helpers/slicedToArray";

/* tslint:disable no-shadowed-variable */
import { CoinType } from '@glif/filecoin-address';
export { default as validatePath } from './validatePath';
var MAINNET_PATH_CODE = 461;
var TESTNET_PATH_CODE = 1;
export var createPath = function createPath(coinTypeCode, i) {
  if (coinTypeCode !== MAINNET_PATH_CODE && coinTypeCode !== TESTNET_PATH_CODE) throw new Error('Invalid cointype code passed');
  return "m/44'/".concat(coinTypeCode, "'/0'/0/").concat(i);
};
export var extractCoinTypeFromPath = function extractCoinTypeFromPath(path) {
  var _path$split = path.split('/'),
      _path$split2 = _slicedToArray(_path$split, 5),
      coinType = _path$split2[2];

  var bip44Code = coinType.replace("'", '');
  if (Number(bip44Code) === 1) return CoinType.TEST;
  if (Number(bip44Code) === 461) return CoinType.MAIN;
  throw new Error('Invalid path passed');
};
export var coinTypeCode = function coinTypeCode(coinType) {
  if (coinType === 't') return 1;
  if (coinType === 'f') return 461;
  throw new Error('Unrecognized CoinType');
};
//# sourceMappingURL=index.js.map