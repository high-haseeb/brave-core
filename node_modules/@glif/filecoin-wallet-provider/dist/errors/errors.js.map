{"version":3,"sources":["../../src/errors/errors.ts"],"names":["WalletProviderError","args","message","Object","setPrototypeOf","prototype","code","res","Error","LedgerLostConnectionError","TransportNotSupportedError","LedgerReplugError","LedgerDisconnectedError","LedgerInUseByAnotherApp","LedgerNotFoundError","LedgerDeviceLockedError","LedgerFilecoinAppBadVersionError","LedgerFilecoinAppNotOpenError","LedgerDeviceBusyError","InvalidParamsError","UnsupportedKeyTypeError","TransactionRejectedError","MetaMaskError","MetaMaskNotInstalledError","MetaMaskSnapsNotSupportedError","MetaMaskLockedError","MetaMaskFilSnapNotInstalledError"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;IAMMA,mB;;;;;AAEJ,+BAAYC,IAAZ,EAAgD;AAAA;;AAAA;AAC9C,8BAAMA,IAAI,CAACC,OAAX;AAD8C;AAE9CC,IAAAA,MAAM,CAACC,cAAP,iDAA4BJ,mBAAmB,CAACK,SAAhD;AACA,QAAIJ,IAAI,CAACK,IAAT,EAAe,MAAKA,IAAL,GAAYL,IAAI,CAACK,IAAjB;AAH+B;AAI/C;;;;6BAEsC;AACrC,UAAMC,GAAiC,GAAG;AAAEL,QAAAA,OAAO,EAAE,KAAKA;AAAhB,OAA1C;AACA,UAAI,KAAKI,IAAT,EAAeC,GAAG,CAACD,IAAJ,GAAW,KAAKA,IAAhB;AACf,aAAOC,GAAP;AACD;;;kDAZ+BC,K;;IAe5BC,yB;;;;;AACJ,uCAAqE;AAAA;;AAAA,mFAAJ,EAAI;;AAAA,QAApDR,IAAoD;AAAA;AACnE;AACEC,MAAAA,OAAO,EAAED,IAAI,CAACC,OAAL,IAAgB;AAD3B,OAEKD,IAFL;AAIAE,IAAAA,MAAM,CAACC,cAAP,kDAA4BK,yBAAyB,CAACJ,SAAtD;AALmE;AAMpE;;;EAPqCL,mB;;IAUlCU,0B;;;;;AACJ,wCAAqE;AAAA;;AAAA,oFAAJ,EAAI;;AAAA,QAApDT,IAAoD;AAAA;AACnE;AACEC,MAAAA,OAAO,EAAED,IAAI,CAACC,OAAL,IAAgB;AAD3B,OAEKD,IAFL;AAIAE,IAAAA,MAAM,CAACC,cAAP,kDAA4BM,0BAA0B,CAACL,SAAvD;AALmE;AAMpE;;;EAPsCL,mB;;IAUnCW,iB;;;;;AACJ,+BAAqE;AAAA;;AAAA,oFAAJ,EAAI;;AAAA,QAApDV,IAAoD;AAAA;AACnE;AACEC,MAAAA,OAAO,EAAED,IAAI,CAACC,OAAL,IAAgB;AAD3B,OAEKD,IAFL;AAIAE,IAAAA,MAAM,CAACC,cAAP,kDAA4BO,iBAAiB,CAACN,SAA9C;AALmE;AAMpE;;;EAP6BL,mB;;IAU1BY,uB;;;;;AACJ,qCAAqE;AAAA;;AAAA,oFAAJ,EAAI;;AAAA,QAApDX,IAAoD;AAAA;AACnE;AACEC,MAAAA,OAAO,EAAED,IAAI,CAACC,OAAL,IAAgB;AAD3B,OAEKD,IAFL;AAIAE,IAAAA,MAAM,CAACC,cAAP,kDAA4BQ,uBAAuB,CAACP,SAApD;AALmE;AAMpE;;;EAPmCL,mB;;IAUhCa,uB;;;;;AACJ,qCAAqE;AAAA;;AAAA,oFAAJ,EAAI;;AAAA,QAApDZ,IAAoD;AAAA;AACnE;AACEC,MAAAA,OAAO,EAAED,IAAI,CAACC,OAAL,IAAgB;AAD3B,OAEKD,IAFL;AAIAE,IAAAA,MAAM,CAACC,cAAP,kDAA4BS,uBAAuB,CAACR,SAApD;AALmE;AAMpE;;;EAPmCL,mB;;IAUhCc,mB;;;;;AACJ,iCAAqE;AAAA;;AAAA,oFAAJ,EAAI;;AAAA,QAApDb,IAAoD;AAAA;AACnE;AACEC,MAAAA,OAAO,EAAED,IAAI,CAACC,OAAL,IAAgB;AAD3B,OAEKD,IAFL;AAIAE,IAAAA,MAAM,CAACC,cAAP,kDAA4BU,mBAAmB,CAACT,SAAhD;AALmE;AAMpE;;;EAP+BL,mB;;IAU5Be,uB;;;;;AACJ,qCAAqE;AAAA;;AAAA,oFAAJ,EAAI;;AAAA,QAApDd,IAAoD;AAAA;AACnE;AACEC,MAAAA,OAAO,EAAED,IAAI,CAACC,OAAL,IAAgB;AAD3B,OAEKD,IAFL;AAIAE,IAAAA,MAAM,CAACC,cAAP,kDAA4BW,uBAAuB,CAACV,SAApD;AALmE;AAMpE;;;EAPmCL,mB;;IAUhCgB,gC;;;;;AACJ,8CAAqE;AAAA;;AAAA,oFAAJ,EAAI;;AAAA,QAApDf,IAAoD;AAAA;AACnE;AACEC,MAAAA,OAAO,EAAED,IAAI,CAACC,OAAL,IAAgB;AAD3B,OAEKD,IAFL;AAIAE,IAAAA,MAAM,CAACC,cAAP,kDAA4BY,gCAAgC,CAACX,SAA7D;AALmE;AAMpE;;;EAP4CL,mB;;IAUzCiB,6B;;;;;AACJ,2CAAqE;AAAA;;AAAA,oFAAJ,EAAI;;AAAA,QAApDhB,IAAoD;AAAA;AACnE;AACEC,MAAAA,OAAO,EAAED,IAAI,CAACC,OAAL,IAAgB;AAD3B,OAEKD,IAFL;AAIAE,IAAAA,MAAM,CAACC,cAAP,mDAA4Ba,6BAA6B,CAACZ,SAA1D;AALmE;AAMpE;;;EAPyCL,mB;;IAUtCkB,qB;;;;;AACJ,mCAAqE;AAAA;;AAAA,qFAAJ,EAAI;;AAAA,QAApDjB,IAAoD;AAAA;AACnE;AACEC,MAAAA,OAAO,EAAED,IAAI,CAACC,OAAL,IAAgB;AAD3B,OAEKD,IAFL;AAIAE,IAAAA,MAAM,CAACC,cAAP,mDAA4Bc,qBAAqB,CAACb,SAAlD;AALmE;AAMpE;;;EAPiCL,mB;;IAU9BmB,kB;;;;;AACJ,gCAAqE;AAAA;;AAAA,qFAAJ,EAAI;;AAAA,QAApDlB,IAAoD;AAAA;AACnE;AACEC,MAAAA,OAAO,EAAED,IAAI,CAACC,OAAL,IAAgB;AAD3B,OAEKD,IAFL;AAIAE,IAAAA,MAAM,CAACC,cAAP,mDAA4Be,kBAAkB,CAACd,SAA/C;AALmE;AAMpE;;;EAP8BL,mB;;IAU3BoB,uB;;;;;AACJ,qCAAqE;AAAA;;AAAA,qFAAJ,EAAI;;AAAA,QAApDnB,IAAoD;AAAA;AACnE;AACEC,MAAAA,OAAO,EAAED,IAAI,CAACC,OAAL,IAAgB;AAD3B,OAEKD,IAFL;AAIAE,IAAAA,MAAM,CAACC,cAAP,mDAA4BgB,uBAAuB,CAACf,SAApD;AALmE;AAMpE;;;EAPmCL,mB;;IAUhCqB,wB;;;;;AACJ,sCAAqE;AAAA;;AAAA,qFAAJ,EAAI;;AAAA,QAApDpB,IAAoD;AAAA;AACnE;AACEC,MAAAA,OAAO,EAAED,IAAI,CAACC,OAAL,IAAgB;AAD3B,OAEKD,IAFL;AAIAE,IAAAA,MAAM,CAACC,cAAP,mDAA4BiB,wBAAwB,CAAChB,SAArD;AALmE;AAMpE;;;EAPoCL,mB;;IAUjCsB,a;;;;;AACJ,2BAAqE;AAAA;;AAAA,qFAAJ,EAAI;;AAAA,QAApDrB,IAAoD;AAAA;AACnE;AACEC,MAAAA,OAAO,EAAED,IAAI,CAACC,OAAL,IAAgB;AAD3B,OAEKD,IAFL;AAIAE,IAAAA,MAAM,CAACC,cAAP,mDAA4BkB,aAAa,CAACjB,SAA1C;AALmE;AAMpE;;;EAPyBL,mB;;IAUtBuB,yB;;;;;AACJ,uCAAqE;AAAA;;AAAA,qFAAJ,EAAI;;AAAA,QAApDtB,IAAoD;AAAA;AACnE;AACEC,MAAAA,OAAO,EAAED,IAAI,CAACC,OAAL,IAAgB;AAD3B,OAEKD,IAFL;AAIAE,IAAAA,MAAM,CAACC,cAAP,mDAA4BmB,yBAAyB,CAAClB,SAAtD;AALmE;AAMpE;;;EAPqCL,mB;;IAUlCwB,8B;;;;;AACJ,4CAAqE;AAAA;;AAAA,qFAAJ,EAAI;;AAAA,QAApDvB,IAAoD;AAAA;AACnE;AACEC,MAAAA,OAAO,EACLD,IAAI,CAACC,OAAL,IACA;AAHJ,OAIKD,IAJL;AAMAE,IAAAA,MAAM,CAACC,cAAP,mDAA4BoB,8BAA8B,CAACnB,SAA3D;AAPmE;AAQpE;;;EAT0CL,mB;;IAYvCyB,mB;;;;;AACJ,iCAAqE;AAAA;;AAAA,qFAAJ,EAAI;;AAAA,QAApDxB,IAAoD;AAAA;AACnE;AACEC,MAAAA,OAAO,EAAED,IAAI,CAACC,OAAL,IAAgB;AAD3B,OAEKD,IAFL;AAIAE,IAAAA,MAAM,CAACC,cAAP,mDAA4BqB,mBAAmB,CAACpB,SAAhD;AALmE;AAMpE;;;EAP+BL,mB;;IAU5B0B,gC;;;;;AACJ,8CAAqE;AAAA;;AAAA,qFAAJ,EAAI;;AAAA,QAApDzB,IAAoD;AAAA;AACnE;AACEC,MAAAA,OAAO,EAAED,IAAI,CAACC,OAAL,IAAgB;AAD3B,OAEKD,IAFL;AAIAE,IAAAA,MAAM,CAACC,cAAP,mDAA4BsB,gCAAgC,CAACrB,SAA7D;AALmE;AAMpE;;;EAP4CL,mB;;eAUhC;AACbmB,EAAAA,kBAAkB,EAAlBA,kBADa;AAEbV,EAAAA,yBAAyB,EAAzBA,yBAFa;AAGbE,EAAAA,iBAAiB,EAAjBA,iBAHa;AAIbC,EAAAA,uBAAuB,EAAvBA,uBAJa;AAKbC,EAAAA,uBAAuB,EAAvBA,uBALa;AAMbC,EAAAA,mBAAmB,EAAnBA,mBANa;AAObC,EAAAA,uBAAuB,EAAvBA,uBAPa;AAQbC,EAAAA,gCAAgC,EAAhCA,gCARa;AASbC,EAAAA,6BAA6B,EAA7BA,6BATa;AAUbC,EAAAA,qBAAqB,EAArBA,qBAVa;AAWbI,EAAAA,aAAa,EAAbA,aAXa;AAYbC,EAAAA,yBAAyB,EAAzBA,yBAZa;AAabC,EAAAA,8BAA8B,EAA9BA,8BAba;AAcbC,EAAAA,mBAAmB,EAAnBA,mBAda;AAebC,EAAAA,gCAAgC,EAAhCA,gCAfa;AAgBbL,EAAAA,wBAAwB,EAAxBA,wBAhBa;AAiBbX,EAAAA,0BAA0B,EAA1BA,0BAjBa;AAkBbU,EAAAA,uBAAuB,EAAvBA,uBAlBa;AAmBbpB,EAAAA,mBAAmB,EAAnBA;AAnBa,C","sourcesContent":["/* tslint:disable max-classes-per-file */\ninterface WalletProviderErrorInterface extends Partial<Error> {\n  message: string\n  code?: number\n}\n\nclass WalletProviderError extends Error {\n  public code?: number\n  constructor(args: WalletProviderErrorInterface) {\n    super(args.message)\n    Object.setPrototypeOf(this, WalletProviderError.prototype)\n    if (args.code) this.code = args.code\n  }\n\n  toJSON(): WalletProviderErrorInterface {\n    const res: WalletProviderErrorInterface = { message: this.message }\n    if (this.code) res.code = this.code\n    return res\n  }\n}\n\nclass LedgerLostConnectionError extends WalletProviderError {\n  constructor({ ...args }: Partial<WalletProviderErrorInterface> = {}) {\n    super({\n      message: args.message || 'connection lost',\n      ...args,\n    })\n    Object.setPrototypeOf(this, LedgerLostConnectionError.prototype)\n  }\n}\n\nclass TransportNotSupportedError extends WalletProviderError {\n  constructor({ ...args }: Partial<WalletProviderErrorInterface> = {}) {\n    super({\n      message: args.message || 'transport not supported by device',\n      ...args,\n    })\n    Object.setPrototypeOf(this, TransportNotSupportedError.prototype)\n  }\n}\n\nclass LedgerReplugError extends WalletProviderError {\n  constructor({ ...args }: Partial<WalletProviderErrorInterface> = {}) {\n    super({\n      message: args.message || 'unknown',\n      ...args,\n    })\n    Object.setPrototypeOf(this, LedgerReplugError.prototype)\n  }\n}\n\nclass LedgerDisconnectedError extends WalletProviderError {\n  constructor({ ...args }: Partial<WalletProviderErrorInterface> = {}) {\n    super({\n      message: args.message || 'ledger device disconnected',\n      ...args,\n    })\n    Object.setPrototypeOf(this, LedgerDisconnectedError.prototype)\n  }\n}\n\nclass LedgerInUseByAnotherApp extends WalletProviderError {\n  constructor({ ...args }: Partial<WalletProviderErrorInterface> = {}) {\n    super({\n      message: args.message || 'ledger device in use by another app',\n      ...args,\n    })\n    Object.setPrototypeOf(this, LedgerInUseByAnotherApp.prototype)\n  }\n}\n\nclass LedgerNotFoundError extends WalletProviderError {\n  constructor({ ...args }: Partial<WalletProviderErrorInterface> = {}) {\n    super({\n      message: args.message || 'ledger device not found',\n      ...args,\n    })\n    Object.setPrototypeOf(this, LedgerNotFoundError.prototype)\n  }\n}\n\nclass LedgerDeviceLockedError extends WalletProviderError {\n  constructor({ ...args }: Partial<WalletProviderErrorInterface> = {}) {\n    super({\n      message: args.message || 'ledger device locked',\n      ...args,\n    })\n    Object.setPrototypeOf(this, LedgerDeviceLockedError.prototype)\n  }\n}\n\nclass LedgerFilecoinAppBadVersionError extends WalletProviderError {\n  constructor({ ...args }: Partial<WalletProviderErrorInterface> = {}) {\n    super({\n      message: args.message || 'bad filecoin app version on ledger device',\n      ...args,\n    })\n    Object.setPrototypeOf(this, LedgerFilecoinAppBadVersionError.prototype)\n  }\n}\n\nclass LedgerFilecoinAppNotOpenError extends WalletProviderError {\n  constructor({ ...args }: Partial<WalletProviderErrorInterface> = {}) {\n    super({\n      message: args.message || 'filecoin app not open on device',\n      ...args,\n    })\n    Object.setPrototypeOf(this, LedgerFilecoinAppNotOpenError.prototype)\n  }\n}\n\nclass LedgerDeviceBusyError extends WalletProviderError {\n  constructor({ ...args }: Partial<WalletProviderErrorInterface> = {}) {\n    super({\n      message: args.message || 'ledger device locked or busy',\n      ...args,\n    })\n    Object.setPrototypeOf(this, LedgerDeviceBusyError.prototype)\n  }\n}\n\nclass InvalidParamsError extends WalletProviderError {\n  constructor({ ...args }: Partial<WalletProviderErrorInterface> = {}) {\n    super({\n      message: args.message || 'invalid params',\n      ...args,\n    })\n    Object.setPrototypeOf(this, InvalidParamsError.prototype)\n  }\n}\n\nclass UnsupportedKeyTypeError extends WalletProviderError {\n  constructor({ ...args }: Partial<WalletProviderErrorInterface> = {}) {\n    super({\n      message: args.message || 'unsupported key type',\n      ...args,\n    })\n    Object.setPrototypeOf(this, UnsupportedKeyTypeError.prototype)\n  }\n}\n\nclass TransactionRejectedError extends WalletProviderError {\n  constructor({ ...args }: Partial<WalletProviderErrorInterface> = {}) {\n    super({\n      message: args.message || 'Transaction rejected',\n      ...args,\n    })\n    Object.setPrototypeOf(this, TransactionRejectedError.prototype)\n  }\n}\n\nclass MetaMaskError extends WalletProviderError {\n  constructor({ ...args }: Partial<WalletProviderErrorInterface> = {}) {\n    super({\n      message: args.message || 'MetaMask error',\n      ...args,\n    })\n    Object.setPrototypeOf(this, MetaMaskError.prototype)\n  }\n}\n\nclass MetaMaskNotInstalledError extends WalletProviderError {\n  constructor({ ...args }: Partial<WalletProviderErrorInterface> = {}) {\n    super({\n      message: args.message || 'MetaMask not installed',\n      ...args,\n    })\n    Object.setPrototypeOf(this, MetaMaskNotInstalledError.prototype)\n  }\n}\n\nclass MetaMaskSnapsNotSupportedError extends WalletProviderError {\n  constructor({ ...args }: Partial<WalletProviderErrorInterface> = {}) {\n    super({\n      message:\n        args.message ||\n        'The installed version of MetaMask does not support Snaps',\n      ...args,\n    })\n    Object.setPrototypeOf(this, MetaMaskSnapsNotSupportedError.prototype)\n  }\n}\n\nclass MetaMaskLockedError extends WalletProviderError {\n  constructor({ ...args }: Partial<WalletProviderErrorInterface> = {}) {\n    super({\n      message: args.message || 'MetaMask locked',\n      ...args,\n    })\n    Object.setPrototypeOf(this, MetaMaskLockedError.prototype)\n  }\n}\n\nclass MetaMaskFilSnapNotInstalledError extends WalletProviderError {\n  constructor({ ...args }: Partial<WalletProviderErrorInterface> = {}) {\n    super({\n      message: args.message || 'FILSnap not installed',\n      ...args,\n    })\n    Object.setPrototypeOf(this, MetaMaskFilSnapNotInstalledError.prototype)\n  }\n}\n\nexport default {\n  InvalidParamsError,\n  LedgerLostConnectionError,\n  LedgerReplugError,\n  LedgerDisconnectedError,\n  LedgerInUseByAnotherApp,\n  LedgerNotFoundError,\n  LedgerDeviceLockedError,\n  LedgerFilecoinAppBadVersionError,\n  LedgerFilecoinAppNotOpenError,\n  LedgerDeviceBusyError,\n  MetaMaskError,\n  MetaMaskNotInstalledError,\n  MetaMaskSnapsNotSupportedError,\n  MetaMaskLockedError,\n  MetaMaskFilSnapNotInstalledError,\n  TransactionRejectedError,\n  TransportNotSupportedError,\n  UnsupportedKeyTypeError,\n  WalletProviderError,\n}\n"],"file":"errors.js"}