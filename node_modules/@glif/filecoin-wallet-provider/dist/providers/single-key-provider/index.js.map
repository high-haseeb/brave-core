{"version":3,"sources":["../../../src/providers/single-key-provider/index.ts"],"names":["SECP256K1KeyProvider","privateKey","errors","InvalidParamsError","message","mainAddress","signingTools","keyRecover","address","_","__","coinType","CoinType","MAIN","TEST","slice","from","addressWithoutCoinType","includes","useTestCoinType","private_hexstring","msg","Message","fromLotusType","Error","undefined","transactionSign","toZondaxType","Buffer","toString","signature","Signature","Type","type","Data","data"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;AAAA;;AAKA;;AACA;;AAEA;;;;;;;;IAEaA,oB;AAMX,gCAAYC,UAAZ,EAAgC;AAAA;;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA,mDAFhB,sBAEgB;;AAC9B,QAAI,CAACA,UAAL,EAAiB;AACf,YAAM,IAAIC,eAAOC,kBAAX,CAA8B;AAClCC,QAAAA,OAAO,EAAE;AADyB,OAA9B,CAAN;AAGD;;AACD,8DAAmBH,UAAnB;AACA,SAAKI,WAAL,GAAmBC,eAAaC,UAAb,CAAwBN,UAAxB,EAAoC,KAApC,EAA2CO,OAA9D;AACD;;;;;wHAGCC,C,EACAC,E;;;;;;;AACAC,gBAAAA,Q,2DAAqBC,0BAASC,I;;sBAE1BF,QAAQ,KAAKC,0BAASE,I;;;;;iDACjB,YAAK,KAAKT,WAAL,CAAiBU,KAAjB,CAAuB,CAAvB,CAAL,E;;;iDAGF,CAAC,KAAKV,WAAN,C;;;;;;;;;;;;;;;;;;;kHAGEW,I,EAAcZ,O;;;;;;;AACjBa,gBAAAA,sB,GAAyBD,IAAI,CAACD,KAAL,CAAW,CAAX,C;;oBAE1B,KAAKV,WAAL,CAAiBa,QAAjB,CAA0BD,sBAA1B,C;;;;;sBACG,IAAIf,eAAOC,kBAAX,CAA8B;AAClCC,kBAAAA,OAAO,EAAE;AADyB,iBAA9B,C;;;AAKFe,gBAAAA,e,GAAmBH,IAAI,CAAC,CAAD,CAAL,KAA0BJ,0BAASE,I;wCAC7BR,eAAaC,UAAb,wCAC5B,IAD4B,gBAE5BY,eAF4B,C,EAAtBC,iB,yBAAAA,iB;;AAONC,gBAAAA,GAAG,GAAGC,yBAAQC,aAAR,CAAsBnB,OAAtB,CAAN;;;;;;;sBAEM,IAAIF,eAAOC,kBAAX,CACJ,wBAAeqB,KAAf,GACI;AACEpB,kBAAAA,OAAO,wDAAiD,aAAIA,OAArD;AADT,iBADJ,GAIIqB,SALA,C;;;uBAScnB,eAAaoB,eAAb,CACpBL,GAAG,CAACM,YAAJ,EADoB,EAEpBC,MAAM,CAACZ,IAAP,CAAYI,iBAAZ,EAA+B,KAA/B,EAAsCS,QAAtC,CAA+C,QAA/C,CAFoB,C,EAAdC,S,QAAAA,S;kDAKD;AACLR,kBAAAA,OAAO,EAAElB,OADJ;AAEL2B,kBAAAA,SAAS,EAAE;AACTC,oBAAAA,IAAI,EAAEF,SAAS,CAACG,IADP;AAETC,oBAAAA,IAAI,EAAEJ,SAAS,CAACK;AAFP;AAFN,iB","sourcesContent":["import {\n  LotusMessage,\n  SignedLotusMessage,\n  Message,\n} from '@glif/filecoin-message'\nimport { CoinType } from '@glif/filecoin-address'\nimport signingTools from '@zondax/filecoin-signing-tools/js'\nimport { WalletSubProvider } from '../../wallet-sub-provider'\nimport { errors } from '../../errors'\n\nexport class SECP256K1KeyProvider implements WalletSubProvider {\n  #privateKey: string\n  public mainAddress: string\n\n  readonly type = 'SINGLE_KEY_SECP256K1'\n\n  constructor(privateKey: string) {\n    if (!privateKey) {\n      throw new errors.InvalidParamsError({\n        message: 'Must pass private key string to single key provider instance',\n      })\n    }\n    this.#privateKey = privateKey\n    this.mainAddress = signingTools.keyRecover(privateKey, false).address\n  }\n\n  async getAccounts(\n    _: number,\n    __: number,\n    coinType: CoinType = CoinType.MAIN,\n  ): Promise<string[]> {\n    if (coinType === CoinType.TEST) {\n      return [`t${this.mainAddress.slice(1)}`]\n    }\n\n    return [this.mainAddress]\n  }\n\n  async sign(from: string, message: LotusMessage): Promise<SignedLotusMessage> {\n    const addressWithoutCoinType = from.slice(1)\n\n    if (!this.mainAddress.includes(addressWithoutCoinType)) {\n      throw new errors.InvalidParamsError({\n        message: 'Invalid from address for private key',\n      })\n    }\n\n    const useTestCoinType = (from[0] as CoinType) === CoinType.TEST\n    const { private_hexstring } = signingTools.keyRecover(\n      this.#privateKey,\n      useTestCoinType,\n    )\n\n    let msg\n    try {\n      msg = Message.fromLotusType(message)\n    } catch (err) {\n      throw new errors.InvalidParamsError(\n        err instanceof Error\n          ? {\n              message: `Invalid message params passed to sign call: ${err.message}`,\n            }\n          : undefined,\n      )\n    }\n\n    const { signature } = signingTools.transactionSign(\n      msg.toZondaxType(),\n      Buffer.from(private_hexstring, 'hex').toString('base64'),\n    ) as { signature: { data: string; type: number } }\n\n    return {\n      Message: message,\n      Signature: {\n        Type: signature.type,\n        Data: signature.data,\n      },\n    }\n  }\n}\n"],"file":"index.js"}