"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.extractCoinTypeFromPath = exports.createPath = exports.coinTypeCode = void 0;
Object.defineProperty(exports, "validatePath", {
  enumerable: true,
  get: function get() {
    return _validatePath["default"];
  }
});

var _slicedToArray2 = _interopRequireDefault(require("@babel/runtime/helpers/slicedToArray"));

var _filecoinAddress = require("@glif/filecoin-address");

var _validatePath = _interopRequireDefault(require("./validatePath"));

/* tslint:disable no-shadowed-variable */
var MAINNET_PATH_CODE = 461;
var TESTNET_PATH_CODE = 1;

var createPath = function createPath(coinTypeCode, i) {
  if (coinTypeCode !== MAINNET_PATH_CODE && coinTypeCode !== TESTNET_PATH_CODE) throw new Error('Invalid cointype code passed');
  return "m/44'/".concat(coinTypeCode, "'/0'/0/").concat(i);
};

exports.createPath = createPath;

var extractCoinTypeFromPath = function extractCoinTypeFromPath(path) {
  var _path$split = path.split('/'),
      _path$split2 = (0, _slicedToArray2["default"])(_path$split, 5),
      coinType = _path$split2[2];

  var bip44Code = coinType.replace("'", '');
  if (Number(bip44Code) === 1) return _filecoinAddress.CoinType.TEST;
  if (Number(bip44Code) === 461) return _filecoinAddress.CoinType.MAIN;
  throw new Error('Invalid path passed');
};

exports.extractCoinTypeFromPath = extractCoinTypeFromPath;

var coinTypeCode = function coinTypeCode(coinType) {
  if (coinType === 't') return 1;
  if (coinType === 'f') return 461;
  throw new Error('Unrecognized CoinType');
};

exports.coinTypeCode = coinTypeCode;
//# sourceMappingURL=index.js.map