var __rest = (this && this.__rest) || function (s, e) {
    var t = {};
    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)
        t[p] = s[p];
    if (s != null && typeof Object.getOwnPropertySymbols === "function")
        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {
            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))
                t[p[i]] = s[p[i]];
        }
    return t;
};
import * as React from 'react';
import { StyledDialogWrapper, StyledDialog, StyledFooter, StyledCancelContainer } from './style';
import Button from '../../buttonsIndicators/button';
export default class AlertBox extends React.PureComponent {
    render() {
        const _a = this.props, { testId, children } = _a, buttonProps = __rest(_a, ["testId", "children"]);
        const { colorType, onClickCancel, cancelString, onClickOk, okString } = buttonProps;
        return (React.createElement(StyledDialogWrapper, null,
            React.createElement(StyledDialog, { "data-test-id": testId },
                React.createElement("div", null, children),
                React.createElement(StyledFooter, null,
                    React.createElement(StyledCancelContainer, null, cancelString
                        ? React.createElement(Button, { type: colorType, level: 'secondary', onClick: onClickCancel, text: cancelString })
                        : null),
                    React.createElement(Button, { type: colorType, onClick: onClickOk, text: okString })))));
    }
}
AlertBox.defaultProps = {
    colorType: 'accent'
};
//# sourceMappingURL=index.js.map