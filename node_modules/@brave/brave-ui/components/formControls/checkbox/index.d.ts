import * as React from 'react';
export type Type = 'dark' | 'light';
export type Size = 'big' | 'small';
export interface Props {
    value: {
        [key: string]: boolean;
    };
    id?: string;
    testId?: string;
    children: React.ReactNode;
    multiple?: boolean;
    disabled?: boolean;
    type?: Type;
    size?: Size;
    onChange?: (key: string, selected: boolean, child: React.ReactNode, all: {
        [key: string]: boolean;
    }) => void;
}
export default class Checkbox extends React.PureComponent<Props, {}> {
    static defaultProps: {
        type: string;
        size: string;
        disabled: boolean;
        multiple: boolean;
    };
    generateChecks: (children: React.ReactNode) => JSX.Element[] | null | undefined;
    onOptionClick: (key: string, child: React.ReactNode, selected: boolean) => void;
    render(): JSX.Element;
}
