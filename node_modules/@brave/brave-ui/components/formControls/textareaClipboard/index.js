import * as React from 'react';
import { ClipboardOIcon } from '../../icons';
import { StyledText, StyledWrapper, StyledArea, StyledFooter, StyledCopyToClipboard, StyledClipboardButton } from './style';
export default class TextAreaClipboard extends React.PureComponent {
    constructor(props) {
        super(props);
        this.onCopyToClipboard = () => {
            navigator.clipboard.writeText(this.value);
            this.setState({ copiedStringVisible: true });
        };
        this.onAnimationEnd = () => {
            this.setState({ copiedStringVisible: false });
        };
        this.state = { copiedStringVisible: false };
    }
    get emptyWordCount() {
        return this.props.value === '' || this.props.defaultValue === '';
    }
    get value() {
        return this.props.value || this.props.defaultValue;
    }
    get wordCount() {
        if (!this.value ||
            this.emptyWordCount ||
            this.value.match(/\S+/g) === null) {
            return 0;
        }
        return this.value.match(/\S+/g).length;
    }
    render() {
        const { id, value, defaultValue, readOnly, placeholder, disabled, onChange, copiedString, wordCountString } = this.props;
        const { copiedStringVisible } = this.state;
        return (React.createElement(StyledWrapper, { id: id },
            React.createElement(StyledArea, { disabled: disabled, value: value, readOnly: readOnly, placeholder: placeholder, defaultValue: defaultValue, onChange: onChange }),
            React.createElement(StyledFooter, null,
                wordCountString,
                " ",
                this.wordCount,
                copiedString !== undefined
                    ? React.createElement(StyledCopyToClipboard, null,
                        React.createElement(StyledText, { visible: copiedStringVisible, onAnimationEnd: this.onAnimationEnd }, copiedString),
                        React.createElement(StyledClipboardButton, { onClick: this.onCopyToClipboard },
                            React.createElement(ClipboardOIcon, null)))
                    : null)));
    }
}
//# sourceMappingURL=index.js.map