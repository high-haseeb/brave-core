import * as React from 'react';
import { StyledLabel, StyledCircle, StyledText, StyledFill, StyledInput } from './style';
export default class Radio extends React.PureComponent {
    constructor() {
        super(...arguments);
        this.generateChecks = (children) => {
            const self = this;
            return React.Children.map(children, (child, i) => {
                if (child.props['data-value'] === undefined) {
                    return null;
                }
                const element = child.props.children;
                const key = child.props['data-value'];
                const selected = self.props.value[key] || false;
                return (React.createElement(StyledLabel, { key: `option-${i}`, onClick: !self.props.disabled ? self.onOptionClick.bind(self, key, child, selected) : undefined, size: self.props.size },
                    React.createElement(StyledCircle, { selected: selected, disabled: self.props.disabled, size: self.props.size }, selected ? React.createElement(StyledFill, { size: self.props.size }) : null),
                    React.createElement(StyledText, { disabled: self.props.disabled, size: self.props.size }, element),
                    React.createElement(StyledInput, { type: 'radio', checked: selected, readOnly: true })));
            });
        };
        this.onOptionClick = (key, child, selected) => {
            if (!this.props.onChange) {
                return;
            }
            let newState = {};
            if (!this.props.value[key]) {
                Object.keys(this.props.value).map((item) => {
                    newState[item] = key === item ? !selected : false;
                });
            }
            this.props.onChange(key, !selected, child, newState);
        };
    }
    render() {
        const { id, children } = this.props;
        const numChildren = React.Children.count(children);
        return (React.createElement("div", { id: id }, numChildren > 0
            ? this.generateChecks(children)
            : null));
    }
}
Radio.defaultProps = {
    size: 'small',
    disabled: false
};
//# sourceMappingURL=index.js.map