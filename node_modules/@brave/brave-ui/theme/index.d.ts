import * as React from 'react';
import * as styledComponents from 'styled-components';
import { BraveThemedStyledProps as ThemedStyledProps } from './theme-interface';
declare const styled: styledComponents.ThemedStyledInterface<any>, css: styledComponents.ThemedCssFunction<any>, createGlobalStyle: <P extends object = {}>(first: TemplateStringsArray | styledComponents.CSSObject | styledComponents.InterpolationFunction<styledComponents.ThemedStyledProps<P, any>>, ...interpolations: styledComponents.Interpolation<styledComponents.ThemedStyledProps<P, any>>[]) => styledComponents.GlobalStyleComponent<P, any>, keyframes: (strings: TemplateStringsArray | styledComponents.CSSKeyframes, ...interpolations: styledComponents.SimpleInterpolation[]) => styledComponents.Keyframes, withTheme: styledComponents.WithThemeFnInterface<any>, ThemeProvider: styledComponents.ThemeProviderComponent<any, any>, ThemeConsumer: React.Consumer<any>, ThemeContext: React.Context<any>, useTheme: () => any, isStyledComponent: typeof styledComponents.isStyledComponent, ServerStyleSheet: typeof styledComponents.ServerStyleSheet, StyleSheetManager: typeof styledComponents.StyleSheetManager;
export default styled;
declare const TestThemeProvider: (props: any) => JSX.Element;
export { css, createGlobalStyle, keyframes, withTheme, ThemeProvider, ThemeConsumer, ThemeContext, useTheme, isStyledComponent, ServerStyleSheet, StyleSheetManager, ThemedStyledProps, TestThemeProvider };
