import { S as SvelteComponent, i as init, s as safe_not_equal, a as append_styles, c as create_slot, e as element, b as space, X as svg_element, d as attr, t as toggle_class, C as set_style, f as insert, g as append, u as update_slot_base, m as get_all_dirty_from_scope, n as get_slot_changes, k as transition_in, h as transition_out, o as detach } from './a4e1d370.js';

/* src/components/progress/progressRing.svelte generated by Svelte v4.2.19 */

function add_css(target) {
	append_styles(target, "svelte-sbi9j5", ":host{display:inline-block}@keyframes svelte-sbi9j5-spin{from{transform:rotate(0deg)}to{transform:rotate(360deg)}}.leo-progressring.svelte-sbi9j5.svelte-sbi9j5{--size:var(--leo-progressring-size, 48px);--spin-rate:var(--leo-progressring-spin-rate, 1s);--transition-duration:var(--leo-progressring-transition-duration, 0.2s);--stroke-color:var(\n    --leo-progressring-color,\n    var(--leo-color-button-background)\n  );--stroke-width:var(--leo-progressring-stroke-width, 4px);--radius:24px;--normalized-radius:calc(var(--radius) - var(--stroke-width));--circumference:calc(var(--normalized-radius) * 2 * 3.141592);--background-color:var(--stroke-color);width:var(--size);height:var(--size);position:relative;display:flex;flex-direction:column;align-items:center;justify-content:center}.leo-progressring.svelte-sbi9j5 svg.svelte-sbi9j5{position:absolute;left:0;top:0;right:0;bottom:0}.leo-progressring.spin.svelte-sbi9j5 svg.svelte-sbi9j5{animation-duration:var(--spin-rate);animation-name:svelte-sbi9j5-spin;animation-iteration-count:infinite;animation-timing-function:cubic-bezier(0.17, 0.67, 0.83, 0.67)}.leo-progressring.svelte-sbi9j5 circle.svelte-sbi9j5{transform:rotate(270deg);transform-origin:50% 50%;transition:stroke-dashoffset var(--transition-duration);stroke-linecap:round;r:var(--normalized-radius);cx:var(--radius);cy:var(--radius);stroke-width:var(--stroke-width);fill:transparent}.leo-progressring__background.svelte-sbi9j5.svelte-sbi9j5{filter:opacity(0.3);stroke:var(--background-color)}.leo-progressring__ring.svelte-sbi9j5.svelte-sbi9j5{stroke-dasharray:var(--circumference) var(--circumference);stroke-dashoffset:calc(var(--circumference) * (1 - var(--progress)));stroke:var(--stroke-color)}");
}

function create_fragment(ctx) {
	let div;
	let t;
	let svg;
	let circle0;
	let circle1;
	let current;
	const default_slot_template = /*#slots*/ ctx[3].default;
	const default_slot = create_slot(default_slot_template, ctx, /*$$scope*/ ctx[2], null);

	return {
		c() {
			div = element("div");
			if (default_slot) default_slot.c();
			t = space();
			svg = svg_element("svg");
			circle0 = svg_element("circle");
			circle1 = svg_element("circle");
			attr(circle0, "class", "leo-progressring__background svelte-sbi9j5");
			attr(circle1, "class", "leo-progressring__ring svelte-sbi9j5");
			attr(svg, "viewBox", "0 0 48 48");
			attr(svg, "class", "svelte-sbi9j5");
			attr(div, "class", "leo-progressring svelte-sbi9j5");
			toggle_class(div, "spin", /*mode*/ ctx[1] === 'indeterminate');
			set_style(div, "--progress", /*progress*/ ctx[0]);
		},
		m(target, anchor) {
			insert(target, div, anchor);

			if (default_slot) {
				default_slot.m(div, null);
			}

			append(div, t);
			append(div, svg);
			append(svg, circle0);
			append(svg, circle1);
			current = true;
		},
		p(ctx, [dirty]) {
			if (default_slot) {
				if (default_slot.p && (!current || dirty & /*$$scope*/ 4)) {
					update_slot_base(
						default_slot,
						default_slot_template,
						ctx,
						/*$$scope*/ ctx[2],
						!current
						? get_all_dirty_from_scope(/*$$scope*/ ctx[2])
						: get_slot_changes(default_slot_template, /*$$scope*/ ctx[2], dirty, null),
						null
					);
				}
			}

			if (!current || dirty & /*mode*/ 2) {
				toggle_class(div, "spin", /*mode*/ ctx[1] === 'indeterminate');
			}

			if (dirty & /*progress*/ 1) {
				set_style(div, "--progress", /*progress*/ ctx[0]);
			}
		},
		i(local) {
			if (current) return;
			transition_in(default_slot, local);
			current = true;
		},
		o(local) {
			transition_out(default_slot, local);
			current = false;
		},
		d(detaching) {
			if (detaching) {
				detach(div);
			}

			if (default_slot) default_slot.d(detaching);
		}
	};
}

function instance($$self, $$props, $$invalidate) {
	let { $$slots: slots = {}, $$scope } = $$props;
	let { progress = 0 } = $$props;
	let { mode = 'indeterminate' } = $$props;

	$$self.$$set = $$props => {
		if ('progress' in $$props) $$invalidate(0, progress = $$props.progress);
		if ('mode' in $$props) $$invalidate(1, mode = $$props.mode);
		if ('$$scope' in $$props) $$invalidate(2, $$scope = $$props.$$scope);
	};

	$$self.$$.update = () => {
		if ($$self.$$.dirty & /*mode, progress*/ 3) {
			$$invalidate(0, progress = mode === 'indeterminate' ? 0.25 : progress);
		}
	};

	return [progress, mode, $$scope, slots];
}

class ProgressRing extends SvelteComponent {
	constructor(options) {
		super();
		init(this, options, instance, create_fragment, safe_not_equal, { progress: 0, mode: 1 }, add_css);
	}
}

export { ProgressRing as default };
//# sourceMappingURL=progressRing.js.map
