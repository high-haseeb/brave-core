{"version":3,"file":"input.js","sources":["../src/components/input/input.svelte"],"sourcesContent":["<script lang=\"ts\" context=\"module\">\n  export type InputEventDetail = {\n    innerEvent: Event & { target: HTMLInputElement }\n    value: string\n    valueAsNumber: number\n    valueAsDate: Date | null\n  }\n\n  export type InputEvent = (detail: InputEventDetail) => void\n</script>\n\n<script lang=\"ts\">\n  import type { SvelteHTMLElements } from 'svelte/elements'\n  import Button from '../button/button.svelte'\n  import FormItem, { type Mode, type Size } from '../formItem/formItem.svelte'\n  import Icon from '../icon/icon.svelte'\n\n  type OverrideProps = 'type' | 'value' | 'size' | 'class' | `on:${string}`\n  type LeoInputTypeAttribute =\n    | 'color'\n    | 'date'\n    | 'datetime-local'\n    | 'email'\n    | 'file'\n    | 'hidden'\n    | 'month'\n    | 'number'\n    | 'password'\n    | 'range'\n    | 'search'\n    | 'tel'\n    | 'text'\n    | 'time'\n    | 'url'\n    | 'week'\n  type $$Props = Omit<SvelteHTMLElements['input'], OverrideProps> & {\n    type?: LeoInputTypeAttribute\n    value?: string | number | boolean\n    size?: Size\n    showErrors?: boolean\n    mode?: Mode | undefined\n    onChange?: InputEvent\n    onInput?: InputEvent\n    onFocus?: InputEvent\n    onPaste?: InputEvent\n    onBlur?: InputEvent\n    onKeyDown?: InputEvent\n    onKeyPress?: InputEvent\n    onKeyUp?: InputEvent\n    onFocusIn?: InputEvent\n    onFocusOut?: InputEvent\n  }\n\n  /**\n   * The type of input to render. The Input component just supports a subset of\n   * those supported by the HTML Input element.\n   */\n  export let type: $$Props['type'] = 'text'\n\n  /**\n   * The value of the input control.\n   */\n  export let value: $$Props['value'] = ''\n\n  /*\n   * Whether the value is required. In addition to showing a required indicator,\n   * this performs some basic validation (i.e. is value truthy), and if it fails\n   * (and showErrors is true), the component will be rendered in its error\n   * state.\n   */\n  export let required = false\n\n  /**\n   * Whether the component is disabled.\n   */\n  export let disabled = false\n\n  /**\n   * The size of the input.\n   */\n  export let size: Size = 'normal'\n\n  /**\n   * Whether any errors the component has should be shown.\n   */\n  export let showErrors = false\n\n  /**\n   * The mode of the input.\n   */\n  export let mode: Mode | undefined = undefined\n\n  /**\n   * Placeholder text for the input.\n   */\n  export let placeholder = ''\n\n  // Unfortunately, e.target isn't typed properly by Svelte's type definitions\n  // in web components. This means we need to forward all the events we're\n  // interested in manually, inside our own wrapper.\n  export let onChange: InputEvent = undefined\n  export let onInput: InputEvent = undefined\n  export let onFocus: InputEvent = undefined\n  export let onBlur: InputEvent = undefined\n  export let onPaste: InputEvent = undefined\n  export let onKeyDown: InputEvent = undefined\n  export let onKeyUp: InputEvent = undefined\n  export let onKeyPress: InputEvent = undefined\n  export let onFocusIn: InputEvent = undefined\n  export let onFocusOut: InputEvent = undefined\n\n  function forward(handler: InputEvent) {\n    return (e: Event) => {\n      const event = e as Event & { target: HTMLInputElement }\n      handler?.({\n        value: value?.toString() ?? '',\n        valueAsDate: event.target.valueAsDate,\n        valueAsNumber: event.target.valueAsNumber,\n        innerEvent: event\n      })\n    }\n  }\n\n  const pickerIcons = {\n    date: 'calendar',\n    time: 'clock'\n  }\n\n  let input: HTMLInputElement | undefined = undefined\n  let hasErrorsInternal = false\n\n  function handleInput(e: Event & { currentTarget: HTMLInputElement }) {\n    value = e.currentTarget['value']\n    hasErrorsInternal = (required && !value) || !input?.checkValidity()\n  }\n</script>\n\n<FormItem\n  bind:required\n  bind:disabled\n  renderLabel={$$slots.default}\n  {size}\n  {mode}\n  error={($$slots.errors || hasErrorsInternal) && showErrors}\n>\n  <slot name=\"left-icon\" slot=\"left-icon\" />\n  <div class=\"input-container\">\n    <input\n      {...$$restProps}\n      class=\"leo-input\"\n      {disabled}\n      {type}\n      {value}\n      {placeholder}\n      tabindex={1}\n      bind:this={input}\n      on:input={handleInput}\n      on:change={forward(onChange)}\n      on:input={forward(onInput)}\n      on:focus={forward(onFocus)}\n      on:paste={forward(onPaste)}\n      on:blur={forward(onBlur)}\n      on:keydown={forward(onKeyDown)}\n      on:keypress={forward(onKeyPress)}\n      on:keyup={forward(onKeyUp)}\n      on:focusin={forward(onFocusIn)}\n      on:focusout={forward(onFocusOut)}\n    />\n    <div class=\"extra\">\n      <slot name=\"extra\" />\n    </div>\n  </div>\n  <slot name=\"right-icon\" slot=\"right-icon\">\n    {#if pickerIcons[type]}\n      <Button kind=\"plain-faint\" onClick={() => input?.showPicker()}>\n        <Icon name={pickerIcons[type]} />\n      </Button>\n    {/if}\n  </slot>\n  <slot slot=\"label\" />\n</FormItem>\n{#if showErrors}\n  <slot name=\"errors\" />\n{/if}\n\n<style lang=\"scss\">\n  .leo-input {\n    all: unset;\n    width: 100%;\n  }\n\n  .leo-input::-webkit-calendar-picker-indicator {\n    opacity: 0;\n    flex: 1;\n  }\n\n  .leo-input::placeholder {\n    color: currentColor;\n    opacity: 0.6;\n  }\n\n  .input-container {\n    flex: 1;\n\n    display: flex;\n    flex-direction: column;\n    justify-content: stretch;\n\n    cursor: text;\n  }\n\n  .extra {\n    color: var(--leo-color-text-secondary);\n  }\n</style>\n"],"names":[],"mappings":"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"}