{"version":3,"file":"applyTheme.js","sources":["../node_modules/@material/material-color-utilities/utils/math_utils.js","../node_modules/@material/material-color-utilities/utils/color_utils.js","../node_modules/@material/material-color-utilities/hct/viewing_conditions.js","../node_modules/@material/material-color-utilities/hct/cam16.js","../node_modules/@material/material-color-utilities/hct/hct_solver.js","../node_modules/@material/material-color-utilities/hct/hct.js","../node_modules/@material/material-color-utilities/blend/blend.js","../node_modules/@material/material-color-utilities/contrast/contrast.js","../node_modules/@material/material-color-utilities/dislike/dislike_analyzer.js","../node_modules/@material/material-color-utilities/dynamiccolor/dynamic_color.js","../node_modules/@material/material-color-utilities/scheme/variant.js","../node_modules/@material/material-color-utilities/dynamiccolor/contrast_curve.js","../node_modules/@material/material-color-utilities/dynamiccolor/tone_delta_pair.js","../node_modules/@material/material-color-utilities/dynamiccolor/material_dynamic_colors.js","../node_modules/@material/material-color-utilities/palettes/tonal_palette.js","../node_modules/@material/material-color-utilities/palettes/core_palette.js","../node_modules/@material/material-color-utilities/scheme/scheme.js","../node_modules/@material/material-color-utilities/utils/string_utils.js","../node_modules/@material/material-color-utilities/utils/theme_utils.js","../src/components/applyTheme.ts"],"sourcesContent":["/**\n * @license\n * Copyright 2021 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n// This file is automatically generated. Do not modify it.\n/**\n * Utility methods for mathematical operations.\n */\n/**\n * The signum function.\n *\n * @return 1 if num > 0, -1 if num < 0, and 0 if num = 0\n */\nexport function signum(num) {\n    if (num < 0) {\n        return -1;\n    }\n    else if (num === 0) {\n        return 0;\n    }\n    else {\n        return 1;\n    }\n}\n/**\n * The linear interpolation function.\n *\n * @return start if amount = 0 and stop if amount = 1\n */\nexport function lerp(start, stop, amount) {\n    return (1.0 - amount) * start + amount * stop;\n}\n/**\n * Clamps an integer between two integers.\n *\n * @return input when min <= input <= max, and either min or max\n * otherwise.\n */\nexport function clampInt(min, max, input) {\n    if (input < min) {\n        return min;\n    }\n    else if (input > max) {\n        return max;\n    }\n    return input;\n}\n/**\n * Clamps an integer between two floating-point numbers.\n *\n * @return input when min <= input <= max, and either min or max\n * otherwise.\n */\nexport function clampDouble(min, max, input) {\n    if (input < min) {\n        return min;\n    }\n    else if (input > max) {\n        return max;\n    }\n    return input;\n}\n/**\n * Sanitizes a degree measure as an integer.\n *\n * @return a degree measure between 0 (inclusive) and 360\n * (exclusive).\n */\nexport function sanitizeDegreesInt(degrees) {\n    degrees = degrees % 360;\n    if (degrees < 0) {\n        degrees = degrees + 360;\n    }\n    return degrees;\n}\n/**\n * Sanitizes a degree measure as a floating-point number.\n *\n * @return a degree measure between 0.0 (inclusive) and 360.0\n * (exclusive).\n */\nexport function sanitizeDegreesDouble(degrees) {\n    degrees = degrees % 360.0;\n    if (degrees < 0) {\n        degrees = degrees + 360.0;\n    }\n    return degrees;\n}\n/**\n * Sign of direction change needed to travel from one angle to\n * another.\n *\n * For angles that are 180 degrees apart from each other, both\n * directions have the same travel distance, so either direction is\n * shortest. The value 1.0 is returned in this case.\n *\n * @param from The angle travel starts from, in degrees.\n * @param to The angle travel ends at, in degrees.\n * @return -1 if decreasing from leads to the shortest travel\n * distance, 1 if increasing from leads to the shortest travel\n * distance.\n */\nexport function rotationDirection(from, to) {\n    const increasingDifference = sanitizeDegreesDouble(to - from);\n    return increasingDifference <= 180.0 ? 1.0 : -1.0;\n}\n/**\n * Distance of two points on a circle, represented using degrees.\n */\nexport function differenceDegrees(a, b) {\n    return 180.0 - Math.abs(Math.abs(a - b) - 180.0);\n}\n/**\n * Multiplies a 1x3 row vector with a 3x3 matrix.\n */\nexport function matrixMultiply(row, matrix) {\n    const a = row[0] * matrix[0][0] + row[1] * matrix[0][1] + row[2] * matrix[0][2];\n    const b = row[0] * matrix[1][0] + row[1] * matrix[1][1] + row[2] * matrix[1][2];\n    const c = row[0] * matrix[2][0] + row[1] * matrix[2][1] + row[2] * matrix[2][2];\n    return [a, b, c];\n}\n//# sourceMappingURL=math_utils.js.map","/**\n * @license\n * Copyright 2021 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n// This file is automatically generated. Do not modify it.\nimport * as mathUtils from './math_utils.js';\n/**\n * Color science utilities.\n *\n * Utility methods for color science constants and color space\n * conversions that aren't HCT or CAM16.\n */\nconst SRGB_TO_XYZ = [\n    [0.41233895, 0.35762064, 0.18051042],\n    [0.2126, 0.7152, 0.0722],\n    [0.01932141, 0.11916382, 0.95034478],\n];\nconst XYZ_TO_SRGB = [\n    [\n        3.2413774792388685,\n        -1.5376652402851851,\n        -0.49885366846268053,\n    ],\n    [\n        -0.9691452513005321,\n        1.8758853451067872,\n        0.04156585616912061,\n    ],\n    [\n        0.05562093689691305,\n        -0.20395524564742123,\n        1.0571799111220335,\n    ],\n];\nconst WHITE_POINT_D65 = [95.047, 100.0, 108.883];\n/**\n * Converts a color from RGB components to ARGB format.\n */\nexport function argbFromRgb(red, green, blue) {\n    return (255 << 24 | (red & 255) << 16 | (green & 255) << 8 | blue & 255) >>>\n        0;\n}\n/**\n * Converts a color from linear RGB components to ARGB format.\n */\nexport function argbFromLinrgb(linrgb) {\n    const r = delinearized(linrgb[0]);\n    const g = delinearized(linrgb[1]);\n    const b = delinearized(linrgb[2]);\n    return argbFromRgb(r, g, b);\n}\n/**\n * Returns the alpha component of a color in ARGB format.\n */\nexport function alphaFromArgb(argb) {\n    return argb >> 24 & 255;\n}\n/**\n * Returns the red component of a color in ARGB format.\n */\nexport function redFromArgb(argb) {\n    return argb >> 16 & 255;\n}\n/**\n * Returns the green component of a color in ARGB format.\n */\nexport function greenFromArgb(argb) {\n    return argb >> 8 & 255;\n}\n/**\n * Returns the blue component of a color in ARGB format.\n */\nexport function blueFromArgb(argb) {\n    return argb & 255;\n}\n/**\n * Returns whether a color in ARGB format is opaque.\n */\nexport function isOpaque(argb) {\n    return alphaFromArgb(argb) >= 255;\n}\n/**\n * Converts a color from ARGB to XYZ.\n */\nexport function argbFromXyz(x, y, z) {\n    const matrix = XYZ_TO_SRGB;\n    const linearR = matrix[0][0] * x + matrix[0][1] * y + matrix[0][2] * z;\n    const linearG = matrix[1][0] * x + matrix[1][1] * y + matrix[1][2] * z;\n    const linearB = matrix[2][0] * x + matrix[2][1] * y + matrix[2][2] * z;\n    const r = delinearized(linearR);\n    const g = delinearized(linearG);\n    const b = delinearized(linearB);\n    return argbFromRgb(r, g, b);\n}\n/**\n * Converts a color from XYZ to ARGB.\n */\nexport function xyzFromArgb(argb) {\n    const r = linearized(redFromArgb(argb));\n    const g = linearized(greenFromArgb(argb));\n    const b = linearized(blueFromArgb(argb));\n    return mathUtils.matrixMultiply([r, g, b], SRGB_TO_XYZ);\n}\n/**\n * Converts a color represented in Lab color space into an ARGB\n * integer.\n */\nexport function argbFromLab(l, a, b) {\n    const whitePoint = WHITE_POINT_D65;\n    const fy = (l + 16.0) / 116.0;\n    const fx = a / 500.0 + fy;\n    const fz = fy - b / 200.0;\n    const xNormalized = labInvf(fx);\n    const yNormalized = labInvf(fy);\n    const zNormalized = labInvf(fz);\n    const x = xNormalized * whitePoint[0];\n    const y = yNormalized * whitePoint[1];\n    const z = zNormalized * whitePoint[2];\n    return argbFromXyz(x, y, z);\n}\n/**\n * Converts a color from ARGB representation to L*a*b*\n * representation.\n *\n * @param argb the ARGB representation of a color\n * @return a Lab object representing the color\n */\nexport function labFromArgb(argb) {\n    const linearR = linearized(redFromArgb(argb));\n    const linearG = linearized(greenFromArgb(argb));\n    const linearB = linearized(blueFromArgb(argb));\n    const matrix = SRGB_TO_XYZ;\n    const x = matrix[0][0] * linearR + matrix[0][1] * linearG + matrix[0][2] * linearB;\n    const y = matrix[1][0] * linearR + matrix[1][1] * linearG + matrix[1][2] * linearB;\n    const z = matrix[2][0] * linearR + matrix[2][1] * linearG + matrix[2][2] * linearB;\n    const whitePoint = WHITE_POINT_D65;\n    const xNormalized = x / whitePoint[0];\n    const yNormalized = y / whitePoint[1];\n    const zNormalized = z / whitePoint[2];\n    const fx = labF(xNormalized);\n    const fy = labF(yNormalized);\n    const fz = labF(zNormalized);\n    const l = 116.0 * fy - 16;\n    const a = 500.0 * (fx - fy);\n    const b = 200.0 * (fy - fz);\n    return [l, a, b];\n}\n/**\n * Converts an L* value to an ARGB representation.\n *\n * @param lstar L* in L*a*b*\n * @return ARGB representation of grayscale color with lightness\n * matching L*\n */\nexport function argbFromLstar(lstar) {\n    const y = yFromLstar(lstar);\n    const component = delinearized(y);\n    return argbFromRgb(component, component, component);\n}\n/**\n * Computes the L* value of a color in ARGB representation.\n *\n * @param argb ARGB representation of a color\n * @return L*, from L*a*b*, coordinate of the color\n */\nexport function lstarFromArgb(argb) {\n    const y = xyzFromArgb(argb)[1];\n    return 116.0 * labF(y / 100.0) - 16.0;\n}\n/**\n * Converts an L* value to a Y value.\n *\n * L* in L*a*b* and Y in XYZ measure the same quantity, luminance.\n *\n * L* measures perceptual luminance, a linear scale. Y in XYZ\n * measures relative luminance, a logarithmic scale.\n *\n * @param lstar L* in L*a*b*\n * @return Y in XYZ\n */\nexport function yFromLstar(lstar) {\n    return 100.0 * labInvf((lstar + 16.0) / 116.0);\n}\n/**\n * Converts a Y value to an L* value.\n *\n * L* in L*a*b* and Y in XYZ measure the same quantity, luminance.\n *\n * L* measures perceptual luminance, a linear scale. Y in XYZ\n * measures relative luminance, a logarithmic scale.\n *\n * @param y Y in XYZ\n * @return L* in L*a*b*\n */\nexport function lstarFromY(y) {\n    return labF(y / 100.0) * 116.0 - 16.0;\n}\n/**\n * Linearizes an RGB component.\n *\n * @param rgbComponent 0 <= rgb_component <= 255, represents R/G/B\n * channel\n * @return 0.0 <= output <= 100.0, color channel converted to\n * linear RGB space\n */\nexport function linearized(rgbComponent) {\n    const normalized = rgbComponent / 255.0;\n    if (normalized <= 0.040449936) {\n        return normalized / 12.92 * 100.0;\n    }\n    else {\n        return Math.pow((normalized + 0.055) / 1.055, 2.4) * 100.0;\n    }\n}\n/**\n * Delinearizes an RGB component.\n *\n * @param rgbComponent 0.0 <= rgb_component <= 100.0, represents\n * linear R/G/B channel\n * @return 0 <= output <= 255, color channel converted to regular\n * RGB space\n */\nexport function delinearized(rgbComponent) {\n    const normalized = rgbComponent / 100.0;\n    let delinearized = 0.0;\n    if (normalized <= 0.0031308) {\n        delinearized = normalized * 12.92;\n    }\n    else {\n        delinearized = 1.055 * Math.pow(normalized, 1.0 / 2.4) - 0.055;\n    }\n    return mathUtils.clampInt(0, 255, Math.round(delinearized * 255.0));\n}\n/**\n * Returns the standard white point; white on a sunny day.\n *\n * @return The white point\n */\nexport function whitePointD65() {\n    return WHITE_POINT_D65;\n}\n/**\n * Return RGBA from a given int32 color\n *\n * @param argb ARGB representation of a int32 color.\n * @return RGBA representation of a int32 color.\n */\nexport function rgbaFromArgb(argb) {\n    const r = redFromArgb(argb);\n    const g = greenFromArgb(argb);\n    const b = blueFromArgb(argb);\n    const a = alphaFromArgb(argb);\n    return { r, g, b, a };\n}\n/**\n * Return int32 color from a given RGBA component\n *\n * @param rgba RGBA representation of a int32 color.\n * @returns ARGB representation of a int32 color.\n */\nexport function argbFromRgba({ r, g, b, a }) {\n    const rValue = clampComponent(r);\n    const gValue = clampComponent(g);\n    const bValue = clampComponent(b);\n    const aValue = clampComponent(a);\n    return (aValue << 24) | (rValue << 16) | (gValue << 8) | bValue;\n}\nfunction clampComponent(value) {\n    if (value < 0)\n        return 0;\n    if (value > 255)\n        return 255;\n    return value;\n}\nfunction labF(t) {\n    const e = 216.0 / 24389.0;\n    const kappa = 24389.0 / 27.0;\n    if (t > e) {\n        return Math.pow(t, 1.0 / 3.0);\n    }\n    else {\n        return (kappa * t + 16) / 116;\n    }\n}\nfunction labInvf(ft) {\n    const e = 216.0 / 24389.0;\n    const kappa = 24389.0 / 27.0;\n    const ft3 = ft * ft * ft;\n    if (ft3 > e) {\n        return ft3;\n    }\n    else {\n        return (116 * ft - 16) / kappa;\n    }\n}\n//# sourceMappingURL=color_utils.js.map","/**\n * @license\n * Copyright 2021 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport * as utils from '../utils/color_utils.js';\nimport * as math from '../utils/math_utils.js';\n/**\n * In traditional color spaces, a color can be identified solely by the\n * observer's measurement of the color. Color appearance models such as CAM16\n * also use information about the environment where the color was\n * observed, known as the viewing conditions.\n *\n * For example, white under the traditional assumption of a midday sun white\n * point is accurately measured as a slightly chromatic blue by CAM16. (roughly,\n * hue 203, chroma 3, lightness 100)\n *\n * This class caches intermediate values of the CAM16 conversion process that\n * depend only on viewing conditions, enabling speed ups.\n */\nexport class ViewingConditions {\n    /**\n     * Create ViewingConditions from a simple, physically relevant, set of\n     * parameters.\n     *\n     * @param whitePoint White point, measured in the XYZ color space.\n     *     default = D65, or sunny day afternoon\n     * @param adaptingLuminance The luminance of the adapting field. Informally,\n     *     how bright it is in the room where the color is viewed. Can be\n     *     calculated from lux by multiplying lux by 0.0586. default = 11.72,\n     *     or 200 lux.\n     * @param backgroundLstar The lightness of the area surrounding the color.\n     *     measured by L* in L*a*b*. default = 50.0\n     * @param surround A general description of the lighting surrounding the\n     *     color. 0 is pitch dark, like watching a movie in a theater. 1.0 is a\n     *     dimly light room, like watching TV at home at night. 2.0 means there\n     *     is no difference between the lighting on the color and around it.\n     *     default = 2.0\n     * @param discountingIlluminant Whether the eye accounts for the tint of the\n     *     ambient lighting, such as knowing an apple is still red in green light.\n     *     default = false, the eye does not perform this process on\n     *       self-luminous objects like displays.\n     */\n    static make(whitePoint = utils.whitePointD65(), adaptingLuminance = (200.0 / Math.PI) * utils.yFromLstar(50.0) / 100.0, backgroundLstar = 50.0, surround = 2.0, discountingIlluminant = false) {\n        const xyz = whitePoint;\n        const rW = xyz[0] * 0.401288 + xyz[1] * 0.650173 + xyz[2] * -0.051461;\n        const gW = xyz[0] * -0.250268 + xyz[1] * 1.204414 + xyz[2] * 0.045854;\n        const bW = xyz[0] * -0.002079 + xyz[1] * 0.048952 + xyz[2] * 0.953127;\n        const f = 0.8 + surround / 10.0;\n        const c = f >= 0.9 ? math.lerp(0.59, 0.69, (f - 0.9) * 10.0) :\n            math.lerp(0.525, 0.59, (f - 0.8) * 10.0);\n        let d = discountingIlluminant ?\n            1.0 :\n            f * (1.0 - (1.0 / 3.6) * Math.exp((-adaptingLuminance - 42.0) / 92.0));\n        d = d > 1.0 ? 1.0 : d < 0.0 ? 0.0 : d;\n        const nc = f;\n        const rgbD = [\n            d * (100.0 / rW) + 1.0 - d,\n            d * (100.0 / gW) + 1.0 - d,\n            d * (100.0 / bW) + 1.0 - d,\n        ];\n        const k = 1.0 / (5.0 * adaptingLuminance + 1.0);\n        const k4 = k * k * k * k;\n        const k4F = 1.0 - k4;\n        const fl = k4 * adaptingLuminance +\n            0.1 * k4F * k4F * Math.cbrt(5.0 * adaptingLuminance);\n        const n = utils.yFromLstar(backgroundLstar) / whitePoint[1];\n        const z = 1.48 + Math.sqrt(n);\n        const nbb = 0.725 / Math.pow(n, 0.2);\n        const ncb = nbb;\n        const rgbAFactors = [\n            Math.pow((fl * rgbD[0] * rW) / 100.0, 0.42),\n            Math.pow((fl * rgbD[1] * gW) / 100.0, 0.42),\n            Math.pow((fl * rgbD[2] * bW) / 100.0, 0.42),\n        ];\n        const rgbA = [\n            (400.0 * rgbAFactors[0]) / (rgbAFactors[0] + 27.13),\n            (400.0 * rgbAFactors[1]) / (rgbAFactors[1] + 27.13),\n            (400.0 * rgbAFactors[2]) / (rgbAFactors[2] + 27.13),\n        ];\n        const aw = (2.0 * rgbA[0] + rgbA[1] + 0.05 * rgbA[2]) * nbb;\n        return new ViewingConditions(n, aw, nbb, ncb, c, nc, rgbD, fl, Math.pow(fl, 0.25), z);\n    }\n    /**\n     * Parameters are intermediate values of the CAM16 conversion process. Their\n     * names are shorthand for technical color science terminology, this class\n     * would not benefit from documenting them individually. A brief overview\n     * is available in the CAM16 specification, and a complete overview requires\n     * a color science textbook, such as Fairchild's Color Appearance Models.\n     */\n    constructor(n, aw, nbb, ncb, c, nc, rgbD, fl, fLRoot, z) {\n        this.n = n;\n        this.aw = aw;\n        this.nbb = nbb;\n        this.ncb = ncb;\n        this.c = c;\n        this.nc = nc;\n        this.rgbD = rgbD;\n        this.fl = fl;\n        this.fLRoot = fLRoot;\n        this.z = z;\n    }\n}\n/** sRGB-like viewing conditions.  */\nViewingConditions.DEFAULT = ViewingConditions.make();\n//# sourceMappingURL=viewing_conditions.js.map","/**\n * @license\n * Copyright 2021 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport * as utils from '../utils/color_utils.js';\nimport * as math from '../utils/math_utils.js';\nimport { ViewingConditions } from './viewing_conditions.js';\n/**\n * CAM16, a color appearance model. Colors are not just defined by their hex\n * code, but rather, a hex code and viewing conditions.\n *\n * CAM16 instances also have coordinates in the CAM16-UCS space, called J*, a*,\n * b*, or jstar, astar, bstar in code. CAM16-UCS is included in the CAM16\n * specification, and should be used when measuring distances between colors.\n *\n * In traditional color spaces, a color can be identified solely by the\n * observer's measurement of the color. Color appearance models such as CAM16\n * also use information about the environment where the color was\n * observed, known as the viewing conditions.\n *\n * For example, white under the traditional assumption of a midday sun white\n * point is accurately measured as a slightly chromatic blue by CAM16. (roughly,\n * hue 203, chroma 3, lightness 100)\n */\nexport class Cam16 {\n    /**\n     * All of the CAM16 dimensions can be calculated from 3 of the dimensions, in\n     * the following combinations:\n     *      -  {j or q} and {c, m, or s} and hue\n     *      - jstar, astar, bstar\n     * Prefer using a static method that constructs from 3 of those dimensions.\n     * This constructor is intended for those methods to use to return all\n     * possible dimensions.\n     *\n     * @param hue\n     * @param chroma informally, colorfulness / color intensity. like saturation\n     *     in HSL, except perceptually accurate.\n     * @param j lightness\n     * @param q brightness; ratio of lightness to white point's lightness\n     * @param m colorfulness\n     * @param s saturation; ratio of chroma to white point's chroma\n     * @param jstar CAM16-UCS J coordinate\n     * @param astar CAM16-UCS a coordinate\n     * @param bstar CAM16-UCS b coordinate\n     */\n    constructor(hue, chroma, j, q, m, s, jstar, astar, bstar) {\n        this.hue = hue;\n        this.chroma = chroma;\n        this.j = j;\n        this.q = q;\n        this.m = m;\n        this.s = s;\n        this.jstar = jstar;\n        this.astar = astar;\n        this.bstar = bstar;\n    }\n    /**\n     * CAM16 instances also have coordinates in the CAM16-UCS space, called J*,\n     * a*, b*, or jstar, astar, bstar in code. CAM16-UCS is included in the CAM16\n     * specification, and is used to measure distances between colors.\n     */\n    distance(other) {\n        const dJ = this.jstar - other.jstar;\n        const dA = this.astar - other.astar;\n        const dB = this.bstar - other.bstar;\n        const dEPrime = Math.sqrt(dJ * dJ + dA * dA + dB * dB);\n        const dE = 1.41 * Math.pow(dEPrime, 0.63);\n        return dE;\n    }\n    /**\n     * @param argb ARGB representation of a color.\n     * @return CAM16 color, assuming the color was viewed in default viewing\n     *     conditions.\n     */\n    static fromInt(argb) {\n        return Cam16.fromIntInViewingConditions(argb, ViewingConditions.DEFAULT);\n    }\n    /**\n     * @param argb ARGB representation of a color.\n     * @param viewingConditions Information about the environment where the color\n     *     was observed.\n     * @return CAM16 color.\n     */\n    static fromIntInViewingConditions(argb, viewingConditions) {\n        const red = (argb & 0x00ff0000) >> 16;\n        const green = (argb & 0x0000ff00) >> 8;\n        const blue = (argb & 0x000000ff);\n        const redL = utils.linearized(red);\n        const greenL = utils.linearized(green);\n        const blueL = utils.linearized(blue);\n        const x = 0.41233895 * redL + 0.35762064 * greenL + 0.18051042 * blueL;\n        const y = 0.2126 * redL + 0.7152 * greenL + 0.0722 * blueL;\n        const z = 0.01932141 * redL + 0.11916382 * greenL + 0.95034478 * blueL;\n        const rC = 0.401288 * x + 0.650173 * y - 0.051461 * z;\n        const gC = -0.250268 * x + 1.204414 * y + 0.045854 * z;\n        const bC = -0.002079 * x + 0.048952 * y + 0.953127 * z;\n        const rD = viewingConditions.rgbD[0] * rC;\n        const gD = viewingConditions.rgbD[1] * gC;\n        const bD = viewingConditions.rgbD[2] * bC;\n        const rAF = Math.pow((viewingConditions.fl * Math.abs(rD)) / 100.0, 0.42);\n        const gAF = Math.pow((viewingConditions.fl * Math.abs(gD)) / 100.0, 0.42);\n        const bAF = Math.pow((viewingConditions.fl * Math.abs(bD)) / 100.0, 0.42);\n        const rA = (math.signum(rD) * 400.0 * rAF) / (rAF + 27.13);\n        const gA = (math.signum(gD) * 400.0 * gAF) / (gAF + 27.13);\n        const bA = (math.signum(bD) * 400.0 * bAF) / (bAF + 27.13);\n        const a = (11.0 * rA + -12.0 * gA + bA) / 11.0;\n        const b = (rA + gA - 2.0 * bA) / 9.0;\n        const u = (20.0 * rA + 20.0 * gA + 21.0 * bA) / 20.0;\n        const p2 = (40.0 * rA + 20.0 * gA + bA) / 20.0;\n        const atan2 = Math.atan2(b, a);\n        const atanDegrees = (atan2 * 180.0) / Math.PI;\n        const hue = atanDegrees < 0 ? atanDegrees + 360.0 :\n            atanDegrees >= 360 ? atanDegrees - 360.0 :\n                atanDegrees;\n        const hueRadians = (hue * Math.PI) / 180.0;\n        const ac = p2 * viewingConditions.nbb;\n        const j = 100.0 *\n            Math.pow(ac / viewingConditions.aw, viewingConditions.c * viewingConditions.z);\n        const q = (4.0 / viewingConditions.c) * Math.sqrt(j / 100.0) *\n            (viewingConditions.aw + 4.0) * viewingConditions.fLRoot;\n        const huePrime = hue < 20.14 ? hue + 360 : hue;\n        const eHue = 0.25 * (Math.cos((huePrime * Math.PI) / 180.0 + 2.0) + 3.8);\n        const p1 = (50000.0 / 13.0) * eHue * viewingConditions.nc * viewingConditions.ncb;\n        const t = (p1 * Math.sqrt(a * a + b * b)) / (u + 0.305);\n        const alpha = Math.pow(t, 0.9) *\n            Math.pow(1.64 - Math.pow(0.29, viewingConditions.n), 0.73);\n        const c = alpha * Math.sqrt(j / 100.0);\n        const m = c * viewingConditions.fLRoot;\n        const s = 50.0 *\n            Math.sqrt((alpha * viewingConditions.c) / (viewingConditions.aw + 4.0));\n        const jstar = ((1.0 + 100.0 * 0.007) * j) / (1.0 + 0.007 * j);\n        const mstar = (1.0 / 0.0228) * Math.log(1.0 + 0.0228 * m);\n        const astar = mstar * Math.cos(hueRadians);\n        const bstar = mstar * Math.sin(hueRadians);\n        return new Cam16(hue, c, j, q, m, s, jstar, astar, bstar);\n    }\n    /**\n     * @param j CAM16 lightness\n     * @param c CAM16 chroma\n     * @param h CAM16 hue\n     */\n    static fromJch(j, c, h) {\n        return Cam16.fromJchInViewingConditions(j, c, h, ViewingConditions.DEFAULT);\n    }\n    /**\n     * @param j CAM16 lightness\n     * @param c CAM16 chroma\n     * @param h CAM16 hue\n     * @param viewingConditions Information about the environment where the color\n     *     was observed.\n     */\n    static fromJchInViewingConditions(j, c, h, viewingConditions) {\n        const q = (4.0 / viewingConditions.c) * Math.sqrt(j / 100.0) *\n            (viewingConditions.aw + 4.0) * viewingConditions.fLRoot;\n        const m = c * viewingConditions.fLRoot;\n        const alpha = c / Math.sqrt(j / 100.0);\n        const s = 50.0 *\n            Math.sqrt((alpha * viewingConditions.c) / (viewingConditions.aw + 4.0));\n        const hueRadians = (h * Math.PI) / 180.0;\n        const jstar = ((1.0 + 100.0 * 0.007) * j) / (1.0 + 0.007 * j);\n        const mstar = (1.0 / 0.0228) * Math.log(1.0 + 0.0228 * m);\n        const astar = mstar * Math.cos(hueRadians);\n        const bstar = mstar * Math.sin(hueRadians);\n        return new Cam16(h, c, j, q, m, s, jstar, astar, bstar);\n    }\n    /**\n     * @param jstar CAM16-UCS lightness.\n     * @param astar CAM16-UCS a dimension. Like a* in L*a*b*, it is a Cartesian\n     *     coordinate on the Y axis.\n     * @param bstar CAM16-UCS b dimension. Like a* in L*a*b*, it is a Cartesian\n     *     coordinate on the X axis.\n     */\n    static fromUcs(jstar, astar, bstar) {\n        return Cam16.fromUcsInViewingConditions(jstar, astar, bstar, ViewingConditions.DEFAULT);\n    }\n    /**\n     * @param jstar CAM16-UCS lightness.\n     * @param astar CAM16-UCS a dimension. Like a* in L*a*b*, it is a Cartesian\n     *     coordinate on the Y axis.\n     * @param bstar CAM16-UCS b dimension. Like a* in L*a*b*, it is a Cartesian\n     *     coordinate on the X axis.\n     * @param viewingConditions Information about the environment where the color\n     *     was observed.\n     */\n    static fromUcsInViewingConditions(jstar, astar, bstar, viewingConditions) {\n        const a = astar;\n        const b = bstar;\n        const m = Math.sqrt(a * a + b * b);\n        const M = (Math.exp(m * 0.0228) - 1.0) / 0.0228;\n        const c = M / viewingConditions.fLRoot;\n        let h = Math.atan2(b, a) * (180.0 / Math.PI);\n        if (h < 0.0) {\n            h += 360.0;\n        }\n        const j = jstar / (1 - (jstar - 100) * 0.007);\n        return Cam16.fromJchInViewingConditions(j, c, h, viewingConditions);\n    }\n    /**\n     *  @return ARGB representation of color, assuming the color was viewed in\n     *     default viewing conditions, which are near-identical to the default\n     *     viewing conditions for sRGB.\n     */\n    toInt() {\n        return this.viewed(ViewingConditions.DEFAULT);\n    }\n    /**\n     * @param viewingConditions Information about the environment where the color\n     *     will be viewed.\n     * @return ARGB representation of color\n     */\n    viewed(viewingConditions) {\n        const alpha = this.chroma === 0.0 || this.j === 0.0 ?\n            0.0 :\n            this.chroma / Math.sqrt(this.j / 100.0);\n        const t = Math.pow(alpha / Math.pow(1.64 - Math.pow(0.29, viewingConditions.n), 0.73), 1.0 / 0.9);\n        const hRad = (this.hue * Math.PI) / 180.0;\n        const eHue = 0.25 * (Math.cos(hRad + 2.0) + 3.8);\n        const ac = viewingConditions.aw *\n            Math.pow(this.j / 100.0, 1.0 / viewingConditions.c / viewingConditions.z);\n        const p1 = eHue * (50000.0 / 13.0) * viewingConditions.nc * viewingConditions.ncb;\n        const p2 = ac / viewingConditions.nbb;\n        const hSin = Math.sin(hRad);\n        const hCos = Math.cos(hRad);\n        const gamma = (23.0 * (p2 + 0.305) * t) /\n            (23.0 * p1 + 11.0 * t * hCos + 108.0 * t * hSin);\n        const a = gamma * hCos;\n        const b = gamma * hSin;\n        const rA = (460.0 * p2 + 451.0 * a + 288.0 * b) / 1403.0;\n        const gA = (460.0 * p2 - 891.0 * a - 261.0 * b) / 1403.0;\n        const bA = (460.0 * p2 - 220.0 * a - 6300.0 * b) / 1403.0;\n        const rCBase = Math.max(0, (27.13 * Math.abs(rA)) / (400.0 - Math.abs(rA)));\n        const rC = math.signum(rA) * (100.0 / viewingConditions.fl) *\n            Math.pow(rCBase, 1.0 / 0.42);\n        const gCBase = Math.max(0, (27.13 * Math.abs(gA)) / (400.0 - Math.abs(gA)));\n        const gC = math.signum(gA) * (100.0 / viewingConditions.fl) *\n            Math.pow(gCBase, 1.0 / 0.42);\n        const bCBase = Math.max(0, (27.13 * Math.abs(bA)) / (400.0 - Math.abs(bA)));\n        const bC = math.signum(bA) * (100.0 / viewingConditions.fl) *\n            Math.pow(bCBase, 1.0 / 0.42);\n        const rF = rC / viewingConditions.rgbD[0];\n        const gF = gC / viewingConditions.rgbD[1];\n        const bF = bC / viewingConditions.rgbD[2];\n        const x = 1.86206786 * rF - 1.01125463 * gF + 0.14918677 * bF;\n        const y = 0.38752654 * rF + 0.62144744 * gF - 0.00897398 * bF;\n        const z = -0.01584150 * rF - 0.03412294 * gF + 1.04996444 * bF;\n        const argb = utils.argbFromXyz(x, y, z);\n        return argb;\n    }\n    /// Given color expressed in XYZ and viewed in [viewingConditions], convert to\n    /// CAM16.\n    static fromXyzInViewingConditions(x, y, z, viewingConditions) {\n        // Transform XYZ to 'cone'/'rgb' responses\n        const rC = 0.401288 * x + 0.650173 * y - 0.051461 * z;\n        const gC = -0.250268 * x + 1.204414 * y + 0.045854 * z;\n        const bC = -0.002079 * x + 0.048952 * y + 0.953127 * z;\n        // Discount illuminant\n        const rD = viewingConditions.rgbD[0] * rC;\n        const gD = viewingConditions.rgbD[1] * gC;\n        const bD = viewingConditions.rgbD[2] * bC;\n        // chromatic adaptation\n        const rAF = Math.pow(viewingConditions.fl * Math.abs(rD) / 100.0, 0.42);\n        const gAF = Math.pow(viewingConditions.fl * Math.abs(gD) / 100.0, 0.42);\n        const bAF = Math.pow(viewingConditions.fl * Math.abs(bD) / 100.0, 0.42);\n        const rA = math.signum(rD) * 400.0 * rAF / (rAF + 27.13);\n        const gA = math.signum(gD) * 400.0 * gAF / (gAF + 27.13);\n        const bA = math.signum(bD) * 400.0 * bAF / (bAF + 27.13);\n        // redness-greenness\n        const a = (11.0 * rA + -12.0 * gA + bA) / 11.0;\n        // yellowness-blueness\n        const b = (rA + gA - 2.0 * bA) / 9.0;\n        // auxiliary components\n        const u = (20.0 * rA + 20.0 * gA + 21.0 * bA) / 20.0;\n        const p2 = (40.0 * rA + 20.0 * gA + bA) / 20.0;\n        // hue\n        const atan2 = Math.atan2(b, a);\n        const atanDegrees = atan2 * 180.0 / Math.PI;\n        const hue = atanDegrees < 0 ? atanDegrees + 360.0 :\n            atanDegrees >= 360 ? atanDegrees - 360 :\n                atanDegrees;\n        const hueRadians = hue * Math.PI / 180.0;\n        // achromatic response to color\n        const ac = p2 * viewingConditions.nbb;\n        // CAM16 lightness and brightness\n        const J = 100.0 *\n            Math.pow(ac / viewingConditions.aw, viewingConditions.c * viewingConditions.z);\n        const Q = (4.0 / viewingConditions.c) * Math.sqrt(J / 100.0) *\n            (viewingConditions.aw + 4.0) * (viewingConditions.fLRoot);\n        const huePrime = (hue < 20.14) ? hue + 360 : hue;\n        const eHue = (1.0 / 4.0) * (Math.cos(huePrime * Math.PI / 180.0 + 2.0) + 3.8);\n        const p1 = 50000.0 / 13.0 * eHue * viewingConditions.nc * viewingConditions.ncb;\n        const t = p1 * Math.sqrt(a * a + b * b) / (u + 0.305);\n        const alpha = Math.pow(t, 0.9) *\n            Math.pow(1.64 - Math.pow(0.29, viewingConditions.n), 0.73);\n        // CAM16 chroma, colorfulness, chroma\n        const C = alpha * Math.sqrt(J / 100.0);\n        const M = C * viewingConditions.fLRoot;\n        const s = 50.0 *\n            Math.sqrt((alpha * viewingConditions.c) / (viewingConditions.aw + 4.0));\n        // CAM16-UCS components\n        const jstar = (1.0 + 100.0 * 0.007) * J / (1.0 + 0.007 * J);\n        const mstar = Math.log(1.0 + 0.0228 * M) / 0.0228;\n        const astar = mstar * Math.cos(hueRadians);\n        const bstar = mstar * Math.sin(hueRadians);\n        return new Cam16(hue, C, J, Q, M, s, jstar, astar, bstar);\n    }\n    /// XYZ representation of CAM16 seen in [viewingConditions].\n    xyzInViewingConditions(viewingConditions) {\n        const alpha = (this.chroma === 0.0 || this.j === 0.0) ?\n            0.0 :\n            this.chroma / Math.sqrt(this.j / 100.0);\n        const t = Math.pow(alpha / Math.pow(1.64 - Math.pow(0.29, viewingConditions.n), 0.73), 1.0 / 0.9);\n        const hRad = this.hue * Math.PI / 180.0;\n        const eHue = 0.25 * (Math.cos(hRad + 2.0) + 3.8);\n        const ac = viewingConditions.aw *\n            Math.pow(this.j / 100.0, 1.0 / viewingConditions.c / viewingConditions.z);\n        const p1 = eHue * (50000.0 / 13.0) * viewingConditions.nc * viewingConditions.ncb;\n        const p2 = (ac / viewingConditions.nbb);\n        const hSin = Math.sin(hRad);\n        const hCos = Math.cos(hRad);\n        const gamma = 23.0 * (p2 + 0.305) * t /\n            (23.0 * p1 + 11 * t * hCos + 108.0 * t * hSin);\n        const a = gamma * hCos;\n        const b = gamma * hSin;\n        const rA = (460.0 * p2 + 451.0 * a + 288.0 * b) / 1403.0;\n        const gA = (460.0 * p2 - 891.0 * a - 261.0 * b) / 1403.0;\n        const bA = (460.0 * p2 - 220.0 * a - 6300.0 * b) / 1403.0;\n        const rCBase = Math.max(0, (27.13 * Math.abs(rA)) / (400.0 - Math.abs(rA)));\n        const rC = math.signum(rA) * (100.0 / viewingConditions.fl) *\n            Math.pow(rCBase, 1.0 / 0.42);\n        const gCBase = Math.max(0, (27.13 * Math.abs(gA)) / (400.0 - Math.abs(gA)));\n        const gC = math.signum(gA) * (100.0 / viewingConditions.fl) *\n            Math.pow(gCBase, 1.0 / 0.42);\n        const bCBase = Math.max(0, (27.13 * Math.abs(bA)) / (400.0 - Math.abs(bA)));\n        const bC = math.signum(bA) * (100.0 / viewingConditions.fl) *\n            Math.pow(bCBase, 1.0 / 0.42);\n        const rF = rC / viewingConditions.rgbD[0];\n        const gF = gC / viewingConditions.rgbD[1];\n        const bF = bC / viewingConditions.rgbD[2];\n        const x = 1.86206786 * rF - 1.01125463 * gF + 0.14918677 * bF;\n        const y = 0.38752654 * rF + 0.62144744 * gF - 0.00897398 * bF;\n        const z = -0.01584150 * rF - 0.03412294 * gF + 1.04996444 * bF;\n        return [x, y, z];\n    }\n}\n//# sourceMappingURL=cam16.js.map","/**\n * @license\n * Copyright 2021 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n// This file is automatically generated. Do not modify it.\nimport * as colorUtils from '../utils/color_utils.js';\nimport * as mathUtils from '../utils/math_utils.js';\nimport { Cam16 } from './cam16.js';\nimport { ViewingConditions } from './viewing_conditions.js';\n// material_color_utilities is designed to have a consistent API across\n// platforms and modular components that can be moved around easily. Using a\n// class as a namespace facilitates this.\n//\n// tslint:disable:class-as-namespace\n/**\n * A class that solves the HCT equation.\n */\nexport class HctSolver {\n    /**\n     * Sanitizes a small enough angle in radians.\n     *\n     * @param angle An angle in radians; must not deviate too much\n     * from 0.\n     * @return A coterminal angle between 0 and 2pi.\n     */\n    static sanitizeRadians(angle) {\n        return (angle + Math.PI * 8) % (Math.PI * 2);\n    }\n    /**\n     * Delinearizes an RGB component, returning a floating-point\n     * number.\n     *\n     * @param rgbComponent 0.0 <= rgb_component <= 100.0, represents\n     * linear R/G/B channel\n     * @return 0.0 <= output <= 255.0, color channel converted to\n     * regular RGB space\n     */\n    static trueDelinearized(rgbComponent) {\n        const normalized = rgbComponent / 100.0;\n        let delinearized = 0.0;\n        if (normalized <= 0.0031308) {\n            delinearized = normalized * 12.92;\n        }\n        else {\n            delinearized = 1.055 * Math.pow(normalized, 1.0 / 2.4) - 0.055;\n        }\n        return delinearized * 255.0;\n    }\n    static chromaticAdaptation(component) {\n        const af = Math.pow(Math.abs(component), 0.42);\n        return mathUtils.signum(component) * 400.0 * af / (af + 27.13);\n    }\n    /**\n     * Returns the hue of a linear RGB color in CAM16.\n     *\n     * @param linrgb The linear RGB coordinates of a color.\n     * @return The hue of the color in CAM16, in radians.\n     */\n    static hueOf(linrgb) {\n        const scaledDiscount = mathUtils.matrixMultiply(linrgb, HctSolver.SCALED_DISCOUNT_FROM_LINRGB);\n        const rA = HctSolver.chromaticAdaptation(scaledDiscount[0]);\n        const gA = HctSolver.chromaticAdaptation(scaledDiscount[1]);\n        const bA = HctSolver.chromaticAdaptation(scaledDiscount[2]);\n        // redness-greenness\n        const a = (11.0 * rA + -12.0 * gA + bA) / 11.0;\n        // yellowness-blueness\n        const b = (rA + gA - 2.0 * bA) / 9.0;\n        return Math.atan2(b, a);\n    }\n    static areInCyclicOrder(a, b, c) {\n        const deltaAB = HctSolver.sanitizeRadians(b - a);\n        const deltaAC = HctSolver.sanitizeRadians(c - a);\n        return deltaAB < deltaAC;\n    }\n    /**\n     * Solves the lerp equation.\n     *\n     * @param source The starting number.\n     * @param mid The number in the middle.\n     * @param target The ending number.\n     * @return A number t such that lerp(source, target, t) = mid.\n     */\n    static intercept(source, mid, target) {\n        return (mid - source) / (target - source);\n    }\n    static lerpPoint(source, t, target) {\n        return [\n            source[0] + (target[0] - source[0]) * t,\n            source[1] + (target[1] - source[1]) * t,\n            source[2] + (target[2] - source[2]) * t,\n        ];\n    }\n    /**\n     * Intersects a segment with a plane.\n     *\n     * @param source The coordinates of point A.\n     * @param coordinate The R-, G-, or B-coordinate of the plane.\n     * @param target The coordinates of point B.\n     * @param axis The axis the plane is perpendicular with. (0: R, 1:\n     * G, 2: B)\n     * @return The intersection point of the segment AB with the plane\n     * R=coordinate, G=coordinate, or B=coordinate\n     */\n    static setCoordinate(source, coordinate, target, axis) {\n        const t = HctSolver.intercept(source[axis], coordinate, target[axis]);\n        return HctSolver.lerpPoint(source, t, target);\n    }\n    static isBounded(x) {\n        return 0.0 <= x && x <= 100.0;\n    }\n    /**\n     * Returns the nth possible vertex of the polygonal intersection.\n     *\n     * @param y The Y value of the plane.\n     * @param n The zero-based index of the point. 0 <= n <= 11.\n     * @return The nth possible vertex of the polygonal intersection\n     * of the y plane and the RGB cube, in linear RGB coordinates, if\n     * it exists. If this possible vertex lies outside of the cube,\n     * [-1.0, -1.0, -1.0] is returned.\n     */\n    static nthVertex(y, n) {\n        const kR = HctSolver.Y_FROM_LINRGB[0];\n        const kG = HctSolver.Y_FROM_LINRGB[1];\n        const kB = HctSolver.Y_FROM_LINRGB[2];\n        const coordA = n % 4 <= 1 ? 0.0 : 100.0;\n        const coordB = n % 2 === 0 ? 0.0 : 100.0;\n        if (n < 4) {\n            const g = coordA;\n            const b = coordB;\n            const r = (y - g * kG - b * kB) / kR;\n            if (HctSolver.isBounded(r)) {\n                return [r, g, b];\n            }\n            else {\n                return [-1.0, -1.0, -1.0];\n            }\n        }\n        else if (n < 8) {\n            const b = coordA;\n            const r = coordB;\n            const g = (y - r * kR - b * kB) / kG;\n            if (HctSolver.isBounded(g)) {\n                return [r, g, b];\n            }\n            else {\n                return [-1.0, -1.0, -1.0];\n            }\n        }\n        else {\n            const r = coordA;\n            const g = coordB;\n            const b = (y - r * kR - g * kG) / kB;\n            if (HctSolver.isBounded(b)) {\n                return [r, g, b];\n            }\n            else {\n                return [-1.0, -1.0, -1.0];\n            }\n        }\n    }\n    /**\n     * Finds the segment containing the desired color.\n     *\n     * @param y The Y value of the color.\n     * @param targetHue The hue of the color.\n     * @return A list of two sets of linear RGB coordinates, each\n     * corresponding to an endpoint of the segment containing the\n     * desired color.\n     */\n    static bisectToSegment(y, targetHue) {\n        let left = [-1.0, -1.0, -1.0];\n        let right = left;\n        let leftHue = 0.0;\n        let rightHue = 0.0;\n        let initialized = false;\n        let uncut = true;\n        for (let n = 0; n < 12; n++) {\n            const mid = HctSolver.nthVertex(y, n);\n            if (mid[0] < 0) {\n                continue;\n            }\n            const midHue = HctSolver.hueOf(mid);\n            if (!initialized) {\n                left = mid;\n                right = mid;\n                leftHue = midHue;\n                rightHue = midHue;\n                initialized = true;\n                continue;\n            }\n            if (uncut || HctSolver.areInCyclicOrder(leftHue, midHue, rightHue)) {\n                uncut = false;\n                if (HctSolver.areInCyclicOrder(leftHue, targetHue, midHue)) {\n                    right = mid;\n                    rightHue = midHue;\n                }\n                else {\n                    left = mid;\n                    leftHue = midHue;\n                }\n            }\n        }\n        return [left, right];\n    }\n    static midpoint(a, b) {\n        return [\n            (a[0] + b[0]) / 2,\n            (a[1] + b[1]) / 2,\n            (a[2] + b[2]) / 2,\n        ];\n    }\n    static criticalPlaneBelow(x) {\n        return Math.floor(x - 0.5);\n    }\n    static criticalPlaneAbove(x) {\n        return Math.ceil(x - 0.5);\n    }\n    /**\n     * Finds a color with the given Y and hue on the boundary of the\n     * cube.\n     *\n     * @param y The Y value of the color.\n     * @param targetHue The hue of the color.\n     * @return The desired color, in linear RGB coordinates.\n     */\n    static bisectToLimit(y, targetHue) {\n        const segment = HctSolver.bisectToSegment(y, targetHue);\n        let left = segment[0];\n        let leftHue = HctSolver.hueOf(left);\n        let right = segment[1];\n        for (let axis = 0; axis < 3; axis++) {\n            if (left[axis] !== right[axis]) {\n                let lPlane = -1;\n                let rPlane = 255;\n                if (left[axis] < right[axis]) {\n                    lPlane = HctSolver.criticalPlaneBelow(HctSolver.trueDelinearized(left[axis]));\n                    rPlane = HctSolver.criticalPlaneAbove(HctSolver.trueDelinearized(right[axis]));\n                }\n                else {\n                    lPlane = HctSolver.criticalPlaneAbove(HctSolver.trueDelinearized(left[axis]));\n                    rPlane = HctSolver.criticalPlaneBelow(HctSolver.trueDelinearized(right[axis]));\n                }\n                for (let i = 0; i < 8; i++) {\n                    if (Math.abs(rPlane - lPlane) <= 1) {\n                        break;\n                    }\n                    else {\n                        const mPlane = Math.floor((lPlane + rPlane) / 2.0);\n                        const midPlaneCoordinate = HctSolver.CRITICAL_PLANES[mPlane];\n                        const mid = HctSolver.setCoordinate(left, midPlaneCoordinate, right, axis);\n                        const midHue = HctSolver.hueOf(mid);\n                        if (HctSolver.areInCyclicOrder(leftHue, targetHue, midHue)) {\n                            right = mid;\n                            rPlane = mPlane;\n                        }\n                        else {\n                            left = mid;\n                            leftHue = midHue;\n                            lPlane = mPlane;\n                        }\n                    }\n                }\n            }\n        }\n        return HctSolver.midpoint(left, right);\n    }\n    static inverseChromaticAdaptation(adapted) {\n        const adaptedAbs = Math.abs(adapted);\n        const base = Math.max(0, 27.13 * adaptedAbs / (400.0 - adaptedAbs));\n        return mathUtils.signum(adapted) * Math.pow(base, 1.0 / 0.42);\n    }\n    /**\n     * Finds a color with the given hue, chroma, and Y.\n     *\n     * @param hueRadians The desired hue in radians.\n     * @param chroma The desired chroma.\n     * @param y The desired Y.\n     * @return The desired color as a hexadecimal integer, if found; 0\n     * otherwise.\n     */\n    static findResultByJ(hueRadians, chroma, y) {\n        // Initial estimate of j.\n        let j = Math.sqrt(y) * 11.0;\n        // ===========================================================\n        // Operations inlined from Cam16 to avoid repeated calculation\n        // ===========================================================\n        const viewingConditions = ViewingConditions.DEFAULT;\n        const tInnerCoeff = 1 / Math.pow(1.64 - Math.pow(0.29, viewingConditions.n), 0.73);\n        const eHue = 0.25 * (Math.cos(hueRadians + 2.0) + 3.8);\n        const p1 = eHue * (50000.0 / 13.0) * viewingConditions.nc * viewingConditions.ncb;\n        const hSin = Math.sin(hueRadians);\n        const hCos = Math.cos(hueRadians);\n        for (let iterationRound = 0; iterationRound < 5; iterationRound++) {\n            // ===========================================================\n            // Operations inlined from Cam16 to avoid repeated calculation\n            // ===========================================================\n            const jNormalized = j / 100.0;\n            const alpha = chroma === 0.0 || j === 0.0 ? 0.0 : chroma / Math.sqrt(jNormalized);\n            const t = Math.pow(alpha * tInnerCoeff, 1.0 / 0.9);\n            const ac = viewingConditions.aw *\n                Math.pow(jNormalized, 1.0 / viewingConditions.c / viewingConditions.z);\n            const p2 = ac / viewingConditions.nbb;\n            const gamma = 23.0 * (p2 + 0.305) * t /\n                (23.0 * p1 + 11 * t * hCos + 108.0 * t * hSin);\n            const a = gamma * hCos;\n            const b = gamma * hSin;\n            const rA = (460.0 * p2 + 451.0 * a + 288.0 * b) / 1403.0;\n            const gA = (460.0 * p2 - 891.0 * a - 261.0 * b) / 1403.0;\n            const bA = (460.0 * p2 - 220.0 * a - 6300.0 * b) / 1403.0;\n            const rCScaled = HctSolver.inverseChromaticAdaptation(rA);\n            const gCScaled = HctSolver.inverseChromaticAdaptation(gA);\n            const bCScaled = HctSolver.inverseChromaticAdaptation(bA);\n            const linrgb = mathUtils.matrixMultiply([rCScaled, gCScaled, bCScaled], HctSolver.LINRGB_FROM_SCALED_DISCOUNT);\n            // ===========================================================\n            // Operations inlined from Cam16 to avoid repeated calculation\n            // ===========================================================\n            if (linrgb[0] < 0 || linrgb[1] < 0 || linrgb[2] < 0) {\n                return 0;\n            }\n            const kR = HctSolver.Y_FROM_LINRGB[0];\n            const kG = HctSolver.Y_FROM_LINRGB[1];\n            const kB = HctSolver.Y_FROM_LINRGB[2];\n            const fnj = kR * linrgb[0] + kG * linrgb[1] + kB * linrgb[2];\n            if (fnj <= 0) {\n                return 0;\n            }\n            if (iterationRound === 4 || Math.abs(fnj - y) < 0.002) {\n                if (linrgb[0] > 100.01 || linrgb[1] > 100.01 || linrgb[2] > 100.01) {\n                    return 0;\n                }\n                return colorUtils.argbFromLinrgb(linrgb);\n            }\n            // Iterates with Newton method,\n            // Using 2 * fn(j) / j as the approximation of fn'(j)\n            j = j - (fnj - y) * j / (2 * fnj);\n        }\n        return 0;\n    }\n    /**\n     * Finds an sRGB color with the given hue, chroma, and L*, if\n     * possible.\n     *\n     * @param hueDegrees The desired hue, in degrees.\n     * @param chroma The desired chroma.\n     * @param lstar The desired L*.\n     * @return A hexadecimal representing the sRGB color. The color\n     * has sufficiently close hue, chroma, and L* to the desired\n     * values, if possible; otherwise, the hue and L* will be\n     * sufficiently close, and chroma will be maximized.\n     */\n    static solveToInt(hueDegrees, chroma, lstar) {\n        if (chroma < 0.0001 || lstar < 0.0001 || lstar > 99.9999) {\n            return colorUtils.argbFromLstar(lstar);\n        }\n        hueDegrees = mathUtils.sanitizeDegreesDouble(hueDegrees);\n        const hueRadians = hueDegrees / 180 * Math.PI;\n        const y = colorUtils.yFromLstar(lstar);\n        const exactAnswer = HctSolver.findResultByJ(hueRadians, chroma, y);\n        if (exactAnswer !== 0) {\n            return exactAnswer;\n        }\n        const linrgb = HctSolver.bisectToLimit(y, hueRadians);\n        return colorUtils.argbFromLinrgb(linrgb);\n    }\n    /**\n     * Finds an sRGB color with the given hue, chroma, and L*, if\n     * possible.\n     *\n     * @param hueDegrees The desired hue, in degrees.\n     * @param chroma The desired chroma.\n     * @param lstar The desired L*.\n     * @return An CAM16 object representing the sRGB color. The color\n     * has sufficiently close hue, chroma, and L* to the desired\n     * values, if possible; otherwise, the hue and L* will be\n     * sufficiently close, and chroma will be maximized.\n     */\n    static solveToCam(hueDegrees, chroma, lstar) {\n        return Cam16.fromInt(HctSolver.solveToInt(hueDegrees, chroma, lstar));\n    }\n}\nHctSolver.SCALED_DISCOUNT_FROM_LINRGB = [\n    [\n        0.001200833568784504,\n        0.002389694492170889,\n        0.0002795742885861124,\n    ],\n    [\n        0.0005891086651375999,\n        0.0029785502573438758,\n        0.0003270666104008398,\n    ],\n    [\n        0.00010146692491640572,\n        0.0005364214359186694,\n        0.0032979401770712076,\n    ],\n];\nHctSolver.LINRGB_FROM_SCALED_DISCOUNT = [\n    [\n        1373.2198709594231,\n        -1100.4251190754821,\n        -7.278681089101213,\n    ],\n    [\n        -271.815969077903,\n        559.6580465940733,\n        -32.46047482791194,\n    ],\n    [\n        1.9622899599665666,\n        -57.173814538844006,\n        308.7233197812385,\n    ],\n];\nHctSolver.Y_FROM_LINRGB = [0.2126, 0.7152, 0.0722];\nHctSolver.CRITICAL_PLANES = [\n    0.015176349177441876, 0.045529047532325624, 0.07588174588720938,\n    0.10623444424209313, 0.13658714259697685, 0.16693984095186062,\n    0.19729253930674434, 0.2276452376616281, 0.2579979360165119,\n    0.28835063437139563, 0.3188300904430532, 0.350925934958123,\n    0.3848314933096426, 0.42057480301049466, 0.458183274052838,\n    0.4976837250274023, 0.5391024159806381, 0.5824650784040898,\n    0.6277969426914107, 0.6751227633498623, 0.7244668422128921,\n    0.775853049866786, 0.829304845476233, 0.8848452951698498,\n    0.942497089126609, 1.0022825574869039, 1.0642236851973577,\n    1.1283421258858297, 1.1946592148522128, 1.2631959812511864,\n    1.3339731595349034, 1.407011200216447, 1.4823302800086415,\n    1.5599503113873272, 1.6398909516233677, 1.7221716113234105,\n    1.8068114625156377, 1.8938294463134073, 1.9832442801866852,\n    2.075074464868551, 2.1693382909216234, 2.2660538449872063,\n    2.36523901573795, 2.4669114995532007, 2.5710888059345764,\n    2.6777882626779785, 2.7870270208169257, 2.898822059350997,\n    3.0131901897720907, 3.1301480604002863, 3.2497121605402226,\n    3.3718988244681087, 3.4967242352587946, 3.624204428461639,\n    3.754355295633311, 3.887192587735158, 4.022731918402185,\n    4.160988767090289, 4.301978482107941, 4.445716283538092,\n    4.592217266055746, 4.741496401646282, 4.893568542229298,\n    5.048448422192488, 5.20615066083972, 5.3666897647573375,\n    5.5300801301023865, 5.696336044816294, 5.865471690767354,\n    6.037501145825082, 6.212438385869475, 6.390297286737924,\n    6.571091626112461, 6.7548350853498045, 6.941541251256611,\n    7.131223617812143, 7.323895587840543, 7.5195704746346665,\n    7.7182615035334345, 7.919981813454504, 8.124744458384042,\n    8.332562408825165, 8.543448553206703, 8.757415699253682,\n    8.974476575321063, 9.194643831691977, 9.417930041841839,\n    9.644347703669503, 9.873909240696694, 10.106627003236781,\n    10.342513269534024, 10.58158024687427, 10.8238400726681,\n    11.069304815507364, 11.317986476196008, 11.569896988756009,\n    11.825048221409341, 12.083451977536606, 12.345119996613247,\n    12.610063955123938, 12.878295467455942, 13.149826086772048,\n    13.42466730586372, 13.702830557985108, 13.984327217668513,\n    14.269168601521828, 14.55736596900856, 14.848930523210871,\n    15.143873411576273, 15.44220572664832, 15.743938506781891,\n    16.04908273684337, 16.35764934889634, 16.66964922287304,\n    16.985093187232053, 17.30399201960269, 17.62635644741625,\n    17.95219714852476, 18.281524751807332, 18.614349837764564,\n    18.95068293910138, 19.290534541298456, 19.633915083172692,\n    19.98083495742689, 20.331304511189067, 20.685334046541502,\n    21.042933821039977, 21.404114048223256, 21.76888489811322,\n    22.137256497705877, 22.50923893145328, 22.884842241736916,\n    23.264076429332462, 23.6469514538663, 24.033477234264016,\n    24.42366364919083, 24.817520537484558, 25.21505769858089,\n    25.61628489293138, 26.021211842414342, 26.429848230738664,\n    26.842203703840827, 27.258287870275353, 27.678110301598522,\n    28.10168053274597, 28.529008062403893, 28.96010235337422,\n    29.39497283293396, 29.83362889318845, 30.276079891419332,\n    30.722335150426627, 31.172403958865512, 31.62629557157785,\n    32.08401920991837, 32.54558406207592, 33.010999283389665,\n    33.4802739966603, 33.953417292456834, 34.430438229418264,\n    34.911345834551085, 35.39614910352207, 35.88485700094671,\n    36.37747846067349, 36.87402238606382, 37.37449765026789,\n    37.87891309649659, 38.38727753828926, 38.89959975977785,\n    39.41588851594697, 39.93615253289054, 40.460400508064545,\n    40.98864111053629, 41.520882981230194, 42.05713473317016,\n    42.597404951718396, 43.141702194811224, 43.6900349931913,\n    44.24241185063697, 44.798841244188324, 45.35933162437017,\n    45.92389141541209, 46.49252901546552, 47.065252796817916,\n    47.64207110610409, 48.22299226451468, 48.808024568002054,\n    49.3971762874833, 49.9904556690408, 50.587870934119984,\n    51.189430279724725, 51.79514187861014, 52.40501387947288,\n    53.0190544071392, 53.637271562750364, 54.259673423945976,\n    54.88626804504493, 55.517063457223934, 56.15206766869424,\n    56.79128866487574, 57.43473440856916, 58.08241284012621,\n    58.734331877617365, 59.39049941699807, 60.05092333227251,\n    60.715611475655585, 61.38457167773311, 62.057811747619894,\n    62.7353394731159, 63.417162620860914, 64.10328893648692,\n    64.79372614476921, 65.48848194977529, 66.18756403501224,\n    66.89098006357258, 67.59873767827808, 68.31084450182222,\n    69.02730813691093, 69.74813616640164, 70.47333615344107,\n    71.20291564160104, 71.93688215501312, 72.67524319850172,\n    73.41800625771542, 74.16517879925733, 74.9167682708136,\n    75.67278210128072, 76.43322770089146, 77.1981124613393,\n    77.96744375590167, 78.74122893956174, 79.51947534912904,\n    80.30219030335869, 81.08938110306934, 81.88105503125999,\n    82.67721935322541, 83.4778813166706, 84.28304815182372,\n    85.09272707154808, 85.90692527145302, 86.72564993000343,\n    87.54890820862819, 88.3767072518277, 89.2090541872801,\n    90.04595612594655, 90.88742016217518, 91.73345337380438,\n    92.58406282226491, 93.43925555268066, 94.29903859396902,\n    95.16341895893969, 96.03240364439274, 96.9059996312159,\n    97.78421388448044, 98.6670533535366, 99.55452497210776,\n];\n//# sourceMappingURL=hct_solver.js.map","/**\n * @license\n * Copyright 2021 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * A color system built using CAM16 hue and chroma, and L* from\n * L*a*b*.\n *\n * Using L* creates a link between the color system, contrast, and thus\n * accessibility. Contrast ratio depends on relative luminance, or Y in the XYZ\n * color space. L*, or perceptual luminance can be calculated from Y.\n *\n * Unlike Y, L* is linear to human perception, allowing trivial creation of\n * accurate color tones.\n *\n * Unlike contrast ratio, measuring contrast in L* is linear, and simple to\n * calculate. A difference of 40 in HCT tone guarantees a contrast ratio >= 3.0,\n * and a difference of 50 guarantees a contrast ratio >= 4.5.\n */\nimport * as utils from '../utils/color_utils.js';\nimport { Cam16 } from './cam16.js';\nimport { HctSolver } from './hct_solver.js';\nimport { ViewingConditions } from './viewing_conditions.js';\n/**\n * HCT, hue, chroma, and tone. A color system that provides a perceptually\n * accurate color measurement system that can also accurately render what colors\n * will appear as in different lighting environments.\n */\nexport class Hct {\n    static from(hue, chroma, tone) {\n        return new Hct(HctSolver.solveToInt(hue, chroma, tone));\n    }\n    /**\n     * @param argb ARGB representation of a color.\n     * @return HCT representation of a color in default viewing conditions\n     */\n    static fromInt(argb) {\n        return new Hct(argb);\n    }\n    toInt() {\n        return this.argb;\n    }\n    /**\n     * A number, in degrees, representing ex. red, orange, yellow, etc.\n     * Ranges from 0 <= hue < 360.\n     */\n    get hue() {\n        return this.internalHue;\n    }\n    /**\n     * @param newHue 0 <= newHue < 360; invalid values are corrected.\n     * Chroma may decrease because chroma has a different maximum for any given\n     * hue and tone.\n     */\n    set hue(newHue) {\n        this.setInternalState(HctSolver.solveToInt(newHue, this.internalChroma, this.internalTone));\n    }\n    get chroma() {\n        return this.internalChroma;\n    }\n    /**\n     * @param newChroma 0 <= newChroma < ?\n     * Chroma may decrease because chroma has a different maximum for any given\n     * hue and tone.\n     */\n    set chroma(newChroma) {\n        this.setInternalState(HctSolver.solveToInt(this.internalHue, newChroma, this.internalTone));\n    }\n    /** Lightness. Ranges from 0 to 100. */\n    get tone() {\n        return this.internalTone;\n    }\n    /**\n     * @param newTone 0 <= newTone <= 100; invalid valids are corrected.\n     * Chroma may decrease because chroma has a different maximum for any given\n     * hue and tone.\n     */\n    set tone(newTone) {\n        this.setInternalState(HctSolver.solveToInt(this.internalHue, this.internalChroma, newTone));\n    }\n    constructor(argb) {\n        this.argb = argb;\n        const cam = Cam16.fromInt(argb);\n        this.internalHue = cam.hue;\n        this.internalChroma = cam.chroma;\n        this.internalTone = utils.lstarFromArgb(argb);\n        this.argb = argb;\n    }\n    setInternalState(argb) {\n        const cam = Cam16.fromInt(argb);\n        this.internalHue = cam.hue;\n        this.internalChroma = cam.chroma;\n        this.internalTone = utils.lstarFromArgb(argb);\n        this.argb = argb;\n    }\n    /**\n     * Translates a color into different [ViewingConditions].\n     *\n     * Colors change appearance. They look different with lights on versus off,\n     * the same color, as in hex code, on white looks different when on black.\n     * This is called color relativity, most famously explicated by Josef Albers\n     * in Interaction of Color.\n     *\n     * In color science, color appearance models can account for this and\n     * calculate the appearance of a color in different settings. HCT is based on\n     * CAM16, a color appearance model, and uses it to make these calculations.\n     *\n     * See [ViewingConditions.make] for parameters affecting color appearance.\n     */\n    inViewingConditions(vc) {\n        // 1. Use CAM16 to find XYZ coordinates of color in specified VC.\n        const cam = Cam16.fromInt(this.toInt());\n        const viewedInVc = cam.xyzInViewingConditions(vc);\n        // 2. Create CAM16 of those XYZ coordinates in default VC.\n        const recastInVc = Cam16.fromXyzInViewingConditions(viewedInVc[0], viewedInVc[1], viewedInVc[2], ViewingConditions.make());\n        // 3. Create HCT from:\n        // - CAM16 using default VC with XYZ coordinates in specified VC.\n        // - L* converted from Y in XYZ coordinates in specified VC.\n        const recastHct = Hct.from(recastInVc.hue, recastInVc.chroma, utils.lstarFromY(viewedInVc[1]));\n        return recastHct;\n    }\n}\n//# sourceMappingURL=hct.js.map","/**\n * @license\n * Copyright 2021 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n// This file is automatically generated. Do not modify it.\nimport { Cam16 } from '../hct/cam16.js';\nimport { Hct } from '../hct/hct.js';\nimport * as colorUtils from '../utils/color_utils.js';\nimport * as mathUtils from '../utils/math_utils.js';\n// material_color_utilities is designed to have a consistent API across\n// platforms and modular components that can be moved around easily. Using a\n// class as a namespace facilitates this.\n//\n// tslint:disable:class-as-namespace\n/**\n * Functions for blending in HCT and CAM16.\n */\nexport class Blend {\n    /**\n     * Blend the design color's HCT hue towards the key color's HCT\n     * hue, in a way that leaves the original color recognizable and\n     * recognizably shifted towards the key color.\n     *\n     * @param designColor ARGB representation of an arbitrary color.\n     * @param sourceColor ARGB representation of the main theme color.\n     * @return The design color with a hue shifted towards the\n     * system's color, a slightly warmer/cooler variant of the design\n     * color's hue.\n     */\n    static harmonize(designColor, sourceColor) {\n        const fromHct = Hct.fromInt(designColor);\n        const toHct = Hct.fromInt(sourceColor);\n        const differenceDegrees = mathUtils.differenceDegrees(fromHct.hue, toHct.hue);\n        const rotationDegrees = Math.min(differenceDegrees * 0.5, 15.0);\n        const outputHue = mathUtils.sanitizeDegreesDouble(fromHct.hue +\n            rotationDegrees * mathUtils.rotationDirection(fromHct.hue, toHct.hue));\n        return Hct.from(outputHue, fromHct.chroma, fromHct.tone).toInt();\n    }\n    /**\n     * Blends hue from one color into another. The chroma and tone of\n     * the original color are maintained.\n     *\n     * @param from ARGB representation of color\n     * @param to ARGB representation of color\n     * @param amount how much blending to perform; 0.0 >= and <= 1.0\n     * @return from, with a hue blended towards to. Chroma and tone\n     * are constant.\n     */\n    static hctHue(from, to, amount) {\n        const ucs = Blend.cam16Ucs(from, to, amount);\n        const ucsCam = Cam16.fromInt(ucs);\n        const fromCam = Cam16.fromInt(from);\n        const blended = Hct.from(ucsCam.hue, fromCam.chroma, colorUtils.lstarFromArgb(from));\n        return blended.toInt();\n    }\n    /**\n     * Blend in CAM16-UCS space.\n     *\n     * @param from ARGB representation of color\n     * @param to ARGB representation of color\n     * @param amount how much blending to perform; 0.0 >= and <= 1.0\n     * @return from, blended towards to. Hue, chroma, and tone will\n     * change.\n     */\n    static cam16Ucs(from, to, amount) {\n        const fromCam = Cam16.fromInt(from);\n        const toCam = Cam16.fromInt(to);\n        const fromJ = fromCam.jstar;\n        const fromA = fromCam.astar;\n        const fromB = fromCam.bstar;\n        const toJ = toCam.jstar;\n        const toA = toCam.astar;\n        const toB = toCam.bstar;\n        const jstar = fromJ + (toJ - fromJ) * amount;\n        const astar = fromA + (toA - fromA) * amount;\n        const bstar = fromB + (toB - fromB) * amount;\n        return Cam16.fromUcs(jstar, astar, bstar).toInt();\n    }\n}\n//# sourceMappingURL=blend.js.map","/**\n * @license\n * Copyright 2022 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n// material_color_utilities is designed to have a consistent API across\n// platforms and modular components that can be moved around easily. Using a\n// class as a namespace facilitates this.\n//\n// tslint:disable:class-as-namespace\nimport * as utils from '../utils/color_utils.js';\nimport * as math from '../utils/math_utils.js';\n/**\n * Utility methods for calculating contrast given two colors, or calculating a\n * color given one color and a contrast ratio.\n *\n * Contrast ratio is calculated using XYZ's Y. When linearized to match human\n * perception, Y becomes HCT's tone and L*a*b*'s' L*. Informally, this is the\n * lightness of a color.\n *\n * Methods refer to tone, T in the the HCT color space.\n * Tone is equivalent to L* in the L*a*b* color space, or L in the LCH color\n * space.\n */\nexport class Contrast {\n    /**\n     * Returns a contrast ratio, which ranges from 1 to 21.\n     *\n     * @param toneA Tone between 0 and 100. Values outside will be clamped.\n     * @param toneB Tone between 0 and 100. Values outside will be clamped.\n     */\n    static ratioOfTones(toneA, toneB) {\n        toneA = math.clampDouble(0.0, 100.0, toneA);\n        toneB = math.clampDouble(0.0, 100.0, toneB);\n        return Contrast.ratioOfYs(utils.yFromLstar(toneA), utils.yFromLstar(toneB));\n    }\n    static ratioOfYs(y1, y2) {\n        const lighter = y1 > y2 ? y1 : y2;\n        const darker = (lighter === y2) ? y1 : y2;\n        return (lighter + 5.0) / (darker + 5.0);\n    }\n    /**\n     * Returns a tone >= tone parameter that ensures ratio parameter.\n     * Return value is between 0 and 100.\n     * Returns -1 if ratio cannot be achieved with tone parameter.\n     *\n     * @param tone Tone return value must contrast with.\n     * Range is 0 to 100. Invalid values will result in -1 being returned.\n     * @param ratio Contrast ratio of return value and tone.\n     * Range is 1 to 21, invalid values have undefined behavior.\n     */\n    static lighter(tone, ratio) {\n        if (tone < 0.0 || tone > 100.0) {\n            return -1.0;\n        }\n        const darkY = utils.yFromLstar(tone);\n        const lightY = ratio * (darkY + 5.0) - 5.0;\n        const realContrast = Contrast.ratioOfYs(lightY, darkY);\n        const delta = Math.abs(realContrast - ratio);\n        if (realContrast < ratio && delta > 0.04) {\n            return -1;\n        }\n        // Ensure gamut mapping, which requires a 'range' on tone, will still result\n        // the correct ratio by darkening slightly.\n        const returnValue = utils.lstarFromY(lightY) + 0.4;\n        if (returnValue < 0 || returnValue > 100) {\n            return -1;\n        }\n        return returnValue;\n    }\n    /**\n     * Returns a tone <= tone parameter that ensures ratio parameter.\n     * Return value is between 0 and 100.\n     * Returns -1 if ratio cannot be achieved with tone parameter.\n     *\n     * @param tone Tone return value must contrast with.\n     * Range is 0 to 100. Invalid values will result in -1 being returned.\n     * @param ratio Contrast ratio of return value and tone.\n     * Range is 1 to 21, invalid values have undefined behavior.\n     */\n    static darker(tone, ratio) {\n        if (tone < 0.0 || tone > 100.0) {\n            return -1.0;\n        }\n        const lightY = utils.yFromLstar(tone);\n        const darkY = ((lightY + 5.0) / ratio) - 5.0;\n        const realContrast = Contrast.ratioOfYs(lightY, darkY);\n        const delta = Math.abs(realContrast - ratio);\n        if (realContrast < ratio && delta > 0.04) {\n            return -1;\n        }\n        // Ensure gamut mapping, which requires a 'range' on tone, will still result\n        // the correct ratio by darkening slightly.\n        const returnValue = utils.lstarFromY(darkY) - 0.4;\n        if (returnValue < 0 || returnValue > 100) {\n            return -1;\n        }\n        return returnValue;\n    }\n    /**\n     * Returns a tone >= tone parameter that ensures ratio parameter.\n     * Return value is between 0 and 100.\n     * Returns 100 if ratio cannot be achieved with tone parameter.\n     *\n     * This method is unsafe because the returned value is guaranteed to be in\n     * bounds for tone, i.e. between 0 and 100. However, that value may not reach\n     * the ratio with tone. For example, there is no color lighter than T100.\n     *\n     * @param tone Tone return value must contrast with.\n     * Range is 0 to 100. Invalid values will result in 100 being returned.\n     * @param ratio Desired contrast ratio of return value and tone parameter.\n     * Range is 1 to 21, invalid values have undefined behavior.\n     */\n    static lighterUnsafe(tone, ratio) {\n        const lighterSafe = Contrast.lighter(tone, ratio);\n        return (lighterSafe < 0.0) ? 100.0 : lighterSafe;\n    }\n    /**\n     * Returns a tone >= tone parameter that ensures ratio parameter.\n     * Return value is between 0 and 100.\n     * Returns 100 if ratio cannot be achieved with tone parameter.\n     *\n     * This method is unsafe because the returned value is guaranteed to be in\n     * bounds for tone, i.e. between 0 and 100. However, that value may not reach\n     * the [ratio with [tone]. For example, there is no color darker than T0.\n     *\n     * @param tone Tone return value must contrast with.\n     * Range is 0 to 100. Invalid values will result in 0 being returned.\n     * @param ratio Desired contrast ratio of return value and tone parameter.\n     * Range is 1 to 21, invalid values have undefined behavior.\n     */\n    static darkerUnsafe(tone, ratio) {\n        const darkerSafe = Contrast.darker(tone, ratio);\n        return (darkerSafe < 0.0) ? 0.0 : darkerSafe;\n    }\n}\n//# sourceMappingURL=contrast.js.map","/**\n * @license\n * Copyright 2023 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { Hct } from '../hct/hct.js';\n// material_color_utilities is designed to have a consistent API across\n// platforms and modular components that can be moved around easily. Using a\n// class as a namespace facilitates this.\n//\n// tslint:disable:class-as-namespace\n/**\n * Check and/or fix universally disliked colors.\n * Color science studies of color preference indicate universal distaste for\n * dark yellow-greens, and also show this is correlated to distate for\n * biological waste and rotting food.\n *\n * See Palmer and Schloss, 2010 or Schloss and Palmer's Chapter 21 in Handbook\n * of Color Psychology (2015).\n */\nexport class DislikeAnalyzer {\n    /**\n     * Returns true if a color is disliked.\n     *\n     * @param hct A color to be judged.\n     * @return Whether the color is disliked.\n     *\n     * Disliked is defined as a dark yellow-green that is not neutral.\n     */\n    static isDisliked(hct) {\n        const huePasses = Math.round(hct.hue) >= 90.0 && Math.round(hct.hue) <= 111.0;\n        const chromaPasses = Math.round(hct.chroma) > 16.0;\n        const tonePasses = Math.round(hct.tone) < 65.0;\n        return huePasses && chromaPasses && tonePasses;\n    }\n    /**\n     * If a color is disliked, lighten it to make it likable.\n     *\n     * @param hct A color to be judged.\n     * @return A new color if the original color is disliked, or the original\n     *   color if it is acceptable.\n     */\n    static fixIfDisliked(hct) {\n        if (DislikeAnalyzer.isDisliked(hct)) {\n            return Hct.from(hct.hue, hct.chroma, 70.0);\n        }\n        return hct;\n    }\n}\n//# sourceMappingURL=dislike_analyzer.js.map","/**\n * @license\n * Copyright 2022 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { Contrast } from '../contrast/contrast.js';\nimport * as math from '../utils/math_utils.js';\n/**\n * A color that adjusts itself based on UI state provided by DynamicScheme.\n *\n * Colors without backgrounds do not change tone when contrast changes. Colors\n * with backgrounds become closer to their background as contrast lowers, and\n * further when contrast increases.\n *\n * Prefer static constructors. They require either a hexcode, a palette and\n * tone, or a hue and chroma. Optionally, they can provide a background\n * DynamicColor.\n */\nexport class DynamicColor {\n    /**\n     * Create a DynamicColor defined by a TonalPalette and HCT tone.\n     *\n     * @param args Functions with DynamicScheme as input. Must provide a palette\n     * and tone. May provide a background DynamicColor and ToneDeltaConstraint.\n     */\n    static fromPalette(args) {\n        return new DynamicColor(args.name ?? '', args.palette, args.tone, args.isBackground ?? false, args.background, args.secondBackground, args.contrastCurve, args.toneDeltaPair);\n    }\n    /**\n     * The base constructor for DynamicColor.\n     *\n     * _Strongly_ prefer using one of the convenience constructors. This class is\n     * arguably too flexible to ensure it can support any scenario. Functional\n     * arguments allow  overriding without risks that come with subclasses.\n     *\n     * For example, the default behavior of adjust tone at max contrast\n     * to be at a 7.0 ratio with its background is principled and\n     * matches accessibility guidance. That does not mean it's the desired\n     * approach for _every_ design system, and every color pairing,\n     * always, in every case.\n     *\n     * @param name The name of the dynamic color. Defaults to empty.\n     * @param palette Function that provides a TonalPalette given\n     * DynamicScheme. A TonalPalette is defined by a hue and chroma, so this\n     * replaces the need to specify hue/chroma. By providing a tonal palette, when\n     * contrast adjustments are made, intended chroma can be preserved.\n     * @param tone Function that provides a tone, given a DynamicScheme.\n     * @param isBackground Whether this dynamic color is a background, with\n     * some other color as the foreground. Defaults to false.\n     * @param background The background of the dynamic color (as a function of a\n     *     `DynamicScheme`), if it exists.\n     * @param secondBackground A second background of the dynamic color (as a\n     *     function of a `DynamicScheme`), if it\n     * exists.\n     * @param contrastCurve A `ContrastCurve` object specifying how its contrast\n     * against its background should behave in various contrast levels options.\n     * @param toneDeltaPair A `ToneDeltaPair` object specifying a tone delta\n     * constraint between two colors. One of them must be the color being\n     * constructed.\n     */\n    constructor(name, palette, tone, isBackground, background, secondBackground, contrastCurve, toneDeltaPair) {\n        this.name = name;\n        this.palette = palette;\n        this.tone = tone;\n        this.isBackground = isBackground;\n        this.background = background;\n        this.secondBackground = secondBackground;\n        this.contrastCurve = contrastCurve;\n        this.toneDeltaPair = toneDeltaPair;\n        this.hctCache = new Map();\n        if ((!background) && secondBackground) {\n            throw new Error(`Color ${name} has secondBackground` +\n                `defined, but background is not defined.`);\n        }\n        if ((!background) && contrastCurve) {\n            throw new Error(`Color ${name} has contrastCurve` +\n                `defined, but background is not defined.`);\n        }\n        if (background && !contrastCurve) {\n            throw new Error(`Color ${name} has background` +\n                `defined, but contrastCurve is not defined.`);\n        }\n    }\n    /**\n     * Return a ARGB integer (i.e. a hex code).\n     *\n     * @param scheme Defines the conditions of the user interface, for example,\n     * whether or not it is dark mode or light mode, and what the desired\n     * contrast level is.\n     */\n    getArgb(scheme) {\n        return this.getHct(scheme).toInt();\n    }\n    /**\n     * Return a color, expressed in the HCT color space, that this\n     * DynamicColor is under the conditions in scheme.\n     *\n     * @param scheme Defines the conditions of the user interface, for example,\n     * whether or not it is dark mode or light mode, and what the desired\n     * contrast level is.\n     */\n    getHct(scheme) {\n        const cachedAnswer = this.hctCache.get(scheme);\n        if (cachedAnswer != null) {\n            return cachedAnswer;\n        }\n        const tone = this.getTone(scheme);\n        const answer = this.palette(scheme).getHct(tone);\n        if (this.hctCache.size > 4) {\n            this.hctCache.clear();\n        }\n        this.hctCache.set(scheme, answer);\n        return answer;\n    }\n    /**\n     * Return a tone, T in the HCT color space, that this DynamicColor is under\n     * the conditions in scheme.\n     *\n     * @param scheme Defines the conditions of the user interface, for example,\n     * whether or not it is dark mode or light mode, and what the desired\n     * contrast level is.\n     */\n    getTone(scheme) {\n        const decreasingContrast = scheme.contrastLevel < 0;\n        // Case 1: dual foreground, pair of colors with delta constraint.\n        if (this.toneDeltaPair) {\n            const toneDeltaPair = this.toneDeltaPair(scheme);\n            const roleA = toneDeltaPair.roleA;\n            const roleB = toneDeltaPair.roleB;\n            const delta = toneDeltaPair.delta;\n            const polarity = toneDeltaPair.polarity;\n            const stayTogether = toneDeltaPair.stayTogether;\n            const bg = this.background(scheme);\n            const bgTone = bg.getTone(scheme);\n            const aIsNearer = (polarity === 'nearer' ||\n                (polarity === 'lighter' && !scheme.isDark) ||\n                (polarity === 'darker' && scheme.isDark));\n            const nearer = aIsNearer ? roleA : roleB;\n            const farther = aIsNearer ? roleB : roleA;\n            const amNearer = this.name === nearer.name;\n            const expansionDir = scheme.isDark ? 1 : -1;\n            // 1st round: solve to min, each\n            const nContrast = nearer.contrastCurve.getContrast(scheme.contrastLevel);\n            const fContrast = farther.contrastCurve.getContrast(scheme.contrastLevel);\n            // If a color is good enough, it is not adjusted.\n            // Initial and adjusted tones for `nearer`\n            const nInitialTone = nearer.tone(scheme);\n            let nTone = Contrast.ratioOfTones(bgTone, nInitialTone) >= nContrast ?\n                nInitialTone :\n                DynamicColor.foregroundTone(bgTone, nContrast);\n            // Initial and adjusted tones for `farther`\n            const fInitialTone = farther.tone(scheme);\n            let fTone = Contrast.ratioOfTones(bgTone, fInitialTone) >= fContrast ?\n                fInitialTone :\n                DynamicColor.foregroundTone(bgTone, fContrast);\n            if (decreasingContrast) {\n                // If decreasing contrast, adjust color to the \"bare minimum\"\n                // that satisfies contrast.\n                nTone = DynamicColor.foregroundTone(bgTone, nContrast);\n                fTone = DynamicColor.foregroundTone(bgTone, fContrast);\n            }\n            if ((fTone - nTone) * expansionDir >= delta) {\n                // Good! Tones satisfy the constraint; no change needed.\n            }\n            else {\n                // 2nd round: expand farther to match delta.\n                fTone = math.clampDouble(0, 100, nTone + delta * expansionDir);\n                if ((fTone - nTone) * expansionDir >= delta) {\n                    // Good! Tones now satisfy the constraint; no change needed.\n                }\n                else {\n                    // 3rd round: contract nearer to match delta.\n                    nTone = math.clampDouble(0, 100, fTone - delta * expansionDir);\n                }\n            }\n            // Avoids the 50-59 awkward zone.\n            if (50 <= nTone && nTone < 60) {\n                // If `nearer` is in the awkward zone, move it away, together with\n                // `farther`.\n                if (expansionDir > 0) {\n                    nTone = 60;\n                    fTone = Math.max(fTone, nTone + delta * expansionDir);\n                }\n                else {\n                    nTone = 49;\n                    fTone = Math.min(fTone, nTone + delta * expansionDir);\n                }\n            }\n            else if (50 <= fTone && fTone < 60) {\n                if (stayTogether) {\n                    // Fixes both, to avoid two colors on opposite sides of the \"awkward\n                    // zone\".\n                    if (expansionDir > 0) {\n                        nTone = 60;\n                        fTone = Math.max(fTone, nTone + delta * expansionDir);\n                    }\n                    else {\n                        nTone = 49;\n                        fTone = Math.min(fTone, nTone + delta * expansionDir);\n                    }\n                }\n                else {\n                    // Not required to stay together; fixes just one.\n                    if (expansionDir > 0) {\n                        fTone = 60;\n                    }\n                    else {\n                        fTone = 49;\n                    }\n                }\n            }\n            // Returns `nTone` if this color is `nearer`, otherwise `fTone`.\n            return amNearer ? nTone : fTone;\n        }\n        else {\n            // Case 2: No contrast pair; just solve for itself.\n            let answer = this.tone(scheme);\n            if (this.background == null) {\n                return answer; // No adjustment for colors with no background.\n            }\n            const bgTone = this.background(scheme).getTone(scheme);\n            const desiredRatio = this.contrastCurve.getContrast(scheme.contrastLevel);\n            if (Contrast.ratioOfTones(bgTone, answer) >= desiredRatio) {\n                // Don't \"improve\" what's good enough.\n            }\n            else {\n                // Rough improvement.\n                answer = DynamicColor.foregroundTone(bgTone, desiredRatio);\n            }\n            if (decreasingContrast) {\n                answer = DynamicColor.foregroundTone(bgTone, desiredRatio);\n            }\n            if (this.isBackground && 50 <= answer && answer < 60) {\n                // Must adjust\n                if (Contrast.ratioOfTones(49, bgTone) >= desiredRatio) {\n                    answer = 49;\n                }\n                else {\n                    answer = 60;\n                }\n            }\n            if (this.secondBackground) {\n                // Case 3: Adjust for dual backgrounds.\n                const [bg1, bg2] = [this.background, this.secondBackground];\n                const [bgTone1, bgTone2] = [bg1(scheme).getTone(scheme), bg2(scheme).getTone(scheme)];\n                const [upper, lower] = [Math.max(bgTone1, bgTone2), Math.min(bgTone1, bgTone2)];\n                if (Contrast.ratioOfTones(upper, answer) >= desiredRatio &&\n                    Contrast.ratioOfTones(lower, answer) >= desiredRatio) {\n                    return answer;\n                }\n                // The darkest light tone that satisfies the desired ratio,\n                // or -1 if such ratio cannot be reached.\n                const lightOption = Contrast.lighter(upper, desiredRatio);\n                // The lightest dark tone that satisfies the desired ratio,\n                // or -1 if such ratio cannot be reached.\n                const darkOption = Contrast.darker(lower, desiredRatio);\n                // Tones suitable for the foreground.\n                const availables = [];\n                if (lightOption !== -1)\n                    availables.push(lightOption);\n                if (darkOption !== -1)\n                    availables.push(darkOption);\n                const prefersLight = DynamicColor.tonePrefersLightForeground(bgTone1) ||\n                    DynamicColor.tonePrefersLightForeground(bgTone2);\n                if (prefersLight) {\n                    return (lightOption < 0) ? 100 : lightOption;\n                }\n                if (availables.length === 1) {\n                    return availables[0];\n                }\n                return (darkOption < 0) ? 0 : darkOption;\n            }\n            return answer;\n        }\n    }\n    /**\n     * Given a background tone, find a foreground tone, while ensuring they reach\n     * a contrast ratio that is as close to [ratio] as possible.\n     *\n     * @param bgTone Tone in HCT. Range is 0 to 100, undefined behavior when it\n     *     falls outside that range.\n     * @param ratio The contrast ratio desired between bgTone and the return\n     *     value.\n     */\n    static foregroundTone(bgTone, ratio) {\n        const lighterTone = Contrast.lighterUnsafe(bgTone, ratio);\n        const darkerTone = Contrast.darkerUnsafe(bgTone, ratio);\n        const lighterRatio = Contrast.ratioOfTones(lighterTone, bgTone);\n        const darkerRatio = Contrast.ratioOfTones(darkerTone, bgTone);\n        const preferLighter = DynamicColor.tonePrefersLightForeground(bgTone);\n        if (preferLighter) {\n            // This handles an edge case where the initial contrast ratio is high\n            // (ex. 13.0), and the ratio passed to the function is that high\n            // ratio, and both the lighter and darker ratio fails to pass that\n            // ratio.\n            //\n            // This was observed with Tonal Spot's On Primary Container turning\n            // black momentarily between high and max contrast in light mode. PC's\n            // standard tone was T90, OPC's was T10, it was light mode, and the\n            // contrast value was 0.6568521221032331.\n            const negligibleDifference = Math.abs(lighterRatio - darkerRatio) < 0.1 &&\n                lighterRatio < ratio && darkerRatio < ratio;\n            return lighterRatio >= ratio || lighterRatio >= darkerRatio ||\n                negligibleDifference ?\n                lighterTone :\n                darkerTone;\n        }\n        else {\n            return darkerRatio >= ratio || darkerRatio >= lighterRatio ? darkerTone :\n                lighterTone;\n        }\n    }\n    /**\n     * Returns whether [tone] prefers a light foreground.\n     *\n     * People prefer white foregrounds on ~T60-70. Observed over time, and also\n     * by Andrew Somers during research for APCA.\n     *\n     * T60 used as to create the smallest discontinuity possible when skipping\n     * down to T49 in order to ensure light foregrounds.\n     * Since `tertiaryContainer` in dark monochrome scheme requires a tone of\n     * 60, it should not be adjusted. Therefore, 60 is excluded here.\n     */\n    static tonePrefersLightForeground(tone) {\n        return Math.round(tone) < 60.0;\n    }\n    /**\n     * Returns whether [tone] can reach a contrast ratio of 4.5 with a lighter\n     * color.\n     */\n    static toneAllowsLightForeground(tone) {\n        return Math.round(tone) <= 49.0;\n    }\n    /**\n     * Adjust a tone such that white has 4.5 contrast, if the tone is\n     * reasonably close to supporting it.\n     */\n    static enableLightForeground(tone) {\n        if (DynamicColor.tonePrefersLightForeground(tone) &&\n            !DynamicColor.toneAllowsLightForeground(tone)) {\n            return 49.0;\n        }\n        return tone;\n    }\n}\n//# sourceMappingURL=dynamic_color.js.map","/**\n * @license\n * Copyright 2022 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * Set of themes supported by Dynamic Color.\n * Instantiate the corresponding subclass, ex. SchemeTonalSpot, to create\n * colors corresponding to the theme.\n */\nexport var Variant;\n(function (Variant) {\n    Variant[Variant[\"MONOCHROME\"] = 0] = \"MONOCHROME\";\n    Variant[Variant[\"NEUTRAL\"] = 1] = \"NEUTRAL\";\n    Variant[Variant[\"TONAL_SPOT\"] = 2] = \"TONAL_SPOT\";\n    Variant[Variant[\"VIBRANT\"] = 3] = \"VIBRANT\";\n    Variant[Variant[\"EXPRESSIVE\"] = 4] = \"EXPRESSIVE\";\n    Variant[Variant[\"FIDELITY\"] = 5] = \"FIDELITY\";\n    Variant[Variant[\"CONTENT\"] = 6] = \"CONTENT\";\n    Variant[Variant[\"RAINBOW\"] = 7] = \"RAINBOW\";\n    Variant[Variant[\"FRUIT_SALAD\"] = 8] = \"FRUIT_SALAD\";\n})(Variant || (Variant = {}));\n//# sourceMappingURL=variant.js.map","/**\n * @license\n * Copyright 2023 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport * as math from '../utils/math_utils.js';\n/**\n * A class containing the contrast curve for a dynamic color on its background.\n *\n * The four values correspond to contrast requirements for contrast levels\n * -1.0, 0.0, 0.5, and 1.0, respectively.\n */\nexport class ContrastCurve {\n    /**\n     * Creates a `ContrastCurve` object.\n     *\n     * @param low Contrast requirement for contrast level -1.0\n     * @param normal Contrast requirement for contrast level 0.0\n     * @param medium Contrast requirement for contrast level 0.5\n     * @param high Contrast requirement for contrast level 1.0\n     */\n    constructor(low, normal, medium, high) {\n        this.low = low;\n        this.normal = normal;\n        this.medium = medium;\n        this.high = high;\n    }\n    /**\n     * Returns the contrast ratio at a given contrast level.\n     *\n     * @param contrastLevel The contrast level. 0.0 is the default (normal);\n     * -1.0 is the lowest; 1.0 is the highest.\n     * @return The contrast ratio, a number between 1.0 and 21.0.\n     */\n    getContrast(contrastLevel) {\n        if (contrastLevel <= -1.0) {\n            return this.low;\n        }\n        else if (contrastLevel < 0.0) {\n            return math.lerp(this.low, this.normal, (contrastLevel - (-1)) / 1);\n        }\n        else if (contrastLevel < 0.5) {\n            return math.lerp(this.normal, this.medium, (contrastLevel - 0) / 0.5);\n        }\n        else if (contrastLevel < 1.0) {\n            return math.lerp(this.medium, this.high, (contrastLevel - 0.5) / 0.5);\n        }\n        else {\n            return this.high;\n        }\n    }\n}\n//# sourceMappingURL=contrast_curve.js.map","/**\n * @license\n * Copyright 2023 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * Documents a constraint between two DynamicColors, in which their tones must\n * have a certain distance from each other.\n *\n * Prefer a DynamicColor with a background, this is for special cases when\n * designers want tonal distance, literally contrast, between two colors that\n * don't have a background / foreground relationship or a contrast guarantee.\n */\nexport class ToneDeltaPair {\n    /**\n     * Documents a constraint in tone distance between two DynamicColors.\n     *\n     * The polarity is an adjective that describes \"A\", compared to \"B\".\n     *\n     * For instance, ToneDeltaPair(A, B, 15, 'darker', stayTogether) states that\n     * A's tone should be at least 15 darker than B's.\n     *\n     * 'nearer' and 'farther' describes closeness to the surface roles. For\n     * instance, ToneDeltaPair(A, B, 10, 'nearer', stayTogether) states that A\n     * should be 10 lighter than B in light mode, and 10 darker than B in dark\n     * mode.\n     *\n     * @param roleA The first role in a pair.\n     * @param roleB The second role in a pair.\n     * @param delta Required difference between tones. Absolute value, negative\n     * values have undefined behavior.\n     * @param polarity The relative relation between tones of roleA and roleB,\n     * as described above.\n     * @param stayTogether Whether these two roles should stay on the same side of\n     * the \"awkward zone\" (T50-59). This is necessary for certain cases where\n     * one role has two backgrounds.\n     */\n    constructor(roleA, roleB, delta, polarity, stayTogether) {\n        this.roleA = roleA;\n        this.roleB = roleB;\n        this.delta = delta;\n        this.polarity = polarity;\n        this.stayTogether = stayTogether;\n    }\n}\n//# sourceMappingURL=tone_delta_pair.js.map","/**\n * @license\n * Copyright 2022 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { DislikeAnalyzer } from '../dislike/dislike_analyzer.js';\nimport { Hct } from '../hct/hct.js';\nimport { ViewingConditions } from '../hct/viewing_conditions.js';\nimport { Variant } from '../scheme/variant.js';\nimport { ContrastCurve } from './contrast_curve.js';\nimport { DynamicColor } from './dynamic_color.js';\nimport { ToneDeltaPair } from './tone_delta_pair.js';\nfunction isFidelity(scheme) {\n    return scheme.variant === Variant.FIDELITY ||\n        scheme.variant === Variant.CONTENT;\n}\nfunction isMonochrome(scheme) {\n    return scheme.variant === Variant.MONOCHROME;\n}\nfunction findDesiredChromaByTone(hue, chroma, tone, byDecreasingTone) {\n    let answer = tone;\n    let closestToChroma = Hct.from(hue, chroma, tone);\n    if (closestToChroma.chroma < chroma) {\n        let chromaPeak = closestToChroma.chroma;\n        while (closestToChroma.chroma < chroma) {\n            answer += byDecreasingTone ? -1.0 : 1.0;\n            const potentialSolution = Hct.from(hue, chroma, answer);\n            if (chromaPeak > potentialSolution.chroma) {\n                break;\n            }\n            if (Math.abs(potentialSolution.chroma - chroma) < 0.4) {\n                break;\n            }\n            const potentialDelta = Math.abs(potentialSolution.chroma - chroma);\n            const currentDelta = Math.abs(closestToChroma.chroma - chroma);\n            if (potentialDelta < currentDelta) {\n                closestToChroma = potentialSolution;\n            }\n            chromaPeak = Math.max(chromaPeak, potentialSolution.chroma);\n        }\n    }\n    return answer;\n}\nfunction viewingConditionsForAlbers(scheme) {\n    return ViewingConditions.make(\n    /*whitePoint=*/ undefined, \n    /*adaptingLuminance=*/ undefined, \n    /*backgroundLstar=*/ scheme.isDark ? 30 : 80, \n    /*surround=*/ undefined, \n    /*discountingIlluminant=*/ undefined);\n}\nfunction performAlbers(prealbers, scheme) {\n    const albersd = prealbers.inViewingConditions(viewingConditionsForAlbers(scheme));\n    if (DynamicColor.tonePrefersLightForeground(prealbers.tone) &&\n        !DynamicColor.toneAllowsLightForeground(albersd.tone)) {\n        return DynamicColor.enableLightForeground(prealbers.tone);\n    }\n    else {\n        return DynamicColor.enableLightForeground(albersd.tone);\n    }\n}\n/**\n * DynamicColors for the colors in the Material Design system.\n */\n// Material Color Utilities namespaces the various utilities it provides.\n// tslint:disable-next-line:class-as-namespace\nexport class MaterialDynamicColors {\n    static highestSurface(s) {\n        return s.isDark ? MaterialDynamicColors.surfaceBright :\n            MaterialDynamicColors.surfaceDim;\n    }\n}\nMaterialDynamicColors.contentAccentToneDelta = 15.0;\nMaterialDynamicColors.primaryPaletteKeyColor = DynamicColor.fromPalette({\n    name: 'primary_palette_key_color',\n    palette: (s) => s.primaryPalette,\n    tone: (s) => s.primaryPalette.keyColor.tone,\n});\nMaterialDynamicColors.secondaryPaletteKeyColor = DynamicColor.fromPalette({\n    name: 'secondary_palette_key_color',\n    palette: (s) => s.secondaryPalette,\n    tone: (s) => s.secondaryPalette.keyColor.tone,\n});\nMaterialDynamicColors.tertiaryPaletteKeyColor = DynamicColor.fromPalette({\n    name: 'tertiary_palette_key_color',\n    palette: (s) => s.tertiaryPalette,\n    tone: (s) => s.tertiaryPalette.keyColor.tone,\n});\nMaterialDynamicColors.neutralPaletteKeyColor = DynamicColor.fromPalette({\n    name: 'neutral_palette_key_color',\n    palette: (s) => s.neutralPalette,\n    tone: (s) => s.neutralPalette.keyColor.tone,\n});\nMaterialDynamicColors.neutralVariantPaletteKeyColor = DynamicColor.fromPalette({\n    name: 'neutral_variant_palette_key_color',\n    palette: (s) => s.neutralVariantPalette,\n    tone: (s) => s.neutralVariantPalette.keyColor.tone,\n});\nMaterialDynamicColors.background = DynamicColor.fromPalette({\n    name: 'background',\n    palette: (s) => s.neutralPalette,\n    tone: (s) => s.isDark ? 6 : 98,\n    isBackground: true,\n});\nMaterialDynamicColors.onBackground = DynamicColor.fromPalette({\n    name: 'on_background',\n    palette: (s) => s.neutralPalette,\n    tone: (s) => s.isDark ? 90 : 10,\n    background: (s) => MaterialDynamicColors.background,\n    contrastCurve: new ContrastCurve(3, 3, 4.5, 7),\n});\nMaterialDynamicColors.surface = DynamicColor.fromPalette({\n    name: 'surface',\n    palette: (s) => s.neutralPalette,\n    tone: (s) => s.isDark ? 6 : 98,\n    isBackground: true,\n});\nMaterialDynamicColors.surfaceDim = DynamicColor.fromPalette({\n    name: 'surface_dim',\n    palette: (s) => s.neutralPalette,\n    tone: (s) => s.isDark ? 6 : 87,\n    isBackground: true,\n});\nMaterialDynamicColors.surfaceBright = DynamicColor.fromPalette({\n    name: 'surface_bright',\n    palette: (s) => s.neutralPalette,\n    tone: (s) => s.isDark ? 24 : 98,\n    isBackground: true,\n});\nMaterialDynamicColors.surfaceContainerLowest = DynamicColor.fromPalette({\n    name: 'surface_container_lowest',\n    palette: (s) => s.neutralPalette,\n    tone: (s) => s.isDark ? 4 : 100,\n    isBackground: true,\n});\nMaterialDynamicColors.surfaceContainerLow = DynamicColor.fromPalette({\n    name: 'surface_container_low',\n    palette: (s) => s.neutralPalette,\n    tone: (s) => s.isDark ? 10 : 96,\n    isBackground: true,\n});\nMaterialDynamicColors.surfaceContainer = DynamicColor.fromPalette({\n    name: 'surface_container',\n    palette: (s) => s.neutralPalette,\n    tone: (s) => s.isDark ? 12 : 94,\n    isBackground: true,\n});\nMaterialDynamicColors.surfaceContainerHigh = DynamicColor.fromPalette({\n    name: 'surface_container_high',\n    palette: (s) => s.neutralPalette,\n    tone: (s) => s.isDark ? 17 : 92,\n    isBackground: true,\n});\nMaterialDynamicColors.surfaceContainerHighest = DynamicColor.fromPalette({\n    name: 'surface_container_highest',\n    palette: (s) => s.neutralPalette,\n    tone: (s) => s.isDark ? 22 : 90,\n    isBackground: true,\n});\nMaterialDynamicColors.onSurface = DynamicColor.fromPalette({\n    name: 'on_surface',\n    palette: (s) => s.neutralPalette,\n    tone: (s) => s.isDark ? 90 : 10,\n    background: (s) => MaterialDynamicColors.highestSurface(s),\n    contrastCurve: new ContrastCurve(4.5, 7, 11, 21),\n});\nMaterialDynamicColors.surfaceVariant = DynamicColor.fromPalette({\n    name: 'surface_variant',\n    palette: (s) => s.neutralVariantPalette,\n    tone: (s) => s.isDark ? 30 : 90,\n    isBackground: true,\n});\nMaterialDynamicColors.onSurfaceVariant = DynamicColor.fromPalette({\n    name: 'on_surface_variant',\n    palette: (s) => s.neutralVariantPalette,\n    tone: (s) => s.isDark ? 80 : 30,\n    background: (s) => MaterialDynamicColors.highestSurface(s),\n    contrastCurve: new ContrastCurve(3, 4.5, 7, 11),\n});\nMaterialDynamicColors.inverseSurface = DynamicColor.fromPalette({\n    name: 'inverse_surface',\n    palette: (s) => s.neutralPalette,\n    tone: (s) => s.isDark ? 90 : 20,\n});\nMaterialDynamicColors.inverseOnSurface = DynamicColor.fromPalette({\n    name: 'inverse_on_surface',\n    palette: (s) => s.neutralPalette,\n    tone: (s) => s.isDark ? 20 : 95,\n    background: (s) => MaterialDynamicColors.inverseSurface,\n    contrastCurve: new ContrastCurve(4.5, 7, 11, 21),\n});\nMaterialDynamicColors.outline = DynamicColor.fromPalette({\n    name: 'outline',\n    palette: (s) => s.neutralVariantPalette,\n    tone: (s) => s.isDark ? 60 : 50,\n    background: (s) => MaterialDynamicColors.highestSurface(s),\n    contrastCurve: new ContrastCurve(1.5, 3, 4.5, 7),\n});\nMaterialDynamicColors.outlineVariant = DynamicColor.fromPalette({\n    name: 'outline_variant',\n    palette: (s) => s.neutralVariantPalette,\n    tone: (s) => s.isDark ? 30 : 80,\n    background: (s) => MaterialDynamicColors.highestSurface(s),\n    contrastCurve: new ContrastCurve(1, 1, 3, 7),\n});\nMaterialDynamicColors.shadow = DynamicColor.fromPalette({\n    name: 'shadow',\n    palette: (s) => s.neutralPalette,\n    tone: (s) => 0,\n});\nMaterialDynamicColors.scrim = DynamicColor.fromPalette({\n    name: 'scrim',\n    palette: (s) => s.neutralPalette,\n    tone: (s) => 0,\n});\nMaterialDynamicColors.surfaceTint = DynamicColor.fromPalette({\n    name: 'surface_tint',\n    palette: (s) => s.primaryPalette,\n    tone: (s) => s.isDark ? 80 : 40,\n    isBackground: true,\n});\nMaterialDynamicColors.primary = DynamicColor.fromPalette({\n    name: 'primary',\n    palette: (s) => s.primaryPalette,\n    tone: (s) => {\n        if (isMonochrome(s)) {\n            return s.isDark ? 100 : 0;\n        }\n        return s.isDark ? 80 : 40;\n    },\n    isBackground: true,\n    background: (s) => MaterialDynamicColors.highestSurface(s),\n    contrastCurve: new ContrastCurve(3, 4.5, 7, 11),\n    toneDeltaPair: (s) => new ToneDeltaPair(MaterialDynamicColors.primaryContainer, MaterialDynamicColors.primary, 15, 'nearer', false),\n});\nMaterialDynamicColors.onPrimary = DynamicColor.fromPalette({\n    name: 'on_primary',\n    palette: (s) => s.primaryPalette,\n    tone: (s) => {\n        if (isMonochrome(s)) {\n            return s.isDark ? 10 : 90;\n        }\n        return s.isDark ? 20 : 100;\n    },\n    background: (s) => MaterialDynamicColors.primary,\n    contrastCurve: new ContrastCurve(4.5, 7, 11, 21),\n});\nMaterialDynamicColors.primaryContainer = DynamicColor.fromPalette({\n    name: 'primary_container',\n    palette: (s) => s.primaryPalette,\n    tone: (s) => {\n        if (isFidelity(s)) {\n            return performAlbers(s.sourceColorHct, s);\n        }\n        if (isMonochrome(s)) {\n            return s.isDark ? 85 : 25;\n        }\n        return s.isDark ? 30 : 90;\n    },\n    isBackground: true,\n    background: (s) => MaterialDynamicColors.highestSurface(s),\n    contrastCurve: new ContrastCurve(1, 1, 3, 7),\n    toneDeltaPair: (s) => new ToneDeltaPair(MaterialDynamicColors.primaryContainer, MaterialDynamicColors.primary, 15, 'nearer', false),\n});\nMaterialDynamicColors.onPrimaryContainer = DynamicColor.fromPalette({\n    name: 'on_primary_container',\n    palette: (s) => s.primaryPalette,\n    tone: (s) => {\n        if (isFidelity(s)) {\n            return DynamicColor.foregroundTone(MaterialDynamicColors.primaryContainer.tone(s), 4.5);\n        }\n        if (isMonochrome(s)) {\n            return s.isDark ? 0 : 100;\n        }\n        return s.isDark ? 90 : 10;\n    },\n    background: (s) => MaterialDynamicColors.primaryContainer,\n    contrastCurve: new ContrastCurve(4.5, 7, 11, 21),\n});\nMaterialDynamicColors.inversePrimary = DynamicColor.fromPalette({\n    name: 'inverse_primary',\n    palette: (s) => s.primaryPalette,\n    tone: (s) => s.isDark ? 40 : 80,\n    background: (s) => MaterialDynamicColors.inverseSurface,\n    contrastCurve: new ContrastCurve(3, 4.5, 7, 11),\n});\nMaterialDynamicColors.secondary = DynamicColor.fromPalette({\n    name: 'secondary',\n    palette: (s) => s.secondaryPalette,\n    tone: (s) => s.isDark ? 80 : 40,\n    isBackground: true,\n    background: (s) => MaterialDynamicColors.highestSurface(s),\n    contrastCurve: new ContrastCurve(3, 4.5, 7, 11),\n    toneDeltaPair: (s) => new ToneDeltaPair(MaterialDynamicColors.secondaryContainer, MaterialDynamicColors.secondary, 15, 'nearer', false),\n});\nMaterialDynamicColors.onSecondary = DynamicColor.fromPalette({\n    name: 'on_secondary',\n    palette: (s) => s.secondaryPalette,\n    tone: (s) => {\n        if (isMonochrome(s)) {\n            return s.isDark ? 10 : 100;\n        }\n        else {\n            return s.isDark ? 20 : 100;\n        }\n    },\n    background: (s) => MaterialDynamicColors.secondary,\n    contrastCurve: new ContrastCurve(4.5, 7, 11, 21),\n});\nMaterialDynamicColors.secondaryContainer = DynamicColor.fromPalette({\n    name: 'secondary_container',\n    palette: (s) => s.secondaryPalette,\n    tone: (s) => {\n        const initialTone = s.isDark ? 30 : 90;\n        if (isMonochrome(s)) {\n            return s.isDark ? 30 : 85;\n        }\n        if (!isFidelity(s)) {\n            return initialTone;\n        }\n        let answer = findDesiredChromaByTone(s.secondaryPalette.hue, s.secondaryPalette.chroma, initialTone, s.isDark ? false : true);\n        answer = performAlbers(s.secondaryPalette.getHct(answer), s);\n        return answer;\n    },\n    isBackground: true,\n    background: (s) => MaterialDynamicColors.highestSurface(s),\n    contrastCurve: new ContrastCurve(1, 1, 3, 7),\n    toneDeltaPair: (s) => new ToneDeltaPair(MaterialDynamicColors.secondaryContainer, MaterialDynamicColors.secondary, 15, 'nearer', false),\n});\nMaterialDynamicColors.onSecondaryContainer = DynamicColor.fromPalette({\n    name: 'on_secondary_container',\n    palette: (s) => s.secondaryPalette,\n    tone: (s) => {\n        if (!isFidelity(s)) {\n            return s.isDark ? 90 : 10;\n        }\n        return DynamicColor.foregroundTone(MaterialDynamicColors.secondaryContainer.tone(s), 4.5);\n    },\n    background: (s) => MaterialDynamicColors.secondaryContainer,\n    contrastCurve: new ContrastCurve(4.5, 7, 11, 21),\n});\nMaterialDynamicColors.tertiary = DynamicColor.fromPalette({\n    name: 'tertiary',\n    palette: (s) => s.tertiaryPalette,\n    tone: (s) => {\n        if (isMonochrome(s)) {\n            return s.isDark ? 90 : 25;\n        }\n        return s.isDark ? 80 : 40;\n    },\n    isBackground: true,\n    background: (s) => MaterialDynamicColors.highestSurface(s),\n    contrastCurve: new ContrastCurve(3, 4.5, 7, 11),\n    toneDeltaPair: (s) => new ToneDeltaPair(MaterialDynamicColors.tertiaryContainer, MaterialDynamicColors.tertiary, 15, 'nearer', false),\n});\nMaterialDynamicColors.onTertiary = DynamicColor.fromPalette({\n    name: 'on_tertiary',\n    palette: (s) => s.tertiaryPalette,\n    tone: (s) => {\n        if (isMonochrome(s)) {\n            return s.isDark ? 10 : 90;\n        }\n        return s.isDark ? 20 : 100;\n    },\n    background: (s) => MaterialDynamicColors.tertiary,\n    contrastCurve: new ContrastCurve(4.5, 7, 11, 21),\n});\nMaterialDynamicColors.tertiaryContainer = DynamicColor.fromPalette({\n    name: 'tertiary_container',\n    palette: (s) => s.tertiaryPalette,\n    tone: (s) => {\n        if (isMonochrome(s)) {\n            return s.isDark ? 60 : 49;\n        }\n        if (!isFidelity(s)) {\n            return s.isDark ? 30 : 90;\n        }\n        const albersTone = performAlbers(s.tertiaryPalette.getHct(s.sourceColorHct.tone), s);\n        const proposedHct = s.tertiaryPalette.getHct(albersTone);\n        return DislikeAnalyzer.fixIfDisliked(proposedHct).tone;\n    },\n    isBackground: true,\n    background: (s) => MaterialDynamicColors.highestSurface(s),\n    contrastCurve: new ContrastCurve(1, 1, 3, 7),\n    toneDeltaPair: (s) => new ToneDeltaPair(MaterialDynamicColors.tertiaryContainer, MaterialDynamicColors.tertiary, 15, 'nearer', false),\n});\nMaterialDynamicColors.onTertiaryContainer = DynamicColor.fromPalette({\n    name: 'on_tertiary_container',\n    palette: (s) => s.tertiaryPalette,\n    tone: (s) => {\n        if (isMonochrome(s)) {\n            return s.isDark ? 0 : 100;\n        }\n        if (!isFidelity(s)) {\n            return s.isDark ? 90 : 10;\n        }\n        return DynamicColor.foregroundTone(MaterialDynamicColors.tertiaryContainer.tone(s), 4.5);\n    },\n    background: (s) => MaterialDynamicColors.tertiaryContainer,\n    contrastCurve: new ContrastCurve(4.5, 7, 11, 21),\n});\nMaterialDynamicColors.error = DynamicColor.fromPalette({\n    name: 'error',\n    palette: (s) => s.errorPalette,\n    tone: (s) => s.isDark ? 80 : 40,\n    isBackground: true,\n    background: (s) => MaterialDynamicColors.highestSurface(s),\n    contrastCurve: new ContrastCurve(3, 4.5, 7, 11),\n    toneDeltaPair: (s) => new ToneDeltaPair(MaterialDynamicColors.errorContainer, MaterialDynamicColors.error, 15, 'nearer', false),\n});\nMaterialDynamicColors.onError = DynamicColor.fromPalette({\n    name: 'on_error',\n    palette: (s) => s.errorPalette,\n    tone: (s) => s.isDark ? 20 : 100,\n    background: (s) => MaterialDynamicColors.error,\n    contrastCurve: new ContrastCurve(4.5, 7, 11, 21),\n});\nMaterialDynamicColors.errorContainer = DynamicColor.fromPalette({\n    name: 'error_container',\n    palette: (s) => s.errorPalette,\n    tone: (s) => s.isDark ? 30 : 90,\n    isBackground: true,\n    background: (s) => MaterialDynamicColors.highestSurface(s),\n    contrastCurve: new ContrastCurve(1, 1, 3, 7),\n    toneDeltaPair: (s) => new ToneDeltaPair(MaterialDynamicColors.errorContainer, MaterialDynamicColors.error, 15, 'nearer', false),\n});\nMaterialDynamicColors.onErrorContainer = DynamicColor.fromPalette({\n    name: 'on_error_container',\n    palette: (s) => s.errorPalette,\n    tone: (s) => s.isDark ? 90 : 10,\n    background: (s) => MaterialDynamicColors.errorContainer,\n    contrastCurve: new ContrastCurve(4.5, 7, 11, 21),\n});\nMaterialDynamicColors.primaryFixed = DynamicColor.fromPalette({\n    name: 'primary_fixed',\n    palette: (s) => s.primaryPalette,\n    tone: (s) => isMonochrome(s) ? 40.0 : 90.0,\n    isBackground: true,\n    background: (s) => MaterialDynamicColors.highestSurface(s),\n    contrastCurve: new ContrastCurve(1, 1, 3, 7),\n    toneDeltaPair: (s) => new ToneDeltaPair(MaterialDynamicColors.primaryFixed, MaterialDynamicColors.primaryFixedDim, 10, 'lighter', true),\n});\nMaterialDynamicColors.primaryFixedDim = DynamicColor.fromPalette({\n    name: 'primary_fixed_dim',\n    palette: (s) => s.primaryPalette,\n    tone: (s) => isMonochrome(s) ? 30.0 : 80.0,\n    isBackground: true,\n    background: (s) => MaterialDynamicColors.highestSurface(s),\n    contrastCurve: new ContrastCurve(1, 1, 3, 7),\n    toneDeltaPair: (s) => new ToneDeltaPair(MaterialDynamicColors.primaryFixed, MaterialDynamicColors.primaryFixedDim, 10, 'lighter', true),\n});\nMaterialDynamicColors.onPrimaryFixed = DynamicColor.fromPalette({\n    name: 'on_primary_fixed',\n    palette: (s) => s.primaryPalette,\n    tone: (s) => isMonochrome(s) ? 100.0 : 10.0,\n    background: (s) => MaterialDynamicColors.primaryFixedDim,\n    secondBackground: (s) => MaterialDynamicColors.primaryFixed,\n    contrastCurve: new ContrastCurve(4.5, 7, 11, 21),\n});\nMaterialDynamicColors.onPrimaryFixedVariant = DynamicColor.fromPalette({\n    name: 'on_primary_fixed_variant',\n    palette: (s) => s.primaryPalette,\n    tone: (s) => isMonochrome(s) ? 90.0 : 30.0,\n    background: (s) => MaterialDynamicColors.primaryFixedDim,\n    secondBackground: (s) => MaterialDynamicColors.primaryFixed,\n    contrastCurve: new ContrastCurve(3, 4.5, 7, 11),\n});\nMaterialDynamicColors.secondaryFixed = DynamicColor.fromPalette({\n    name: 'secondary_fixed',\n    palette: (s) => s.secondaryPalette,\n    tone: (s) => isMonochrome(s) ? 80.0 : 90.0,\n    isBackground: true,\n    background: (s) => MaterialDynamicColors.highestSurface(s),\n    contrastCurve: new ContrastCurve(1, 1, 3, 7),\n    toneDeltaPair: (s) => new ToneDeltaPair(MaterialDynamicColors.secondaryFixed, MaterialDynamicColors.secondaryFixedDim, 10, 'lighter', true),\n});\nMaterialDynamicColors.secondaryFixedDim = DynamicColor.fromPalette({\n    name: 'secondary_fixed_dim',\n    palette: (s) => s.secondaryPalette,\n    tone: (s) => isMonochrome(s) ? 70.0 : 80.0,\n    isBackground: true,\n    background: (s) => MaterialDynamicColors.highestSurface(s),\n    contrastCurve: new ContrastCurve(1, 1, 3, 7),\n    toneDeltaPair: (s) => new ToneDeltaPair(MaterialDynamicColors.secondaryFixed, MaterialDynamicColors.secondaryFixedDim, 10, 'lighter', true),\n});\nMaterialDynamicColors.onSecondaryFixed = DynamicColor.fromPalette({\n    name: 'on_secondary_fixed',\n    palette: (s) => s.secondaryPalette,\n    tone: (s) => 10.0,\n    background: (s) => MaterialDynamicColors.secondaryFixedDim,\n    secondBackground: (s) => MaterialDynamicColors.secondaryFixed,\n    contrastCurve: new ContrastCurve(4.5, 7, 11, 21),\n});\nMaterialDynamicColors.onSecondaryFixedVariant = DynamicColor.fromPalette({\n    name: 'on_secondary_fixed_variant',\n    palette: (s) => s.secondaryPalette,\n    tone: (s) => isMonochrome(s) ? 25.0 : 30.0,\n    background: (s) => MaterialDynamicColors.secondaryFixedDim,\n    secondBackground: (s) => MaterialDynamicColors.secondaryFixed,\n    contrastCurve: new ContrastCurve(3, 4.5, 7, 11),\n});\nMaterialDynamicColors.tertiaryFixed = DynamicColor.fromPalette({\n    name: 'tertiary_fixed',\n    palette: (s) => s.tertiaryPalette,\n    tone: (s) => isMonochrome(s) ? 40.0 : 90.0,\n    isBackground: true,\n    background: (s) => MaterialDynamicColors.highestSurface(s),\n    contrastCurve: new ContrastCurve(1, 1, 3, 7),\n    toneDeltaPair: (s) => new ToneDeltaPair(MaterialDynamicColors.tertiaryFixed, MaterialDynamicColors.tertiaryFixedDim, 10, 'lighter', true),\n});\nMaterialDynamicColors.tertiaryFixedDim = DynamicColor.fromPalette({\n    name: 'tertiary_fixed_dim',\n    palette: (s) => s.tertiaryPalette,\n    tone: (s) => isMonochrome(s) ? 30.0 : 80.0,\n    isBackground: true,\n    background: (s) => MaterialDynamicColors.highestSurface(s),\n    contrastCurve: new ContrastCurve(1, 1, 3, 7),\n    toneDeltaPair: (s) => new ToneDeltaPair(MaterialDynamicColors.tertiaryFixed, MaterialDynamicColors.tertiaryFixedDim, 10, 'lighter', true),\n});\nMaterialDynamicColors.onTertiaryFixed = DynamicColor.fromPalette({\n    name: 'on_tertiary_fixed',\n    palette: (s) => s.tertiaryPalette,\n    tone: (s) => isMonochrome(s) ? 100.0 : 10.0,\n    background: (s) => MaterialDynamicColors.tertiaryFixedDim,\n    secondBackground: (s) => MaterialDynamicColors.tertiaryFixed,\n    contrastCurve: new ContrastCurve(4.5, 7, 11, 21),\n});\nMaterialDynamicColors.onTertiaryFixedVariant = DynamicColor.fromPalette({\n    name: 'on_tertiary_fixed_variant',\n    palette: (s) => s.tertiaryPalette,\n    tone: (s) => isMonochrome(s) ? 90.0 : 30.0,\n    background: (s) => MaterialDynamicColors.tertiaryFixedDim,\n    secondBackground: (s) => MaterialDynamicColors.tertiaryFixed,\n    contrastCurve: new ContrastCurve(3, 4.5, 7, 11),\n});\n//# sourceMappingURL=material_dynamic_colors.js.map","/**\n * @license\n * Copyright 2021 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { Hct } from '../hct/hct.js';\n/**\n *  A convenience class for retrieving colors that are constant in hue and\n *  chroma, but vary in tone.\n */\nexport class TonalPalette {\n    /**\n     * @param argb ARGB representation of a color\n     * @return Tones matching that color's hue and chroma.\n     */\n    static fromInt(argb) {\n        const hct = Hct.fromInt(argb);\n        return TonalPalette.fromHct(hct);\n    }\n    /**\n     * @param hct Hct\n     * @return Tones matching that color's hue and chroma.\n     */\n    static fromHct(hct) {\n        return new TonalPalette(hct.hue, hct.chroma, hct);\n    }\n    /**\n     * @param hue HCT hue\n     * @param chroma HCT chroma\n     * @return Tones matching hue and chroma.\n     */\n    static fromHueAndChroma(hue, chroma) {\n        return new TonalPalette(hue, chroma, TonalPalette.createKeyColor(hue, chroma));\n    }\n    constructor(hue, chroma, keyColor) {\n        this.hue = hue;\n        this.chroma = chroma;\n        this.keyColor = keyColor;\n        this.cache = new Map();\n    }\n    static createKeyColor(hue, chroma) {\n        const startTone = 50.0;\n        let smallestDeltaHct = Hct.from(hue, chroma, startTone);\n        let smallestDelta = Math.abs(smallestDeltaHct.chroma - chroma);\n        // Starting from T50, check T+/-delta to see if they match the requested\n        // chroma.\n        //\n        // Starts from T50 because T50 has the most chroma available, on\n        // average. Thus it is most likely to have a direct answer and minimize\n        // iteration.\n        for (let delta = 1.0; delta < 50.0; delta += 1.0) {\n            // Termination condition rounding instead of minimizing delta to avoid\n            // case where requested chroma is 16.51, and the closest chroma is 16.49.\n            // Error is minimized, but when rounded and displayed, requested chroma\n            // is 17, key color's chroma is 16.\n            if (Math.round(chroma) === Math.round(smallestDeltaHct.chroma)) {\n                return smallestDeltaHct;\n            }\n            const hctAdd = Hct.from(hue, chroma, startTone + delta);\n            const hctAddDelta = Math.abs(hctAdd.chroma - chroma);\n            if (hctAddDelta < smallestDelta) {\n                smallestDelta = hctAddDelta;\n                smallestDeltaHct = hctAdd;\n            }\n            const hctSubtract = Hct.from(hue, chroma, startTone - delta);\n            const hctSubtractDelta = Math.abs(hctSubtract.chroma - chroma);\n            if (hctSubtractDelta < smallestDelta) {\n                smallestDelta = hctSubtractDelta;\n                smallestDeltaHct = hctSubtract;\n            }\n        }\n        return smallestDeltaHct;\n    }\n    /**\n     * @param tone HCT tone, measured from 0 to 100.\n     * @return ARGB representation of a color with that tone.\n     */\n    tone(tone) {\n        let argb = this.cache.get(tone);\n        if (argb === undefined) {\n            argb = Hct.from(this.hue, this.chroma, tone).toInt();\n            this.cache.set(tone, argb);\n        }\n        return argb;\n    }\n    /**\n     * @param tone HCT tone.\n     * @return HCT representation of a color with that tone.\n     */\n    getHct(tone) {\n        return Hct.fromInt(this.tone(tone));\n    }\n}\n//# sourceMappingURL=tonal_palette.js.map","/**\n * @license\n * Copyright 2021 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { Hct } from '../hct/hct.js';\nimport { TonalPalette } from './tonal_palette.js';\n/**\n * An intermediate concept between the key color for a UI theme, and a full\n * color scheme. 5 sets of tones are generated, all except one use the same hue\n * as the key color, and all vary in chroma.\n */\nexport class CorePalette {\n    /**\n     * @param argb ARGB representation of a color\n     */\n    static of(argb) {\n        return new CorePalette(argb, false);\n    }\n    /**\n     * @param argb ARGB representation of a color\n     */\n    static contentOf(argb) {\n        return new CorePalette(argb, true);\n    }\n    /**\n     * Create a [CorePalette] from a set of colors\n     */\n    static fromColors(colors) {\n        return CorePalette.createPaletteFromColors(false, colors);\n    }\n    /**\n     * Create a content [CorePalette] from a set of colors\n     */\n    static contentFromColors(colors) {\n        return CorePalette.createPaletteFromColors(true, colors);\n    }\n    static createPaletteFromColors(content, colors) {\n        const palette = new CorePalette(colors.primary, content);\n        if (colors.secondary) {\n            const p = new CorePalette(colors.secondary, content);\n            palette.a2 = p.a1;\n        }\n        if (colors.tertiary) {\n            const p = new CorePalette(colors.tertiary, content);\n            palette.a3 = p.a1;\n        }\n        if (colors.error) {\n            const p = new CorePalette(colors.error, content);\n            palette.error = p.a1;\n        }\n        if (colors.neutral) {\n            const p = new CorePalette(colors.neutral, content);\n            palette.n1 = p.n1;\n        }\n        if (colors.neutralVariant) {\n            const p = new CorePalette(colors.neutralVariant, content);\n            palette.n2 = p.n2;\n        }\n        return palette;\n    }\n    constructor(argb, isContent) {\n        const hct = Hct.fromInt(argb);\n        const hue = hct.hue;\n        const chroma = hct.chroma;\n        if (isContent) {\n            this.a1 = TonalPalette.fromHueAndChroma(hue, chroma);\n            this.a2 = TonalPalette.fromHueAndChroma(hue, chroma / 3);\n            this.a3 = TonalPalette.fromHueAndChroma(hue + 60, chroma / 2);\n            this.n1 = TonalPalette.fromHueAndChroma(hue, Math.min(chroma / 12, 4));\n            this.n2 = TonalPalette.fromHueAndChroma(hue, Math.min(chroma / 6, 8));\n        }\n        else {\n            this.a1 = TonalPalette.fromHueAndChroma(hue, Math.max(48, chroma));\n            this.a2 = TonalPalette.fromHueAndChroma(hue, 16);\n            this.a3 = TonalPalette.fromHueAndChroma(hue + 60, 24);\n            this.n1 = TonalPalette.fromHueAndChroma(hue, 4);\n            this.n2 = TonalPalette.fromHueAndChroma(hue, 8);\n        }\n        this.error = TonalPalette.fromHueAndChroma(25, 84);\n    }\n}\n//# sourceMappingURL=core_palette.js.map","/**\n * @license\n * Copyright 2021 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n// This file is automatically generated. Do not modify it.\nimport { CorePalette } from '../palettes/core_palette.js';\n/**\n * Represents a Material color scheme, a mapping of color roles to colors.\n */\nexport class Scheme {\n    get primary() {\n        return this.props.primary;\n    }\n    get onPrimary() {\n        return this.props.onPrimary;\n    }\n    get primaryContainer() {\n        return this.props.primaryContainer;\n    }\n    get onPrimaryContainer() {\n        return this.props.onPrimaryContainer;\n    }\n    get secondary() {\n        return this.props.secondary;\n    }\n    get onSecondary() {\n        return this.props.onSecondary;\n    }\n    get secondaryContainer() {\n        return this.props.secondaryContainer;\n    }\n    get onSecondaryContainer() {\n        return this.props.onSecondaryContainer;\n    }\n    get tertiary() {\n        return this.props.tertiary;\n    }\n    get onTertiary() {\n        return this.props.onTertiary;\n    }\n    get tertiaryContainer() {\n        return this.props.tertiaryContainer;\n    }\n    get onTertiaryContainer() {\n        return this.props.onTertiaryContainer;\n    }\n    get error() {\n        return this.props.error;\n    }\n    get onError() {\n        return this.props.onError;\n    }\n    get errorContainer() {\n        return this.props.errorContainer;\n    }\n    get onErrorContainer() {\n        return this.props.onErrorContainer;\n    }\n    get background() {\n        return this.props.background;\n    }\n    get onBackground() {\n        return this.props.onBackground;\n    }\n    get surface() {\n        return this.props.surface;\n    }\n    get onSurface() {\n        return this.props.onSurface;\n    }\n    get surfaceVariant() {\n        return this.props.surfaceVariant;\n    }\n    get onSurfaceVariant() {\n        return this.props.onSurfaceVariant;\n    }\n    get outline() {\n        return this.props.outline;\n    }\n    get outlineVariant() {\n        return this.props.outlineVariant;\n    }\n    get shadow() {\n        return this.props.shadow;\n    }\n    get scrim() {\n        return this.props.scrim;\n    }\n    get inverseSurface() {\n        return this.props.inverseSurface;\n    }\n    get inverseOnSurface() {\n        return this.props.inverseOnSurface;\n    }\n    get inversePrimary() {\n        return this.props.inversePrimary;\n    }\n    /**\n     * @param argb ARGB representation of a color.\n     * @return Light Material color scheme, based on the color's hue.\n     */\n    static light(argb) {\n        return Scheme.lightFromCorePalette(CorePalette.of(argb));\n    }\n    /**\n     * @param argb ARGB representation of a color.\n     * @return Dark Material color scheme, based on the color's hue.\n     */\n    static dark(argb) {\n        return Scheme.darkFromCorePalette(CorePalette.of(argb));\n    }\n    /**\n     * @param argb ARGB representation of a color.\n     * @return Light Material content color scheme, based on the color's hue.\n     */\n    static lightContent(argb) {\n        return Scheme.lightFromCorePalette(CorePalette.contentOf(argb));\n    }\n    /**\n     * @param argb ARGB representation of a color.\n     * @return Dark Material content color scheme, based on the color's hue.\n     */\n    static darkContent(argb) {\n        return Scheme.darkFromCorePalette(CorePalette.contentOf(argb));\n    }\n    /**\n     * Light scheme from core palette\n     */\n    static lightFromCorePalette(core) {\n        return new Scheme({\n            primary: core.a1.tone(40),\n            onPrimary: core.a1.tone(100),\n            primaryContainer: core.a1.tone(90),\n            onPrimaryContainer: core.a1.tone(10),\n            secondary: core.a2.tone(40),\n            onSecondary: core.a2.tone(100),\n            secondaryContainer: core.a2.tone(90),\n            onSecondaryContainer: core.a2.tone(10),\n            tertiary: core.a3.tone(40),\n            onTertiary: core.a3.tone(100),\n            tertiaryContainer: core.a3.tone(90),\n            onTertiaryContainer: core.a3.tone(10),\n            error: core.error.tone(40),\n            onError: core.error.tone(100),\n            errorContainer: core.error.tone(90),\n            onErrorContainer: core.error.tone(10),\n            background: core.n1.tone(99),\n            onBackground: core.n1.tone(10),\n            surface: core.n1.tone(99),\n            onSurface: core.n1.tone(10),\n            surfaceVariant: core.n2.tone(90),\n            onSurfaceVariant: core.n2.tone(30),\n            outline: core.n2.tone(50),\n            outlineVariant: core.n2.tone(80),\n            shadow: core.n1.tone(0),\n            scrim: core.n1.tone(0),\n            inverseSurface: core.n1.tone(20),\n            inverseOnSurface: core.n1.tone(95),\n            inversePrimary: core.a1.tone(80)\n        });\n    }\n    /**\n     * Dark scheme from core palette\n     */\n    static darkFromCorePalette(core) {\n        return new Scheme({\n            primary: core.a1.tone(80),\n            onPrimary: core.a1.tone(20),\n            primaryContainer: core.a1.tone(30),\n            onPrimaryContainer: core.a1.tone(90),\n            secondary: core.a2.tone(80),\n            onSecondary: core.a2.tone(20),\n            secondaryContainer: core.a2.tone(30),\n            onSecondaryContainer: core.a2.tone(90),\n            tertiary: core.a3.tone(80),\n            onTertiary: core.a3.tone(20),\n            tertiaryContainer: core.a3.tone(30),\n            onTertiaryContainer: core.a3.tone(90),\n            error: core.error.tone(80),\n            onError: core.error.tone(20),\n            errorContainer: core.error.tone(30),\n            onErrorContainer: core.error.tone(80),\n            background: core.n1.tone(10),\n            onBackground: core.n1.tone(90),\n            surface: core.n1.tone(10),\n            onSurface: core.n1.tone(90),\n            surfaceVariant: core.n2.tone(30),\n            onSurfaceVariant: core.n2.tone(80),\n            outline: core.n2.tone(60),\n            outlineVariant: core.n2.tone(30),\n            shadow: core.n1.tone(0),\n            scrim: core.n1.tone(0),\n            inverseSurface: core.n1.tone(90),\n            inverseOnSurface: core.n1.tone(20),\n            inversePrimary: core.a1.tone(40)\n        });\n    }\n    constructor(props) {\n        this.props = props;\n    }\n    toJSON() {\n        return {\n            ...this.props\n        };\n    }\n}\n//# sourceMappingURL=scheme.js.map","/**\n * @license\n * Copyright 2021 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport * as colorUtils from './color_utils.js';\n/**\n * Utility methods for hexadecimal representations of colors.\n */\n/**\n * @param argb ARGB representation of a color.\n * @return Hex string representing color, ex. #ff0000 for red.\n */\nexport function hexFromArgb(argb) {\n    const r = colorUtils.redFromArgb(argb);\n    const g = colorUtils.greenFromArgb(argb);\n    const b = colorUtils.blueFromArgb(argb);\n    const outParts = [r.toString(16), g.toString(16), b.toString(16)];\n    // Pad single-digit output values\n    for (const [i, part] of outParts.entries()) {\n        if (part.length === 1) {\n            outParts[i] = '0' + part;\n        }\n    }\n    return '#' + outParts.join('');\n}\n/**\n * @param hex String representing color as hex code. Accepts strings with or\n *     without leading #, and string representing the color using 3, 6, or 8\n *     hex characters.\n * @return ARGB representation of color.\n */\nexport function argbFromHex(hex) {\n    hex = hex.replace('#', '');\n    const isThree = hex.length === 3;\n    const isSix = hex.length === 6;\n    const isEight = hex.length === 8;\n    if (!isThree && !isSix && !isEight) {\n        throw new Error('unexpected hex ' + hex);\n    }\n    let r = 0;\n    let g = 0;\n    let b = 0;\n    if (isThree) {\n        r = parseIntHex(hex.slice(0, 1).repeat(2));\n        g = parseIntHex(hex.slice(1, 2).repeat(2));\n        b = parseIntHex(hex.slice(2, 3).repeat(2));\n    }\n    else if (isSix) {\n        r = parseIntHex(hex.slice(0, 2));\n        g = parseIntHex(hex.slice(2, 4));\n        b = parseIntHex(hex.slice(4, 6));\n    }\n    else if (isEight) {\n        r = parseIntHex(hex.slice(2, 4));\n        g = parseIntHex(hex.slice(4, 6));\n        b = parseIntHex(hex.slice(6, 8));\n    }\n    return (((255 << 24) | ((r & 0x0ff) << 16) | ((g & 0x0ff) << 8) | (b & 0x0ff)) >>>\n        0);\n}\nfunction parseIntHex(value) {\n    // tslint:disable-next-line:ban\n    return parseInt(value, 16);\n}\n//# sourceMappingURL=string_utils.js.map","/**\n * @license\n * Copyright 2021 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { Blend } from '../blend/blend.js';\nimport { CorePalette } from '../palettes/core_palette.js';\nimport { Scheme } from '../scheme/scheme.js';\nimport { sourceColorFromImage } from './image_utils.js';\nimport { hexFromArgb } from './string_utils.js';\n/**\n * Generate a theme from a source color\n *\n * @param source Source color\n * @param customColors Array of custom colors\n * @return Theme object\n */\nexport function themeFromSourceColor(source, customColors = []) {\n    const palette = CorePalette.of(source);\n    return {\n        source,\n        schemes: {\n            light: Scheme.light(source),\n            dark: Scheme.dark(source),\n        },\n        palettes: {\n            primary: palette.a1,\n            secondary: palette.a2,\n            tertiary: palette.a3,\n            neutral: palette.n1,\n            neutralVariant: palette.n2,\n            error: palette.error,\n        },\n        customColors: customColors.map((c) => customColor(source, c)),\n    };\n}\n/**\n * Generate a theme from an image source\n *\n * @param image Image element\n * @param customColors Array of custom colors\n * @return Theme object\n */\nexport async function themeFromImage(image, customColors = []) {\n    const source = await sourceColorFromImage(image);\n    return themeFromSourceColor(source, customColors);\n}\n/**\n * Generate custom color group from source and target color\n *\n * @param source Source color\n * @param color Custom color\n * @return Custom color group\n *\n * @link https://m3.material.io/styles/color/the-color-system/color-roles\n */\nexport function customColor(source, color) {\n    let value = color.value;\n    const from = value;\n    const to = source;\n    if (color.blend) {\n        value = Blend.harmonize(from, to);\n    }\n    const palette = CorePalette.of(value);\n    const tones = palette.a1;\n    return {\n        color,\n        value,\n        light: {\n            color: tones.tone(40),\n            onColor: tones.tone(100),\n            colorContainer: tones.tone(90),\n            onColorContainer: tones.tone(10),\n        },\n        dark: {\n            color: tones.tone(80),\n            onColor: tones.tone(20),\n            colorContainer: tones.tone(30),\n            onColorContainer: tones.tone(90),\n        },\n    };\n}\n/**\n * Apply a theme to an element\n *\n * @param theme Theme object\n * @param options Options\n */\nexport function applyTheme(theme, options) {\n    const target = options?.target || document.body;\n    const isDark = options?.dark ?? false;\n    const scheme = isDark ? theme.schemes.dark : theme.schemes.light;\n    setSchemeProperties(target, scheme);\n    if (options?.brightnessSuffix) {\n        setSchemeProperties(target, theme.schemes.dark, '-dark');\n        setSchemeProperties(target, theme.schemes.light, '-light');\n    }\n    if (options?.paletteTones) {\n        const tones = options?.paletteTones ?? [];\n        for (const [key, palette] of Object.entries(theme.palettes)) {\n            const paletteKey = key.replace(/([a-z])([A-Z])/g, '$1-$2').toLowerCase();\n            for (const tone of tones) {\n                const token = `--md-ref-palette-${paletteKey}-${paletteKey}${tone}`;\n                const color = hexFromArgb(palette.tone(tone));\n                target.style.setProperty(token, color);\n            }\n        }\n    }\n}\nfunction setSchemeProperties(target, scheme, suffix = '') {\n    for (const [key, value] of Object.entries(scheme.toJSON())) {\n        const token = key.replace(/([a-z])([A-Z])/g, '$1-$2').toLowerCase();\n        const color = hexFromArgb(value);\n        target.style.setProperty(`--md-sys-color-${token}${suffix}`, color);\n    }\n}\n//# sourceMappingURL=theme_utils.js.map",null],"names":["mathUtils.matrixMultiply","mathUtils.clampInt","utils.whitePointD65","utils.yFromLstar","math.lerp","utils.linearized","math.signum","utils.argbFromXyz","mathUtils.signum","colorUtils.argbFromLinrgb","colorUtils.argbFromLstar","mathUtils.sanitizeDegreesDouble","colorUtils.yFromLstar","utils.lstarFromArgb","utils.lstarFromY","differenceDegrees","mathUtils.differenceDegrees","mathUtils.rotationDirection","colorUtils.lstarFromArgb","math.clampDouble","colorUtils.redFromArgb","colorUtils.greenFromArgb","colorUtils.blueFromArgb"],"mappings":"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IAAI,kBAAkB,EAAE,iBAAiB,EAAE,kBAAkB;AAC7D,IAAI,kBAAkB,EAAE,kBAAkB,EAAE,kBAAkB;AAC9D,IAAI,kBAAkB,EAAE,kBAAkB,EAAE,kBAAkB;AAC9D,IAAI,iBAAiB,EAAE,kBAAkB,EAAE,kBAAkB;AAC7D,IAAI,gBAAgB,EAAE,kBAAkB,EAAE,kBAAkB;AAC5D,IAAI,kBAAkB,EAAE,kBAAkB,EAAE,iBAAiB;AAC7D,IAAI,kBAAkB,EAAE,kBAAkB,EAAE,kBAAkB;AAC9D,IAAI,kBAAkB,EAAE,kBAAkB,EAAE,iBAAiB;AAC7D,IAAI,iBAAiB,EAAE,iBAAiB,EAAE,iBAAiB;AAC3D,IAAI,iBAAiB,EAAE,iBAAiB,EAAE,iBAAiB;AAC3D,IAAI,iBAAiB,EAAE,iBAAiB,EAAE,iBAAiB;AAC3D,IAAI,iBAAiB,EAAE,gBAAgB,EAAE,kBAAkB;AAC3D,IAAI,kBAAkB,EAAE,iBAAiB,EAAE,iBAAiB;AAC5D,IAAI,iBAAiB,EAAE,iBAAiB,EAAE,iBAAiB;AAC3D,IAAI,iBAAiB,EAAE,kBAAkB,EAAE,iBAAiB;AAC5D,IAAI,iBAAiB,EAAE,iBAAiB,EAAE,kBAAkB;AAC5D,IAAI,kBAAkB,EAAE,iBAAiB,EAAE,iBAAiB;AAC5D,IAAI,iBAAiB,EAAE,iBAAiB,EAAE,iBAAiB;AAC3D,IAAI,iBAAiB,EAAE,iBAAiB,EAAE,iBAAiB;AAC3D,IAAI,iBAAiB,EAAE,iBAAiB,EAAE,kBAAkB;AAC5D,IAAI,kBAAkB,EAAE,iBAAiB,EAAE,gBAAgB;AAC3D,IAAI,kBAAkB,EAAE,kBAAkB,EAAE,kBAAkB;AAC9D,IAAI,kBAAkB,EAAE,kBAAkB,EAAE,kBAAkB;AAC9D,IAAI,kBAAkB,EAAE,kBAAkB,EAAE,kBAAkB;AAC9D,IAAI,iBAAiB,EAAE,kBAAkB,EAAE,kBAAkB;AAC7D,IAAI,kBAAkB,EAAE,iBAAiB,EAAE,kBAAkB;AAC7D,IAAI,kBAAkB,EAAE,iBAAiB,EAAE,kBAAkB;AAC7D,IAAI,iBAAiB,EAAE,iBAAiB,EAAE,iBAAiB;AAC3D,IAAI,kBAAkB,EAAE,iBAAiB,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"}