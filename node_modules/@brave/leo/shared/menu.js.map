{"version":3,"file":"menu.js","sources":["../src/svelteDirectives/clickOutside.ts","../src/components/menu/menu.svelte"],"sourcesContent":[null,"<script context=\"module\" lang=\"ts\">\n  import type { HTMLAttributes } from 'svelte/elements'\n  declare global {\n    namespace JSX {\n      interface IntrinsicElements {\n        'leo-menu-item': HTMLAttributes<HTMLElement> & {\n          // Note: This should line up with Reacts key type, but we don't want\n          // to depend on React in this layer, so we just define it manually.\n          key?: string | number | null\n          children?: any\n          onClick?: EventListener\n        }\n        'leo-option': HTMLAttributes<HTMLElement> & {\n          key?: string | number | null\n          value?: string\n          children?: any\n        }\n      }\n    }\n  }\n\n  export interface CloseEventDetail {\n    originalEvent: Event\n    reason: 'select' | 'blur' | 'cancel'\n  }\n\n  export type CloseEvent = (detail: CloseEventDetail) => boolean | undefined | void\n\n  export interface SelectItemEventDetail {\n    value: string | undefined\n  }\n</script>\n\n<script lang=\"ts\">\n  import clickOutside from '../../svelteDirectives/clickOutside'\n  import Floating from '../floating/floating.svelte'\n  import { size as sizeMiddleware, type Strategy } from '@floating-ui/dom'\n\n  export let isOpen = false\n  export let target: HTMLElement | undefined = undefined\n  export let currentValue: string | undefined = undefined\n  export let positionStrategy: Strategy = 'absolute'\n  export let onClose: CloseEvent =\n    undefined\n  export let onSelectItem: (detail: SelectItemEventDetail) => void = undefined\n\n  function dispatchClose(\n    originalEvent: Event,\n    reason: CloseEventDetail['reason']\n  ) {\n    // Allow event handlers to cancel closing the dropdown by returning false\n    if (onClose?.({ originalEvent, reason }) !== false) {\n      isOpen = false\n    }\n  }\n\n  let popup: HTMLDivElement\n\n  function getValue(e: Element) {\n    // If the option element doesn't have a value, fallback to using the text\n    // content - this allows writing simplified options:\n    // i.e. <o>1</o>\n    return e.getAttribute('value') ?? e['value'] ?? e.textContent\n  }\n\n  $: menuItems = Array.from(\n    // TODO(petemil): support slot *descendents* that are leo-menu-item or leo-option (or something else unstyled like leo-menu-action?) so that we can\n    // select items that are in complex positions (see an example in the browser app menu zoom controls).\n    (popup?.querySelector('.leo-menu-popup slot') as HTMLSlotElement)\n      ?.assignedElements()\n      ?.filter((element) =>\n        ['LEO-OPTION', 'LEO-MENU-ITEM'].includes(element.tagName)\n      ) ??\n      popup?.querySelectorAll(\n        '.leo-menu-popup > :is(leo-menu-item, leo-option'\n      ) ??\n      []\n  ) as HTMLElement[]\n\n  $: {\n    for (const menuItem of menuItems) {\n      menuItem.setAttribute('tabindex', '0')\n\n      if (menuItem.tagName === 'LEO-OPTION') {\n        menuItem.setAttribute('role', 'option')\n\n        if (currentValue === getValue(menuItem)) {\n          menuItem.setAttribute('aria-selected', '')\n        } else menuItem.removeAttribute('aria-selected')\n      } else {\n        menuItem.setAttribute('role', 'menuitem')\n      }\n    }\n  }\n\n  // Note: we check isOpen !== undefined here so this is recalculated every time the\n  // dropdown is opened/closed.\n  $: minWidth =\n    (isOpen !== undefined && target?.getBoundingClientRect().width) || 0\n\n  function selectMenuItem(e: Event) {\n    // Find the option which was clicked on, if any.\n    const item = menuItems.find((item) => e.composedPath().includes(item))\n\n    // If the event was triggered for something which isn't an option don't fire\n    // a change event.\n    if (!item) return\n\n    // Use data-is-interactive=true to prevent the menu from closing when selected. This implies\n    // there is interacitivity inside the menu item (e.g. a Toggle), which would be good for the user\n    // to see change state and allowing the user to manually close when ready. In other words, when we want\n    // the styles and menu navigation features of leo-menu-item, but we don't want the auto-close.\n    if (\n      (item.tagName === 'LEO-OPTION' || item.tagName === 'LEO-MENU-ITEM') &&\n      !item.dataset.isInteractive\n    ) {\n      dispatchClose(e, 'select')\n    }\n\n    if (item.tagName === 'LEO-OPTION') {\n      currentValue = getValue(item)\n\n      onSelectItem?.({\n        value: currentValue\n      })\n    }\n\n    // When using keyboard navigation to call selectMenuItem, ensure click handlers happen on the item,\n    // but not when this was called in a click handler, otherwise we'll get 2x clicks.\n    if (item.tagName === 'LEO-MENU-ITEM' && e.type !== 'click') {\n      item.click()\n    }\n  }\n\n  /**\n   * Handles changing the currently focused menu element with the up/down arrow.\n   * @param e The KeyboardEvent\n   */\n  function changeSelection(e: KeyboardEvent) {\n    if (!isOpen || !popup) return\n\n    // Handle closing keys\n    if (e.code === 'Escape') {\n      dispatchClose(e, 'cancel')\n      return\n    }\n\n    // We allow the user to select options with ArrowUp/ArrowDown as well as\n    // tab/shift+tab.\n    let dir = 0\n    if (e.code == 'ArrowUp') dir -= 1\n    if (e.code === 'ArrowDown') dir += 1\n    if (dir === 0) return\n\n    // First, find the currently focusedIndex. If no option is selected, we'll\n    // select the first option. Otherwise, we select the next/previous item (and\n    // wrap around).\n    let focusedIndex = menuItems.findIndex((e) => e.matches(':focus-within'))\n    if (focusedIndex === -1) {\n      focusedIndex = 0\n    } else {\n      focusedIndex += dir\n      if (focusedIndex < 0) focusedIndex = menuItems.length - 1\n      if (focusedIndex >= menuItems.length) focusedIndex = 0\n    }\n\n    ;(menuItems[focusedIndex] as any)?.focus()\n    e.preventDefault() // preventDefault, so we don't accidentally scroll\n  }\n\n  function handleBlur(e: MouseEvent) {\n    dispatchClose(e, 'blur')\n  }\n\n  function applySizeMiddleware({ rects, availableHeight }) {\n    popup.style.maxHeight = `var(--leo-menu-max-height, calc(${availableHeight}px - var(--leo-spacing-xl)))`\n  }\n\n  let floatingMiddleware = [sizeMiddleware({ apply: applySizeMiddleware })]\n</script>\n\n<div class=\"leo-menu\" use:clickOutside={isOpen && handleBlur}>\n  {#if isOpen}\n    <Floating\n      {target}\n      placement=\"bottom-start\"\n      autoUpdate\n      middleware={floatingMiddleware}\n      {positionStrategy}\n    >\n      <div\n        class=\"leo-menu-popup\"\n        id=\"menu\"\n        role=\"menu\"\n        tabindex=\"-1\"\n        style:--leo-menu-control-width={`${minWidth}px`}\n        bind:this={popup}\n        on:keypress={(e) => {\n          if (e.code !== 'Enter' && e.code !== 'Space') return\n          selectMenuItem(e)\n        }}\n        on:click={selectMenuItem}\n      >\n        <slot />\n      </div>\n    </Floating>\n  {/if}\n</div>\n\n<svelte:window on:keydown={changeSelection} />\n\n<style lang=\"scss\">\n  :host {\n    display: inline-block;\n  }\n\n  .leo-menu {\n    -webkit-tap-highlight-color: transparent;\n\n    button {\n      all: unset;\n    }\n  }\n\n  .leo-menu .leo-menu-popup {\n    background: var(--leo-color-container-background);\n    box-shadow: var(--leo-effect-elevation-03);\n\n    // TODO(petemill): Make the \"floating-ui\" element be this popup element,\n    // so that we get the correct thing scrolling when overflow happens. In the meantime,\n    // overflow: 'auto' (or anything but 'visible') helps clip the content\n    // to the border-radius.\n    overflow: auto;\n    border: 1px solid var(--leo-color-divider-subtle);\n    border-radius: var(--leo-radius-m);\n    min-width: var(--leo-menu-control-width);\n    display: flex;\n    flex-direction: column;\n  }\n\n  /* custom items can fit in by making optional use of these variables */\n  :global .leo-menu-popup ::slotted(*),\n  :global .leo-menu-popup > * {\n    --leo-menu-item-margin: var(--leo-spacing-s);\n    --leo-menu-item-padding:  var(--leo-spacing-m) var(--leo-spacing-xl);\n    --leo-menu-item-border-radius: var(--leo-spacing-s);\n  }\n\n  /**\n   * Default Styles for our dropdown options. The selectors are broken up\n   * because the :global selector doesn't work with Nesting or combinations (e.g. :is or in ::slotted).\n   * Each pseudo element has two sets of selectors: One for when it's inside a Svelte component, and one for\n   * inside a web component. This could be simplified if leo-menu-item becomes its own Component.\n   */\n  :global :where(.leo-menu-popup) ::slotted(leo-menu-item),\n  :global :where(.leo-menu-popup) ::slotted(leo-option),\n  :global :where(.leo-menu-popup) > leo-menu-item,\n  :global :where(.leo-menu-popup) > leo-option {\n    all: unset;\n    cursor: pointer;\n    margin: var(--leo-menu-item-margin);\n    border-radius: var(--leo-menu-item-border-radius);\n    padding: var(--leo-menu-item-padding);\n    display: revert;\n  }\n\n  :global :where(.leo-menu-popup) ::slotted(leo-menu-item:hover),\n  :global :where(.leo-menu-popup) ::slotted(leo-option:hover),\n  :global :where(.leo-menu-popup) > leo-menu-item:hover,\n  :global :where(.leo-menu-popup) > leo-option:hover {\n    background: var(--leo-color-container-highlight);\n  }\n\n  :global :where(.leo-menu-popup) ::slotted(leo-option[aria-selected]),\n  :global :where(.leo-menu-popup) ::slotted(leo-menu-item[aria-selected]),\n  :global :where(.leo-menu-popup) ::slotted(leo-option:active),\n  :global :where(.leo-menu-popup) ::slotted(leo-menu-item:active),\n  :global :where(.leo-menu-popup) > leo-option[aria-selected],\n  :global :where(.leo-menu-popup) > leo-menu-item[aria-selected],\n  :global :where(.leo-menu-popup) > leo-option:active,\n  :global :where(.leo-menu-popup) > leo-menu-item:active {\n    background: var(--leo-color-container-interactive);\n    color: var(--leo-color-text-interactive);\n  }\n\n  :global :where(.leo-menu-popup) ::slotted(leo-option:focus-visible),\n  :global :where(.leo-menu-popup) ::slotted(leo-menu-item:focus-visible),\n  :global :where(.leo-menu-popup) > leo-option:focus-visible,\n  :global :where(.leo-menu-popup) > leo-menu-item:focus-visible {\n    box-shadow:\n      0px 0px 0px 1.5px rgba(255, 255, 255, 0.5),\n      0px 0px 4px 2px #423eee;\n  }\n</style>\n"],"names":["sizeMiddleware"],"mappings":"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"}