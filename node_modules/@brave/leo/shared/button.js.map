{"version":3,"file":"button.js","sources":["../src/components/button/button.svelte"],"sourcesContent":["<script lang=\"ts\">\n  import type { SvelteHTMLElements } from 'svelte/elements'\n  import type * as Props from './props'\n  import ProgressRing from '../progress/progressRing.svelte'\n\n  // This black magic comes from this thread:\n  // https://github.com/sveltejs/language-tools/issues/442#issuecomment-1278618531\n  //\n  // To quote that thread - This is \"absolute bonkers!\"\n  //\n  // It's interesting, minor variations which I would expect to work on don't,\n  // and this is the only combination which seems to do what we want and I'm not\n  // clear on why. You're welcome to try other approaches here.\n  //\n  // Tips, for if things aren't working right:\n  // 1) npm run gen-types\n  // 2) Reload your VSCode Window (sometimes the Svelte Type Checker struggles).\n  // 3) Make sure any script tags on your component have a `lang=\"ts\"` attribute.\n  type Href = $$Generic<string | undefined>\n  type Disabled = $$Generic<undefined extends Href ? boolean : undefined>\n  type ExcludedProps = 'size' | 'href' | 'hreflang'\n\n  interface CommonProps {\n    kind?: Props.ButtonKind\n    size?: Props.ButtonSize\n    fab?: boolean\n    onClick?: (e: MouseEvent) => void\n  }\n\n  type NalaButtonProps = CommonProps &\n    Omit<Partial<SvelteHTMLElements['button']>, ExcludedProps> & {\n      isDisabled?: Disabled\n      isLoading?: boolean\n      href?: never\n    }\n\n  type NalaLinkProps = CommonProps &\n    Omit<Partial<SvelteHTMLElements['a']>, ExcludedProps> & {\n      href: Href\n    }\n\n  type $$Props = NalaLinkProps | NalaButtonProps\n\n  export let kind: Props.ButtonKind = 'filled'\n  export let size: Props.ButtonSize = 'medium'\n  export let isLoading: boolean = false\n  export let isDisabled: Disabled = undefined\n  export let href: Href = undefined\n  export let fab = false\n\n  export let onClick: (e: MouseEvent) => void = undefined\n\n  $: tag = href ? 'a' : ('button' as 'a' | 'button')\n  $: disabled = !!(isDisabled || (isDisabled as any) === '')\n</script>\n\n<svelte:element\n  this={tag}\n  href={href || undefined}\n  class=\"leoButton\"\n  class:isFilled={kind === 'filled'}\n  class:isOutline={kind === 'outline'}\n  class:isPlain={kind === 'plain'}\n  class:isPlainFaint={kind === 'plain-faint'}\n  class:isHero={kind === 'hero'}\n  class:isJumbo={size === 'jumbo'}\n  class:isLarge={size === 'large'}\n  class:isMedium={size === 'medium'}\n  class:isSmall={size === 'small'}\n  class:isTiny={size === 'tiny'}\n  class:fab\n  class:isLoading\n  disabled={isLoading || disabled || undefined}\n  on:click={onClick}\n  {...$$restProps}\n>\n  {#if isLoading}\n    <div class:content={!fab}>\n      {#if $$slots.loading}\n        <slot name=\"loading\" />\n      {:else if !fab}\n        <slot>Leo Button</slot>\n      {/if}\n    </div>\n    <ProgressRing />\n  {:else}\n    <slot name=\"icon-before\" />\n    <div class:content={!fab}>\n      <slot>Leo Button</slot>\n    </div>\n    <slot name=\"icon-after\" />\n  {/if}\n</svelte:element>\n\n<style lang=\"scss\">\n  :host {\n    display: inline-block;\n    flex-grow: 1;\n    container-type: normal;\n  }\n  :host button {\n    width: 100%;\n  }\n\n  .leoButton {\n    /**\n     * These are not literally the foreground/background of the button, but\n     * rather the base colors, which will be remixed to make generate the\n     * button color palette.\n     */\n    --foreground: var(--leo-color-text-primary);\n    --background: var(--leo-color-container-background);\n\n    --primary-color: var(\n      --leo-button-color,\n      var(--leo-color-button-background)\n    );\n    --mixed-primary-color: var(--primary-color);\n  }\n\n  // Main styles and states\n  .leoButton,\n  .leoButton:visited:not(:hover) {\n    // Gradients cannot have a transition, so we need to reset `transition`\n    // to only apply to `box-shadow` and `border-color` in .isHero\n    --default-transition: box-shadow 0.12s ease-in-out, color 0.12s ease-in-out,\n      border-color 0.12s ease-in-out, opacity 0.12s ease-in-out;\n    --box-shadow-hover: var(--leo-effect-elevation-02);\n    --box-shadow-focus: var(--leo-effect-focus-state);\n    --radius: 0;\n    --border-color: transparent;\n    --border-width: 0px;\n    --leo-icon-color: var(--icon-color);\n    --leo-progressring-size: var(--leo-icon-size);\n    --leo-progressring-color: var(--icon-color);\n\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    cursor: pointer;\n    box-sizing: border-box;\n    -webkit-tap-highlight-color: transparent;\n    transition:\n      background 0.12s ease-in-out,\n      var(--default-transition);\n    box-shadow: none;\n    border: solid var(--border-width, 1px) var(--border-color, transparent);\n    border-radius: var(--leo-button-radius, var(--radius));\n    background: var(--bg);\n    color: var(--color);\n    text-decoration: none;\n    padding: var(\n      --leo-button-padding,\n      calc(var(--padding-y) - var(--border-width)) var(--padding-x)\n    );\n    max-height: max-content;\n\n    &.fab {\n      max-width: max-content;\n    }\n\n    .content {\n      padding: 0 var(--icon-gap);\n    }\n\n    /*\n     * Should only be necessary for Tailwind consumers where there's\n     * no guarantee that the button will contain a child element.\n     */\n    &:not(:has(> *)) {\n      padding-left: var(\n        --leo-button-padding,\n        calc(var(--padding-x) + var(--icon-gap))\n      );\n      padding-right: var(\n        --leo-button-padding,\n        calc(var(--padding-x) + var(--icon-gap))\n      );\n    }\n  }\n\n  .leoButton:not(:disabled) {\n    &:hover,\n    [data-is-button-target]:hover :host .leoButton,\n    [data-is-button-target]:hover .leoButton {\n      --leo-icon-color: var(--icon-hover-color, var(--icon-color));\n      --mixed-primary-color: var(--leo-color-primary-70);\n\n      /** If we support the color-mix syntax, infer the hover color */\n      @supports (color: color-mix(in srgb, transparent, transparent)) {\n        --mixed-primary-color: color-mix(\n          in srgb,\n          var(--primary-color),\n          var(--foreground) 20%\n        );\n      }\n\n      background: var(--bg-hover, var(--bg));\n      color: var(--color-hover, var(--color));\n      box-shadow: var(--box-shadow-hover);\n      border-color: var(--border-color-hover, var(--border-color));\n    }\n\n    &:active {\n      opacity: 0.75;\n      background: var(--bg-active, var(--bg));\n      color: var(--color-active, var(--color-hover, var(--color)));\n    }\n\n    &:focus-visible {\n      outline: none;\n      color: var(--color-focus, var(--color));\n      box-shadow: var(--box-shadow-focus);\n      background: var(--bg-focus, var(--bg));\n      border-color: var(--border-color-focus, var(--border-color));\n    }\n  }\n\n  // State Definitions\n  .leoButton.isLoading {\n    opacity: 0.75;\n    background: var(--bg-loading, var(--bg));\n    color: var(--color-loading, var(--color));\n  }\n  :host:disabled .leoButton,\n  .leoButton:disabled {\n    cursor: auto;\n  }\n  :host:disabled .leoButton:not(.isLoading),\n  .leoButton:disabled:not(.isLoading) {\n    --icon-color: var(--leo-color-icon-disabled);\n    background: var(--bg-disabled, var(--bg));\n    color: var(--leo-color-text-disabled);\n    border-color: var(--leo-color-button-disabled);\n  }\n\n  // Size Variations\n  .leoButton.isTiny {\n    font: var(--leo-font-components-button-small);\n    min-height: 28px;\n    --padding-y: var(--leo-spacing-s);\n    --padding-x: var(--leo-spacing-m);\n    --radius: var(--leo-radius-m);\n    --leo-icon-size: var(--leo-icon-xs);\n    --icon-gap: var(--leo-spacing-m);\n\n    &.fab {\n      min-height: 0;\n      --padding-x: 6px;\n      --padding-y: 6px;\n    }\n  }\n  .leoButton.isSmall {\n    font: var(--leo-font-components-button-small);\n    min-height: 36px;\n    --padding-y: var(--leo-spacing-m);\n    --padding-x: var(--leo-spacing-l);\n    --radius: var(--leo-radius-m);\n    --leo-icon-size: var(--leo-icon-s);\n    --icon-gap: var(--leo-spacing-m);\n\n    &.fab {\n      min-height: 0;\n      --padding-x: var(--leo-spacing-m);\n    }\n  }\n  .leoButton.isMedium {\n    font: var(--leo-font-components-button-default);\n    min-height: 44px;\n    --padding-y: var(--leo-spacing-l);\n    --padding-x: var(--leo-spacing-xl);\n    --radius: var(--leo-radius-l);\n    --leo-icon-size: var(--leo-icon-m);\n    --icon-gap: var(--leo-spacing-m);\n\n    &.fab {\n      min-height: 0;\n      --padding-x: var(--leo-spacing-l);\n      --padding-y: var(--leo-spacing-l);\n    }\n  }\n  .leoButton.isLarge {\n    font: var(--leo-font-components-button-large);\n    min-height: 52px;\n    --padding-y: var(--leo-spacing-l);\n    --padding-x: var(--leo-spacing-xl);\n    --radius: var(--leo-radius-xl);\n    --leo-icon-size: var(--leo-icon-m);\n    --icon-gap: 10px;\n\n    &.fab {\n      min-height: 0;\n      --padding-x: var(--leo-spacing-xl);\n      --padding-y: var(--leo-spacing-xl);\n    }\n  }\n  .leoButton.isJumbo {\n    font: var(--leo-font-components-button-jumbo);\n    min-height: 60px;\n    --padding-y: var(--leo-spacing-xl);\n    --padding-x: var(--leo-spacing-xl);\n    --radius: var(--leo-radius-xl);\n    --leo-icon-size: var(--leo-icon-l);\n    --icon-gap: var(--leo-spacing-l);\n\n    &.fab {\n      min-height: 0;\n      --padding-x: 18px;\n      --padding-y: 18px;\n    }\n  }\n\n  // Kind Variations\n  .leoButton.isFilled {\n    --bg: var(--mixed-primary-color);\n    --bg-disabled: var(--leo-color-button-disabled);\n    --color: var(--leo-color-schemes-on-primary);\n    --icon-color: var(--color);\n\n    @container style(--leo-button-color) {\n      --color: white;\n    }\n  }\n\n  .leoButton.isOutline {\n    --bg: transparent;\n    --bg-active: --leo-color-neutral-20;\n    --color: var(--leo-color-text-interactive);\n    --border-width: 1px;\n    --border-color: var(--leo-color-divider-interactive);\n    --border-color-hover: var(--leo-color-primary-40);\n    --border-color-focus: var(--leo-color-divider-interactive);\n\n    @container style(--leo-button-color) {\n      --color: var(--mixed-primary-color);\n    }\n\n    @theme (dark) {\n      --border-color-hover: var(--leo-color-primitive-primary-60);\n    }\n\n    /** If we support color mix, infer border colors from primary color */\n    @supports (color: color-mix(in srgb, transparent, transparent)) {\n      --border-color: color-mix(\n        in srgb,\n        var(--primary-color),\n        var(--background) 50%\n      );\n      --border-color-hover: var(--primary-color);\n    }\n\n    --box-shadow-focus: 0px 0px 0px 2px #423eee,\n      0px 0px 0px 1px rgba(255, 255, 255, 0.3);\n    --icon-color: var(--color);\n  }\n  .leoButton.isPlain {\n    --color: var(--leo-color-text-interactive);\n    --box-shadow-hover: none;\n    --bg-hover-mix: 5%;\n\n    @container style(--leo-button-color) {\n      --color: var(--mixed-primary-color);\n    }\n\n    @theme (dark) {\n      --bg-hover-mix: 10%;\n    }\n\n    @supports (color: color-mix(in srgb, transparent, transparent)) {\n      --bg-hover: color-mix(\n        in srgb,\n        var(--primary-color) var(--bg-hover-mix),\n        var(--background)\n      );\n    }\n\n    &:disabled:not(.isLoading) {\n      --color: var(--leo-color-text-primary);\n    }\n\n    &.fab {\n      --radius: var(--leo-radius-m);\n      --bg-hover: transparent;\n      --padding-y: 0;\n      --padding-x: 0;\n    }\n  }\n  .leoButton.isPlainFaint {\n    --foreground: black;\n    --primary-color: currentColor;\n    --color: var(--mixed-primary-color);\n    --box-shadow-hover: none;\n    --icon-color: var(--mixed-primary-color);\n    --bg-hover-mix: 5%;\n\n    @theme (dark) {\n      --foreground: white;\n      --bg-hover-mix: 10%;\n    }\n\n    @supports (color: color-mix(in srgb, transparent, transparent)) {\n      --icon-color: color-mix(\n        in srgb,\n        var(--primary-color),\n        var(--background) 30%\n      );\n\n      --icon-hover-color: color-mix(\n        in srgb,\n        var(--icon-color),\n        var(--foreground) 20%\n      );\n\n      position: relative;\n      z-index: 0;\n\n      // This pseudo-element is frustratingly necessary due to transitions mysteriously not working with our use of currentColor.\n      &::before {\n        content: '';\n        width: 100%;\n        height: 100%;\n        position: absolute;\n        top: 0;\n        right: 0;\n        bottom: 0;\n        left: 0;\n        z-index: -1;\n        border-radius: var(--radius);\n        background-color: color-mix(\n          in srgb,\n          var(--primary-color) var(--bg-hover-mix),\n          transparent\n        );\n        transition: var(--default-transition);\n        opacity: 0.001;\n      }\n\n      &:hover::before {\n        opacity: 1;\n      }\n    }\n\n    &.fab {\n      --radius: var(--leo-radius-m);\n      --bg-hover: transparent;\n      --padding-y: 0;\n      --padding-x: 0;\n\n      &::before {\n        content: unset;\n      }\n    }\n  }\n  .leoButton.isHero {\n    transition: var(--default-transition);\n    --bg: transparent;\n    --bg-focus: var(--bg);\n    --bg-disabled: var(--leo-color-button-disabled);\n    --color: white;\n    --icon-color: white;\n    --default-bg-opacity: 1;\n\n    position: relative;\n    z-index: 0;\n\n    &:not(:disabled:not(.isLoading)) {\n      &::before,\n      &::after {\n        content: '';\n        pointer-events: none;\n        display: block;\n        position: absolute;\n        top: 0;\n        right: 0;\n        bottom: 0;\n        left: 0;\n        border-radius: var(--leo-button-radius, var(--radius));\n      }\n\n      &::before {\n        transition: var(--default-transition);\n        z-index: -1;\n        background: var(--leo-gradient-hero);\n        opacity: var(--default-bg-opacity);\n      }\n\n      &::after {\n        z-index: -2;\n        background: linear-gradient(\n            0deg,\n            rgba(0, 0, 0, 0.2) 0%,\n            rgba(0, 0, 0, 0.2) 100%\n          ),\n          linear-gradient(174deg, #f50 2.32%, #f5002d 93.33%);\n      }\n    }\n\n    &:hover:not(:disabled) {\n      --default-bg-opacity: 0;\n    }\n  }\n\n  .leoButton.fab {\n    aspect-ratio: 1 / 1;\n  }\n</style>\n"],"names":[],"mappings":"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"}