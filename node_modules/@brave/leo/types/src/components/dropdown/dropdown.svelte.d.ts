import { SvelteComponentTyped } from "svelte";
import type { HTMLAttributes } from 'svelte/elements';
declare global {
    namespace JSX {
        interface IntrinsicElements {
            'leo-option': HTMLAttributes<HTMLElement> & {
                key?: string | number | null;
                value?: string;
                children?: any;
            };
        }
    }
}
import { type Mode, type Size } from '../formItem/formItem.svelte';
import { type CloseEvent, type SelectItemEventDetail } from '../menu/menu.svelte';
import type { Strategy } from '@floating-ui/dom';
declare const __propDef: {
    props: {
        placeholder?: string;
        value?: string | undefined;
        disabled?: boolean;
        size?: Size;
        required?: boolean;
        mode?: Mode;
        showErrors?: boolean;
        positionStrategy?: Strategy;
        onChange?: (detail: SelectItemEventDetail) => void;
        onClose?: CloseEvent;
    };
    events: {
        [evt: string]: CustomEvent<any>;
    };
    slots: {
        label: {
            slot: string;
        };
        'left-icon': {
            slot: string;
        };
        value: {
            value: string;
        };
        placeholder: {};
        'right-icon': {
            slot: string;
        };
        default: {};
        errors: {};
    };
};
export type DropdownProps = typeof __propDef.props;
export type DropdownEvents = typeof __propDef.events;
export type DropdownSlots = typeof __propDef.slots;
export default class Dropdown extends SvelteComponentTyped<DropdownProps, DropdownEvents, DropdownSlots> {
}
export {};
