import { SvelteComponentTyped } from "svelte";
export declare const modes: readonly ["hero", "info", "default", "mini"];
export type Mode = (typeof modes)[number];
import type { Placement, Strategy } from '@floating-ui/dom';
declare const __propDef: {
    props: {
        text?: string | undefined;
        placement?: Placement;
        fallbackPlacements?: Placement[];
        positionStrategy?: Strategy;
        flip?: boolean;
        shift?: number | undefined;
        offset?: number;
        mode?: Mode;
        /** The length of time the tooltip is open in ms after mouse leave of
           * the trigger or tooltip */ mouseleaveTimeout?: number;
        visible?: boolean | undefined;
        /** The length of time in ms the tooltip element takes to fade
           * after the users mouse leaves the trigger or tooltip*/ fadeDuration?: number;
        /** Called when the visibility of the tooltip is changed */ onVisibilityChange?: (detail: {
            visible: boolean;
        }) => void;
    };
    events: {
        [evt: string]: CustomEvent<any>;
    };
    slots: {
        content: {};
        default: {};
    };
};
export type TooltipProps = typeof __propDef.props;
export type TooltipEvents = typeof __propDef.events;
export type TooltipSlots = typeof __propDef.slots;
export default class Tooltip extends SvelteComponentTyped<TooltipProps, TooltipEvents, TooltipSlots> {
}
export {};
