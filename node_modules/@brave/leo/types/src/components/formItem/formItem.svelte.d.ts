import { SvelteComponentTyped } from "svelte";
export declare let sizes: readonly ["small", "normal", "large"];
export type Size = (typeof sizes)[number];
export declare let modes: readonly ["filled", "outline"];
export type Mode = (typeof modes)[number];
export declare let cssProperties: {
    [key: `--leo-control-${string}`]: {
        description: string;
        control?: string;
        options?: string[];
        type?: string;
    };
};
declare const __propDef: {
    props: {
        disabled?: boolean;
        size?: Size;
        required?: boolean;
        mode?: Mode;
        showFocusOutline?: boolean;
        error?: boolean;
        renderLabel: boolean;
        controlElement?: HTMLDivElement;
    };
    events: {
        [evt: string]: CustomEvent<any>;
    };
    slots: {
        label: {};
        'left-icon': {};
        default: {};
        'right-icon': {};
        after: {};
    };
};
export type FormItemProps = typeof __propDef.props;
export type FormItemEvents = typeof __propDef.events;
export type FormItemSlots = typeof __propDef.slots;
export default class FormItem extends SvelteComponentTyped<FormItemProps, FormItemEvents, FormItemSlots> {
}
export {};
