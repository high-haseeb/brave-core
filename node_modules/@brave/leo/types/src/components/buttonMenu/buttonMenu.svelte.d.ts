import { SvelteComponentTyped } from "svelte";
import type { HTMLAttributes } from 'svelte/elements';
declare global {
    namespace JSX {
        interface IntrinsicElements {
            'leo-menu-item': HTMLAttributes<HTMLElement> & {
                key?: string | number | null;
                children?: any;
                onClick?: EventListener;
            };
        }
    }
}
import { type CloseEvent } from '../menu/menu.svelte';
import type { Strategy } from '@floating-ui/dom';
declare const __propDef: {
    props: {
        isOpen?: boolean | undefined;
        onClose?: CloseEvent;
        onChange?: (e: {
            isOpen: boolean;
        }) => void;
        positionStrategy?: Strategy;
    };
    events: {
        [evt: string]: CustomEvent<any>;
    };
    slots: {
        'anchor-content': {};
        default: {};
    };
};
export type ButtonMenuProps = typeof __propDef.props;
export type ButtonMenuEvents = typeof __propDef.events;
export type ButtonMenuSlots = typeof __propDef.slots;
export default class ButtonMenu extends SvelteComponentTyped<ButtonMenuProps, ButtonMenuEvents, ButtonMenuSlots> {
}
export {};
