const plugin = require("tailwindcss/plugin");

module.exports = plugin(function ({ addComponents, theme }) {
addComponents({
  ".leo-control": {
    "--foreground": "var(--leo-color-text-primary)",
    "--base": "var(--leo-color-container-background)",
    "--primary": "var(--leo-control-color, var(--base))",
    "--radius": "var(--leo-control-radius, var(--leo-radius-m))",
    "--padding": "var(--leo-control-padding, 10px 7px)",
    "--font": "var(--leo-control-font, var(--leo-font-default-regular))",
    "--leo-icon-size": "var(--leo-control-icon-size, 20px)",
    "--leo-icon-color": "var(\n    --leo-control-icon-color,\n    var(--leo-color-icon-default)\n  )",
    "--gap": "var(--leo-control-label-gap, var(--leo-spacing-s))",
    "--direction": "var(--leo-control-label-direction, column)",
    "--color": "var(--leo-control-text-color, var(--leo-color-text-primary))",
    "--color-hover": "var(--color)",
    "--color-focus": "var(--color)",
    "--background": "var(--primary)",
    "--background-hover": "var(--background)",
    "--background-focus": "var(--background)",
    "--shadow": " ",
    "--shadow-hover": "var(--shadow)",
    "--shadow-focus": "var(\n    --leo-control-focus-effect,\n    var(--leo-effect-focus-state)\n  )",
    "--border-color": "transparent",
    "--border-color-hover": "transparent",
    "--border-color-focus": "transparent",
    "--border-color-error": "var(--leo-color-systemfeedback-error-icon)",
    "--border-color-error-hover": "var(--leo-color-red-50)",
    "display": "flex",
    "flexDirection": "var(--direction)",
    "justifyContent": "stretch",
    "font": "var(--font)",
    "gap": "var(--gap)"
  },
  ".leo-control:not([aria-disabled=true]) .container:hover": {
    "color": "var(--color-hover)",
    "background": "var(--background-hover)",
    "boxShadow": "var(--shadow-hover)",
    "borderColor": "var(--border-color-hover)"
  },
  ".leo-control:not([aria-disabled=true]) .container:has(*:focus-visible):not(:has(.extra-content:focus-within)),.leo-control:not([aria-disabled=true]).isFocused .container:not(:has(.extra-content:focus-within))": {
    "color": "var(--color-focus)",
    "background": "var(--background-focus)",
    "boxShadow": "var(--shadow-focus)",
    "borderColor": "var(--border-color-focus)"
  },
  ".leo-control:not([aria-disabled=true]).error .container:hover:not(:has(*:focus-visible))": {
    "borderColor": "var(--border-color-error-hover)"
  },
  ".leo-control.isSmall": {
    "--leo-icon-size": "16px",
    "--font": "var(--leo-control-font, var(--leo-font-small-regular))",
    "--padding": "var(--leo-control-padding, 7px)",
    "--gap": "var(--leo-control-label-gap, 2px)"
  },
  ".leo-control.isLarge": {
    "--leo-icon-size": "22px",
    "--padding": "var(--leo-control-padding, 14px 11px)",
    "--gap": "var(--leo-control-label-gap, 12px)"
  },
  ".leo-control.isFilled": {
    "--background": "var(--leo-color-container-highlight)",
    "--shadow-hover": "var(--leo-effect-elevation-01)",
    "--border-color": "transparent",
    "--border-color-hover": "var(--leo-color-divider-subtle)"
  },
  "@supports (color: color-mix(in srgb, transparent, transparent))": [
    {
      ".leo-control.isFilled": {
        "--background": "color-mix(in srgb, var(--primary), var(--foreground) 10%)",
        "--border-color-hover": "color-mix(\n      in srgb,\n      var(--primary),\n      var(--foreground) 20%\n    )"
      }
    },
    {
      ".leo-control.isOutline": {
        "--border-color": "color-mix(in srgb, var(--primary), var(--foreground) 25%)",
        "--border-color-hover": "color-mix(\n      in srgb,\n      var(--primary),\n      var(--foreground) 40%\n    )"
      }
    }
  ],
  ".leo-control.isOutline": {
    "--background": "var(--primary)",
    "--border-color": "var(--leo-color-divider-strong)",
    "--border-color-hover": "var(--leo-color-neutral-30)",
    "--shadow-hover": "var(--leo-effect-elevation-01)"
  },
  ".leo-control.error": {
    "--border-color": "var(--border-color-error)"
  },
  ".leo-control .control": {
    "flex": 1
  },
  ".leo-control .container": {
    "display": "flex",
    "flexDirection": "row",
    "justifyContent": "space-between",
    "alignItems": "center",
    "gap": "var(--leo-spacing-m)",
    "borderRadius": "var(--radius)",
    "padding": "var(--padding)",
    "color": "var(--color)",
    "background": "var(--background)",
    "boxShadow": "var(--shadow)",
    "border": "1px solid var(--border-color)",
    "transition": "box-shadow 0.2s ease-in-out, border-color 0.2s ease-in-out",
    "cursor": "pointer"
  },
  ".leo-control[aria-disabled=true] .container": {
    "--background": "var(--leo-color-container-disabled)",
    "color": "var(--leo-color-text-disabled)",
    "cursor": "not-allowed"
  },
  ".leo-control .label-row": {
    "display": "flex",
    "flexDirection": "row",
    "gap": "var(--leo-spacing-s)"
  },
  ".leo-control .required-indicator": {
    "color": "var(--leo-color-systemfeedback-error-icon)"
  }
});
});