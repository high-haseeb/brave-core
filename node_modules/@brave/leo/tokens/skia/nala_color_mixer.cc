// Copyright (c) 2024 The Brave Authors. All rights reserved.
// This Source Code Form is subject to the terms of the Mozilla Public
// License, v. 2.0. If a copy of the MPL was not distributed with this file,
// You can obtain one at https://mozilla.org/MPL/2.0/.

#include "nala_color_mixer.h"

#include "nala_color_id.h"
#include "third_party/skia/include/core/SkColor.h"
#include "ui/color/color_mixer.h"
#include "ui/color/color_provider.h"
#include "ui/color/color_provider_key.h"
#include "ui/color/color_recipe.h"
#include "ui/color/color_transform.h"

namespace nala {

void AddNalaColorMixer(ui::ColorProvider* provider,
                       const ui::ColorProviderKey& key) {
  ui::ColorMixer& mixer = provider->AddMixer();
  const bool is_dark = key.color_mode == ui::ColorProviderKey::ColorMode::kDark;

  // Dynamic primitives, controlled by the Chromium palette
  mixer[kColorPrimitiveNeutral0] = {provider->GetColor(ui::kColorRefNeutral0)};
  mixer[kColorPrimitiveNeutral10] = {provider->GetColor(ui::kColorRefNeutral10)};
  mixer[kColorPrimitiveNeutral100] = {provider->GetColor(ui::kColorRefNeutral100)};
  mixer[kColorPrimitiveNeutral15] = {provider->GetColor(ui::kColorRefNeutral15)};
  mixer[kColorPrimitiveNeutral20] = {provider->GetColor(ui::kColorRefNeutral20)};
  mixer[kColorPrimitiveNeutral25] = {provider->GetColor(ui::kColorRefNeutral25)};
  mixer[kColorPrimitiveNeutral30] = {provider->GetColor(ui::kColorRefNeutral30)};
  mixer[kColorPrimitiveNeutral35] = {provider->GetColor(ui::kColorRefNeutral35)};
  mixer[kColorPrimitiveNeutral40] = {provider->GetColor(ui::kColorRefNeutral40)};
  mixer[kColorPrimitiveNeutral5] = {provider->GetColor(ui::kColorRefNeutral5)};
  mixer[kColorPrimitiveNeutral50] = {provider->GetColor(ui::kColorRefNeutral50)};
  mixer[kColorPrimitiveNeutral60] = {provider->GetColor(ui::kColorRefNeutral60)};
  mixer[kColorPrimitiveNeutral70] = {provider->GetColor(ui::kColorRefNeutral70)};
  mixer[kColorPrimitiveNeutral80] = {provider->GetColor(ui::kColorRefNeutral80)};
  mixer[kColorPrimitiveNeutral90] = {provider->GetColor(ui::kColorRefNeutral90)};
  mixer[kColorPrimitiveNeutral95] = {provider->GetColor(ui::kColorRefNeutral95)};
  mixer[kColorPrimitiveNeutral98] = {provider->GetColor(ui::kColorRefNeutral98)};
  mixer[kColorPrimitiveNeutral99] = {provider->GetColor(ui::kColorRefNeutral99)};
  mixer[kColorPrimitiveNeutralVariant0] = {provider->GetColor(ui::kColorRefNeutralVariant0)};
  mixer[kColorPrimitiveNeutralVariant10] = {provider->GetColor(ui::kColorRefNeutralVariant10)};
  mixer[kColorPrimitiveNeutralVariant100] = {provider->GetColor(ui::kColorRefNeutralVariant100)};
  mixer[kColorPrimitiveNeutralVariant15] = {provider->GetColor(ui::kColorRefNeutralVariant15)};
  mixer[kColorPrimitiveNeutralVariant20] = {provider->GetColor(ui::kColorRefNeutralVariant20)};
  mixer[kColorPrimitiveNeutralVariant25] = {provider->GetColor(ui::kColorRefNeutralVariant25)};
  mixer[kColorPrimitiveNeutralVariant30] = {provider->GetColor(ui::kColorRefNeutralVariant30)};
  mixer[kColorPrimitiveNeutralVariant35] = {provider->GetColor(ui::kColorRefNeutralVariant35)};
  mixer[kColorPrimitiveNeutralVariant40] = {provider->GetColor(ui::kColorRefNeutralVariant40)};
  mixer[kColorPrimitiveNeutralVariant5] = {provider->GetColor(ui::kColorRefNeutralVariant5)};
  mixer[kColorPrimitiveNeutralVariant50] = {provider->GetColor(ui::kColorRefNeutralVariant50)};
  mixer[kColorPrimitiveNeutralVariant60] = {provider->GetColor(ui::kColorRefNeutralVariant60)};
  mixer[kColorPrimitiveNeutralVariant70] = {provider->GetColor(ui::kColorRefNeutralVariant70)};
  mixer[kColorPrimitiveNeutralVariant80] = {provider->GetColor(ui::kColorRefNeutralVariant80)};
  mixer[kColorPrimitiveNeutralVariant90] = {provider->GetColor(ui::kColorRefNeutralVariant90)};
  mixer[kColorPrimitiveNeutralVariant95] = {provider->GetColor(ui::kColorRefNeutralVariant95)};
  mixer[kColorPrimitiveNeutralVariant98] = {provider->GetColor(ui::kColorRefNeutralVariant98)};
  mixer[kColorPrimitiveNeutralVariant99] = {provider->GetColor(ui::kColorRefNeutralVariant99)};
  mixer[kColorPrimitivePrimary0] = {provider->GetColor(ui::kColorRefPrimary0)};
  mixer[kColorPrimitivePrimary10] = {provider->GetColor(ui::kColorRefPrimary10)};
  mixer[kColorPrimitivePrimary100] = {provider->GetColor(ui::kColorRefPrimary100)};
  mixer[kColorPrimitivePrimary15] = {provider->GetColor(ui::kColorRefPrimary15)};
  mixer[kColorPrimitivePrimary20] = {provider->GetColor(ui::kColorRefPrimary20)};
  mixer[kColorPrimitivePrimary25] = {provider->GetColor(ui::kColorRefPrimary25)};
  mixer[kColorPrimitivePrimary30] = {provider->GetColor(ui::kColorRefPrimary30)};
  mixer[kColorPrimitivePrimary35] = {provider->GetColor(ui::kColorRefPrimary35)};
  mixer[kColorPrimitivePrimary40] = {provider->GetColor(ui::kColorRefPrimary40)};
  mixer[kColorPrimitivePrimary5] = {provider->GetColor(ui::kColorRefPrimary5)};
  mixer[kColorPrimitivePrimary50] = {provider->GetColor(ui::kColorRefPrimary50)};
  mixer[kColorPrimitivePrimary60] = {provider->GetColor(ui::kColorRefPrimary60)};
  mixer[kColorPrimitivePrimary70] = {provider->GetColor(ui::kColorRefPrimary70)};
  mixer[kColorPrimitivePrimary80] = {provider->GetColor(ui::kColorRefPrimary80)};
  mixer[kColorPrimitivePrimary90] = {provider->GetColor(ui::kColorRefPrimary90)};
  mixer[kColorPrimitivePrimary95] = {provider->GetColor(ui::kColorRefPrimary95)};
  mixer[kColorPrimitivePrimary98] = {provider->GetColor(ui::kColorRefPrimary98)};
  mixer[kColorPrimitivePrimary99] = {provider->GetColor(ui::kColorRefPrimary99)};
  mixer[kColorPrimitiveSecondary0] = {provider->GetColor(ui::kColorRefSecondary0)};
  mixer[kColorPrimitiveSecondary10] = {provider->GetColor(ui::kColorRefSecondary10)};
  mixer[kColorPrimitiveSecondary100] = {provider->GetColor(ui::kColorRefSecondary100)};
  mixer[kColorPrimitiveSecondary15] = {provider->GetColor(ui::kColorRefSecondary15)};
  mixer[kColorPrimitiveSecondary20] = {provider->GetColor(ui::kColorRefSecondary20)};
  mixer[kColorPrimitiveSecondary25] = {provider->GetColor(ui::kColorRefSecondary25)};
  mixer[kColorPrimitiveSecondary30] = {provider->GetColor(ui::kColorRefSecondary30)};
  mixer[kColorPrimitiveSecondary35] = {provider->GetColor(ui::kColorRefSecondary35)};
  mixer[kColorPrimitiveSecondary40] = {provider->GetColor(ui::kColorRefSecondary40)};
  mixer[kColorPrimitiveSecondary5] = {provider->GetColor(ui::kColorRefSecondary5)};
  mixer[kColorPrimitiveSecondary50] = {provider->GetColor(ui::kColorRefSecondary50)};
  mixer[kColorPrimitiveSecondary60] = {provider->GetColor(ui::kColorRefSecondary60)};
  mixer[kColorPrimitiveSecondary70] = {provider->GetColor(ui::kColorRefSecondary70)};
  mixer[kColorPrimitiveSecondary80] = {provider->GetColor(ui::kColorRefSecondary80)};
  mixer[kColorPrimitiveSecondary90] = {provider->GetColor(ui::kColorRefSecondary90)};
  mixer[kColorPrimitiveSecondary95] = {provider->GetColor(ui::kColorRefSecondary95)};
  mixer[kColorPrimitiveSecondary98] = {provider->GetColor(ui::kColorRefSecondary98)};
  mixer[kColorPrimitiveSecondary99] = {provider->GetColor(ui::kColorRefSecondary99)};
  mixer[kColorPrimitiveTertiary0] = {provider->GetColor(ui::kColorRefTertiary0)};
  mixer[kColorPrimitiveTertiary10] = {provider->GetColor(ui::kColorRefTertiary10)};
  mixer[kColorPrimitiveTertiary100] = {provider->GetColor(ui::kColorRefTertiary100)};
  mixer[kColorPrimitiveTertiary15] = {provider->GetColor(ui::kColorRefTertiary15)};
  mixer[kColorPrimitiveTertiary20] = {provider->GetColor(ui::kColorRefTertiary20)};
  mixer[kColorPrimitiveTertiary25] = {provider->GetColor(ui::kColorRefTertiary25)};
  mixer[kColorPrimitiveTertiary30] = {provider->GetColor(ui::kColorRefTertiary30)};
  mixer[kColorPrimitiveTertiary35] = {provider->GetColor(ui::kColorRefTertiary35)};
  mixer[kColorPrimitiveTertiary40] = {provider->GetColor(ui::kColorRefTertiary40)};
  mixer[kColorPrimitiveTertiary5] = {provider->GetColor(ui::kColorRefTertiary5)};
  mixer[kColorPrimitiveTertiary50] = {provider->GetColor(ui::kColorRefTertiary50)};
  mixer[kColorPrimitiveTertiary60] = {provider->GetColor(ui::kColorRefTertiary60)};
  mixer[kColorPrimitiveTertiary70] = {provider->GetColor(ui::kColorRefTertiary70)};
  mixer[kColorPrimitiveTertiary80] = {provider->GetColor(ui::kColorRefTertiary80)};
  mixer[kColorPrimitiveTertiary90] = {provider->GetColor(ui::kColorRefTertiary90)};
  mixer[kColorPrimitiveTertiary95] = {provider->GetColor(ui::kColorRefTertiary95)};
  mixer[kColorPrimitiveTertiary98] = {provider->GetColor(ui::kColorRefTertiary98)};
  mixer[kColorPrimitiveTertiary99] = {provider->GetColor(ui::kColorRefTertiary99)};

  // Static primitives (hard coded)
  mixer[kColorPrimitiveBlue0] = {SkColorSetRGB(0x00, 0x00, 0x00)};
  mixer[kColorPrimitiveBlue10] = {SkColorSetRGB(0x00, 0x1C, 0x37)};
  mixer[kColorPrimitiveBlue100] = {SkColorSetRGB(0xFF, 0xFF, 0xFF)};
  mixer[kColorPrimitiveBlue15] = {SkColorSetRGB(0x00, 0x27, 0x48)};
  mixer[kColorPrimitiveBlue20] = {SkColorSetRGB(0x00, 0x32, 0x5A)};
  mixer[kColorPrimitiveBlue25] = {SkColorSetRGB(0x00, 0x3D, 0x6C)};
  mixer[kColorPrimitiveBlue30] = {SkColorSetRGB(0x00, 0x49, 0x7F)};
  mixer[kColorPrimitiveBlue35] = {SkColorSetRGB(0x00, 0x54, 0x92)};
  mixer[kColorPrimitiveBlue40] = {SkColorSetRGB(0x00, 0x61, 0xA6)};
  mixer[kColorPrimitiveBlue5] = {SkColorSetRGB(0x00, 0x12, 0x25)};
  mixer[kColorPrimitiveBlue50] = {SkColorSetRGB(0x00, 0x7A, 0xD0)};
  mixer[kColorPrimitiveBlue60] = {SkColorSetRGB(0x27, 0x94, 0xF3)};
  mixer[kColorPrimitiveBlue70] = {SkColorSetRGB(0x67, 0xAF, 0xFF)};
  mixer[kColorPrimitiveBlue80] = {SkColorSetRGB(0xA0, 0xC9, 0xFF)};
  mixer[kColorPrimitiveBlue90] = {SkColorSetRGB(0xD2, 0xE4, 0xFF)};
  mixer[kColorPrimitiveBlue95] = {SkColorSetRGB(0xEA, 0xF1, 0xFF)};
  mixer[kColorPrimitiveBlue98] = {SkColorSetRGB(0xF8, 0xF9, 0xFF)};
  mixer[kColorPrimitiveBlue99] = {SkColorSetRGB(0xFD, 0xFC, 0xFF)};
  mixer[kColorPrimitiveBlurple0] = {SkColorSetRGB(0x00, 0x00, 0x00)};
  mixer[kColorPrimitiveBlurple10] = {SkColorSetRGB(0x0F, 0x06, 0x63)};
  mixer[kColorPrimitiveBlurple100] = {SkColorSetRGB(0xFF, 0xFF, 0xFF)};
  mixer[kColorPrimitiveBlurple15] = {SkColorSetRGB(0x19, 0x0B, 0x7D)};
  mixer[kColorPrimitiveBlurple20] = {SkColorSetRGB(0x25, 0x14, 0x91)};
  mixer[kColorPrimitiveBlurple25] = {SkColorSetRGB(0x2E, 0x19, 0xB0)};
  mixer[kColorPrimitiveBlurple30] = {SkColorSetRGB(0x37, 0x2C, 0xBF)};
  mixer[kColorPrimitiveBlurple35] = {SkColorSetRGB(0x3E, 0x37, 0xD4)};
  mixer[kColorPrimitiveBlurple40] = {SkColorSetRGB(0x4A, 0x46, 0xE0)};
  mixer[kColorPrimitiveBlurple5] = {SkColorSetRGB(0x05, 0x00, 0x4C)};
  mixer[kColorPrimitiveBlurple50] = {SkColorSetRGB(0x62, 0x61, 0xFF)};
  mixer[kColorPrimitiveBlurple60] = {SkColorSetRGB(0x82, 0x83, 0xFF)};
  mixer[kColorPrimitiveBlurple70] = {SkColorSetRGB(0xA1, 0xA2, 0xFF)};
  mixer[kColorPrimitiveBlurple80] = {SkColorSetRGB(0xC1, 0xC4, 0xFF)};
  mixer[kColorPrimitiveBlurple90] = {SkColorSetRGB(0xDF, 0xE1, 0xFF)};
  mixer[kColorPrimitiveBlurple95] = {SkColorSetRGB(0xEF, 0xEF, 0xFF)};
  mixer[kColorPrimitiveBlurple98] = {SkColorSetRGB(0xF8, 0xF8, 0xFF)};
  mixer[kColorPrimitiveBlurple99] = {SkColorSetRGB(0xFB, 0xFB, 0xFF)};
  mixer[kColorPrimitiveBrandsBat1] = {SkColorSetRGB(0xFF, 0x47, 0x24)};
  mixer[kColorPrimitiveBrandsBat2] = {SkColorSetRGB(0x9E, 0x1F, 0x63)};
  mixer[kColorPrimitiveBrandsBat3] = {SkColorSetRGB(0x66, 0x2D, 0x91)};
  mixer[kColorPrimitiveBrandsPrimaryFixed] = {SkColorSetRGB(0x46, 0x41, 0xEE)};
  mixer[kColorPrimitiveBrandsRorange1] = {SkColorSetRGB(0xFF, 0x56, 0x01)};
  mixer[kColorPrimitiveBrandsRorange2] = {SkColorSetRGB(0xFF, 0x40, 0x00)};
  mixer[kColorPrimitiveBrandsRorange3] = {SkColorSetRGB(0xFF, 0x1F, 0x01)};
  mixer[kColorPrimitiveGreen0] = {SkColorSetRGB(0x00, 0x00, 0x00)};
  mixer[kColorPrimitiveGreen10] = {SkColorSetRGB(0x00, 0x22, 0x02)};
  mixer[kColorPrimitiveGreen100] = {SkColorSetRGB(0xFF, 0xFF, 0xFF)};
  mixer[kColorPrimitiveGreen15] = {SkColorSetRGB(0x00, 0x2D, 0x03)};
  mixer[kColorPrimitiveGreen20] = {SkColorSetRGB(0x00, 0x3A, 0x05)};
  mixer[kColorPrimitiveGreen25] = {SkColorSetRGB(0x00, 0x46, 0x07)};
  mixer[kColorPrimitiveGreen30] = {SkColorSetRGB(0x00, 0x53, 0x0A)};
  mixer[kColorPrimitiveGreen35] = {SkColorSetRGB(0x00, 0x61, 0x0E)};
  mixer[kColorPrimitiveGreen40] = {SkColorSetRGB(0x00, 0x6E, 0x11)};
  mixer[kColorPrimitiveGreen5] = {SkColorSetRGB(0x00, 0x15, 0x01)};
  mixer[kColorPrimitiveGreen50] = {SkColorSetRGB(0x00, 0x8B, 0x18)};
  mixer[kColorPrimitiveGreen60] = {SkColorSetRGB(0x02, 0xA8, 0x20)};
  mixer[kColorPrimitiveGreen70] = {SkColorSetRGB(0x38, 0xC4, 0x3B)};
  mixer[kColorPrimitiveGreen80] = {SkColorSetRGB(0x58, 0xE1, 0x55)};
  mixer[kColorPrimitiveGreen90] = {SkColorSetRGB(0xB9, 0xF1, 0xAC)};
  mixer[kColorPrimitiveGreen95] = {SkColorSetRGB(0xCB, 0xFB, 0xC0)};
  mixer[kColorPrimitiveGreen98] = {SkColorSetRGB(0xEC, 0xFF, 0xE3)};
  mixer[kColorPrimitiveGreen99] = {SkColorSetRGB(0xF7, 0xFF, 0xEF)};
  mixer[kColorPrimitiveOrange0] = {SkColorSetRGB(0x00, 0x00, 0x00)};
  mixer[kColorPrimitiveOrange10] = {SkColorSetRGB(0x38, 0x0C, 0x00)};
  mixer[kColorPrimitiveOrange100] = {SkColorSetRGB(0xFF, 0xFF, 0xFF)};
  mixer[kColorPrimitiveOrange15] = {SkColorSetRGB(0x4A, 0x13, 0x00)};
  mixer[kColorPrimitiveOrange20] = {SkColorSetRGB(0x5C, 0x1A, 0x00)};
  mixer[kColorPrimitiveOrange25] = {SkColorSetRGB(0x6F, 0x20, 0x00)};
  mixer[kColorPrimitiveOrange30] = {SkColorSetRGB(0x82, 0x28, 0x00)};
  mixer[kColorPrimitiveOrange35] = {SkColorSetRGB(0x96, 0x2F, 0x00)};
  mixer[kColorPrimitiveOrange40] = {SkColorSetRGB(0xAA, 0x37, 0x00)};
  mixer[kColorPrimitiveOrange5] = {SkColorSetRGB(0x26, 0x06, 0x00)};
  mixer[kColorPrimitiveOrange50] = {SkColorSetRGB(0xD4, 0x46, 0x00)};
  mixer[kColorPrimitiveOrange60] = {SkColorSetRGB(0xFF, 0x57, 0x05)};
  mixer[kColorPrimitiveOrange70] = {SkColorSetRGB(0xFF, 0x8B, 0x62)};
  mixer[kColorPrimitiveOrange80] = {SkColorSetRGB(0xFF, 0xB5, 0x9C)};
  mixer[kColorPrimitiveOrange90] = {SkColorSetRGB(0xFF, 0xDB, 0xCF)};
  mixer[kColorPrimitiveOrange95] = {SkColorSetRGB(0xFF, 0xED, 0xE8)};
  mixer[kColorPrimitiveOrange98] = {SkColorSetRGB(0xFF, 0xF8, 0xF6)};
  mixer[kColorPrimitiveOrange99] = {SkColorSetRGB(0xFF, 0xFB, 0xFF)};
  mixer[kColorPrimitivePink0] = {SkColorSetRGB(0x00, 0x00, 0x00)};
  mixer[kColorPrimitivePink10] = {SkColorSetRGB(0x3E, 0x00, 0x21)};
  mixer[kColorPrimitivePink100] = {SkColorSetRGB(0xFF, 0xFF, 0xFF)};
  mixer[kColorPrimitivePink15] = {SkColorSetRGB(0x50, 0x00, 0x2D)};
  mixer[kColorPrimitivePink20] = {SkColorSetRGB(0x64, 0x00, 0x39)};
  mixer[kColorPrimitivePink25] = {SkColorSetRGB(0x78, 0x00, 0x45)};
  mixer[kColorPrimitivePink30] = {SkColorSetRGB(0x8D, 0x00, 0x52)};
  mixer[kColorPrimitivePink35] = {SkColorSetRGB(0xA2, 0x00, 0x5F)};
  mixer[kColorPrimitivePink40] = {SkColorSetRGB(0xB3, 0x18, 0x6C)};
  mixer[kColorPrimitivePink5] = {SkColorSetRGB(0x2A, 0x00, 0x15)};
  mixer[kColorPrimitivePink50] = {SkColorSetRGB(0xD4, 0x37, 0x85)};
  mixer[kColorPrimitivePink60] = {SkColorSetRGB(0xF5, 0x53, 0xA0)};
  mixer[kColorPrimitivePink70] = {SkColorSetRGB(0xFF, 0x82, 0xB6)};
  mixer[kColorPrimitivePink80] = {SkColorSetRGB(0xE6, 0xBB, 0xCF)};
  mixer[kColorPrimitivePink90] = {SkColorSetRGB(0xFF, 0xD9, 0xE4)};
  mixer[kColorPrimitivePink95] = {SkColorSetRGB(0xFF, 0xEC, 0xF0)};
  mixer[kColorPrimitivePink98] = {SkColorSetRGB(0xFF, 0xF8, 0xF8)};
  mixer[kColorPrimitivePink99] = {SkColorSetRGB(0xFF, 0xFB, 0xFF)};
  mixer[kColorPrimitivePrivateWindow0] = {SkColorSetRGB(0x00, 0x00, 0x00)};
  mixer[kColorPrimitivePrivateWindow10] = {SkColorSetRGB(0x22, 0x00, 0x5D)};
  mixer[kColorPrimitivePrivateWindow100] = {SkColorSetRGB(0xFF, 0xFF, 0xFF)};
  mixer[kColorPrimitivePrivateWindow15] = {SkColorSetRGB(0x2E, 0x00, 0x77)};
  mixer[kColorPrimitivePrivateWindow20] = {SkColorSetRGB(0x3A, 0x00, 0x92)};
  mixer[kColorPrimitivePrivateWindow25] = {SkColorSetRGB(0x46, 0x19, 0x9D)};
  mixer[kColorPrimitivePrivateWindow30] = {SkColorSetRGB(0x51, 0x2A, 0xA9)};
  mixer[kColorPrimitivePrivateWindow35] = {SkColorSetRGB(0x5D, 0x38, 0xB5)};
  mixer[kColorPrimitivePrivateWindow40] = {SkColorSetRGB(0x6A, 0x45, 0xC2)};
  mixer[kColorPrimitivePrivateWindow5] = {SkColorSetRGB(0x16, 0x00, 0x41)};
  mixer[kColorPrimitivePrivateWindow50] = {SkColorSetRGB(0x83, 0x60, 0xDD)};
  mixer[kColorPrimitivePrivateWindow60] = {SkColorSetRGB(0x9E, 0x7B, 0xF9)};
  mixer[kColorPrimitivePrivateWindow70] = {SkColorSetRGB(0xB6, 0x9B, 0xFF)};
  mixer[kColorPrimitivePrivateWindow80] = {SkColorSetRGB(0xCF, 0xBC, 0xFF)};
  mixer[kColorPrimitivePrivateWindow90] = {SkColorSetRGB(0xE9, 0xDD, 0xFF)};
  mixer[kColorPrimitivePrivateWindow95] = {SkColorSetRGB(0xF6, 0xEE, 0xFF)};
  mixer[kColorPrimitivePrivateWindow98] = {SkColorSetRGB(0xFD, 0xF7, 0xFF)};
  mixer[kColorPrimitivePrivateWindow99] = {SkColorSetRGB(0xFF, 0xFB, 0xFF)};
  mixer[kColorPrimitivePurple0] = {SkColorSetRGB(0x00, 0x00, 0x00)};
  mixer[kColorPrimitivePurple10] = {SkColorSetRGB(0x16, 0x00, 0x66)};
  mixer[kColorPrimitivePurple100] = {SkColorSetRGB(0xFF, 0xFF, 0xFF)};
  mixer[kColorPrimitivePurple15] = {SkColorSetRGB(0x1E, 0x00, 0x83)};
  mixer[kColorPrimitivePurple20] = {SkColorSetRGB(0x29, 0x13, 0x91)};
  mixer[kColorPrimitivePurple25] = {SkColorSetRGB(0x35, 0x24, 0x9C)};
  mixer[kColorPrimitivePurple30] = {SkColorSetRGB(0x41, 0x32, 0xA7)};
  mixer[kColorPrimitivePurple35] = {SkColorSetRGB(0x4D, 0x40, 0xB4)};
  mixer[kColorPrimitivePurple40] = {SkColorSetRGB(0x59, 0x4D, 0xC1)};
  mixer[kColorPrimitivePurple5] = {SkColorSetRGB(0x0C, 0x00, 0x48)};
  mixer[kColorPrimitivePurple50] = {SkColorSetRGB(0x72, 0x67, 0xDC)};
  mixer[kColorPrimitivePurple60] = {SkColorSetRGB(0x8C, 0x81, 0xF8)};
  mixer[kColorPrimitivePurple70] = {SkColorSetRGB(0xA9, 0xA0, 0xFF)};
  mixer[kColorPrimitivePurple80] = {SkColorSetRGB(0xC6, 0xBF, 0xFF)};
  mixer[kColorPrimitivePurple90] = {SkColorSetRGB(0xE4, 0xDF, 0xFF)};
  mixer[kColorPrimitivePurple95] = {SkColorSetRGB(0xF3, 0xEE, 0xFF)};
  mixer[kColorPrimitivePurple98] = {SkColorSetRGB(0xFC, 0xF8, 0xFF)};
  mixer[kColorPrimitivePurple99] = {SkColorSetRGB(0xFF, 0xFB, 0xFF)};
  mixer[kColorPrimitiveRed0] = {SkColorSetRGB(0x00, 0x00, 0x00)};
  mixer[kColorPrimitiveRed10] = {SkColorSetRGB(0x41, 0x00, 0x08)};
  mixer[kColorPrimitiveRed100] = {SkColorSetRGB(0xFF, 0xFF, 0xFF)};
  mixer[kColorPrimitiveRed15] = {SkColorSetRGB(0x54, 0x00, 0x0E)};
  mixer[kColorPrimitiveRed20] = {SkColorSetRGB(0x68, 0x00, 0x14)};
  mixer[kColorPrimitiveRed25] = {SkColorSetRGB(0x7D, 0x00, 0x1A)};
  mixer[kColorPrimitiveRed30] = {SkColorSetRGB(0x92, 0x00, 0x20)};
  mixer[kColorPrimitiveRed35] = {SkColorSetRGB(0xA8, 0x00, 0x26)};
  mixer[kColorPrimitiveRed40] = {SkColorSetRGB(0xBF, 0x00, 0x2C)};
  mixer[kColorPrimitiveRed5] = {SkColorSetRGB(0x2C, 0x00, 0x04)};
  mixer[kColorPrimitiveRed50] = {SkColorSetRGB(0xE6, 0x24, 0x40)};
  mixer[kColorPrimitiveRed60] = {SkColorSetRGB(0xFF, 0x52, 0x5E)};
  mixer[kColorPrimitiveRed70] = {SkColorSetRGB(0xFF, 0x88, 0x8A)};
  mixer[kColorPrimitiveRed80] = {SkColorSetRGB(0xFF, 0xB3, 0xB2)};
  mixer[kColorPrimitiveRed90] = {SkColorSetRGB(0xFF, 0xDA, 0xD9)};
  mixer[kColorPrimitiveRed95] = {SkColorSetRGB(0xFF, 0xED, 0xEC)};
  mixer[kColorPrimitiveRed98] = {SkColorSetRGB(0xFF, 0xF8, 0xF7)};
  mixer[kColorPrimitiveRed99] = {SkColorSetRGB(0xFF, 0xFB, 0xFF)};
  mixer[kColorPrimitiveTeal0] = {SkColorSetRGB(0x00, 0x00, 0x00)};
  mixer[kColorPrimitiveTeal10] = {SkColorSetRGB(0x00, 0x1F, 0x24)};
  mixer[kColorPrimitiveTeal100] = {SkColorSetRGB(0xFF, 0xFF, 0xFF)};
  mixer[kColorPrimitiveTeal15] = {SkColorSetRGB(0x00, 0x2A, 0x30)};
  mixer[kColorPrimitiveTeal20] = {SkColorSetRGB(0x00, 0x36, 0x3D)};
  mixer[kColorPrimitiveTeal25] = {SkColorSetRGB(0x00, 0x42, 0x4B)};
  mixer[kColorPrimitiveTeal30] = {SkColorSetRGB(0x00, 0x4F, 0x58)};
  mixer[kColorPrimitiveTeal35] = {SkColorSetRGB(0x00, 0x5B, 0x66)};
  mixer[kColorPrimitiveTeal40] = {SkColorSetRGB(0x00, 0x68, 0x75)};
  mixer[kColorPrimitiveTeal5] = {SkColorSetRGB(0x00, 0x14, 0x17)};
  mixer[kColorPrimitiveTeal50] = {SkColorSetRGB(0x00, 0x83, 0x93)};
  mixer[kColorPrimitiveTeal60] = {SkColorSetRGB(0x00, 0x9F, 0xB2)};
  mixer[kColorPrimitiveTeal70] = {SkColorSetRGB(0x28, 0xBC, 0xD0)};
  mixer[kColorPrimitiveTeal80] = {SkColorSetRGB(0x52, 0xD7, 0xEC)};
  mixer[kColorPrimitiveTeal90] = {SkColorSetRGB(0x9B, 0xF0, 0xFF)};
  mixer[kColorPrimitiveTeal95] = {SkColorSetRGB(0xD1, 0xF7, 0xFF)};
  mixer[kColorPrimitiveTeal98] = {SkColorSetRGB(0xED, 0xFC, 0xFF)};
  mixer[kColorPrimitiveTeal99] = {SkColorSetRGB(0xF6, 0xFD, 0xFF)};
  mixer[kColorPrimitiveTorWindow0] = {SkColorSetRGB(0x00, 0x00, 0x00)};
  mixer[kColorPrimitiveTorWindow10] = {SkColorSetRGB(0x31, 0x00, 0x49)};
  mixer[kColorPrimitiveTorWindow100] = {SkColorSetRGB(0xFF, 0xFF, 0xFF)};
  mixer[kColorPrimitiveTorWindow15] = {SkColorSetRGB(0x40, 0x00, 0x5E)};
  mixer[kColorPrimitiveTorWindow20] = {SkColorSetRGB(0x50, 0x00, 0x74)};
  mixer[kColorPrimitiveTorWindow25] = {SkColorSetRGB(0x61, 0x00, 0x8B)};
  mixer[kColorPrimitiveTorWindow30] = {SkColorSetRGB(0x71, 0x07, 0xA1)};
  mixer[kColorPrimitiveTorWindow35] = {SkColorSetRGB(0x7E, 0x20, 0xAD)};
  mixer[kColorPrimitiveTorWindow40] = {SkColorSetRGB(0x8C, 0x30, 0xBB)};
  mixer[kColorPrimitiveTorWindow5] = {SkColorSetRGB(0x21, 0x00, 0x33)};
  mixer[kColorPrimitiveTorWindow50] = {SkColorSetRGB(0xA7, 0x4D, 0xD6)};
  mixer[kColorPrimitiveTorWindow60] = {SkColorSetRGB(0xC3, 0x69, 0xF2)};
  mixer[kColorPrimitiveTorWindow70] = {SkColorSetRGB(0xD9, 0x8C, 0xFF)};
  mixer[kColorPrimitiveTorWindow80] = {SkColorSetRGB(0xE8, 0xB3, 0xFF)};
  mixer[kColorPrimitiveTorWindow90] = {SkColorSetRGB(0xF6, 0xD9, 0xFF)};
  mixer[kColorPrimitiveTorWindow95] = {SkColorSetRGB(0xFD, 0xEB, 0xFF)};
  mixer[kColorPrimitiveTorWindow98] = {SkColorSetRGB(0xFF, 0xF7, 0xFC)};
  mixer[kColorPrimitiveTorWindow99] = {SkColorSetRGB(0xFF, 0xFB, 0xFF)};
  mixer[kColorPrimitiveYellow0] = {SkColorSetRGB(0x00, 0x00, 0x00)};
  mixer[kColorPrimitiveYellow10] = {SkColorSetRGB(0x24, 0x1A, 0x00)};
  mixer[kColorPrimitiveYellow100] = {SkColorSetRGB(0xFF, 0xFF, 0xFF)};
  mixer[kColorPrimitiveYellow15] = {SkColorSetRGB(0x30, 0x24, 0x00)};
  mixer[kColorPrimitiveYellow20] = {SkColorSetRGB(0x3D, 0x2F, 0x00)};
  mixer[kColorPrimitiveYellow25] = {SkColorSetRGB(0x4A, 0x39, 0x00)};
  mixer[kColorPrimitiveYellow30] = {SkColorSetRGB(0x58, 0x44, 0x00)};
  mixer[kColorPrimitiveYellow35] = {SkColorSetRGB(0x66, 0x50, 0x00)};
  mixer[kColorPrimitiveYellow40] = {SkColorSetRGB(0x74, 0x5B, 0x00)};
  mixer[kColorPrimitiveYellow5] = {SkColorSetRGB(0x17, 0x10, 0x00)};
  mixer[kColorPrimitiveYellow50] = {SkColorSetRGB(0x92, 0x73, 0x00)};
  mixer[kColorPrimitiveYellow60] = {SkColorSetRGB(0xB1, 0x8C, 0x00)};
  mixer[kColorPrimitiveYellow70] = {SkColorSetRGB(0xD1, 0xA6, 0x00)};
  mixer[kColorPrimitiveYellow80] = {SkColorSetRGB(0xF1, 0xC0, 0x0F)};
  mixer[kColorPrimitiveYellow90] = {SkColorSetRGB(0xFF, 0xE0, 0x8D)};
  mixer[kColorPrimitiveYellow95] = {SkColorSetRGB(0xFF, 0xEF, 0xCE)};
  mixer[kColorPrimitiveYellow98] = {SkColorSetRGB(0xFF, 0xF8, 0xF1)};
  mixer[kColorPrimitiveYellow99] = {SkColorSetRGB(0xFF, 0xFB, 0xFF)};
  mixer[kColorBlack] = {SkColorSetRGB(0x00, 0x00, 0x00)};
  mixer[kColorWhite] = {SkColorSetRGB(0xFF, 0xFF, 0xFF)};

  if (is_dark) {
    mixer[kColorSchemesBackground] = {provider->GetColor(kColorPrimitiveNeutral5)};
    mixer[kColorSchemesError] = {provider->GetColor(kColorPrimitiveRed80)};
    mixer[kColorSchemesErrorContainer] = {provider->GetColor(kColorPrimitiveRed30)};
    mixer[kColorSchemesInverseOnSurface] = {provider->GetColor(kColorPrimitiveNeutral20)};
    mixer[kColorSchemesInversePrimary] = {provider->GetColor(kColorPrimitivePrimary40)};
    mixer[kColorSchemesInverseSurface] = {provider->GetColor(kColorPrimitiveNeutral90)};
    mixer[kColorSchemesOnBackground] = {provider->GetColor(kColorPrimitiveNeutral90)};
    mixer[kColorSchemesOnError] = {provider->GetColor(kColorPrimitiveRed20)};
    mixer[kColorSchemesOnErrorContainer] = {provider->GetColor(kColorPrimitiveRed90)};
    mixer[kColorSchemesOnPrimary] = {provider->GetColor(kColorPrimitivePrimary20)};
    mixer[kColorSchemesOnPrimaryContainer] = {provider->GetColor(kColorPrimitivePrimary90)};
    mixer[kColorSchemesOnPrimaryFixed] = {provider->GetColor(kColorPrimitivePrimary10)};
    mixer[kColorSchemesOnPrimaryFixedVariant] = {provider->GetColor(kColorPrimitivePrimary30)};
    mixer[kColorSchemesOnSecondary] = {provider->GetColor(kColorPrimitiveSecondary20)};
    mixer[kColorSchemesOnSecondaryContainer] = {provider->GetColor(kColorPrimitiveSecondary90)};
    mixer[kColorSchemesOnSecondaryFixed] = {provider->GetColor(kColorPrimitiveSecondary10)};
    mixer[kColorSchemesOnSecondaryFixedVariant] = {provider->GetColor(kColorPrimitiveSecondary30)};
    mixer[kColorSchemesOnSurface] = {provider->GetColor(kColorPrimitiveNeutral90)};
    mixer[kColorSchemesOnSurfaceVariant] = {provider->GetColor(kColorPrimitiveNeutral80)};
    mixer[kColorSchemesOnTertiary] = {provider->GetColor(kColorPrimitiveTertiary20)};
    mixer[kColorSchemesOnTertiaryContainer] = {provider->GetColor(kColorPrimitiveTertiary90)};
    mixer[kColorSchemesOnTertiaryFixed] = {provider->GetColor(kColorPrimitiveTertiary10)};
    mixer[kColorSchemesOnTertiaryFixedVariant] = {provider->GetColor(kColorPrimitiveTertiary30)};
    mixer[kColorSchemesOutline] = {provider->GetColor(kColorPrimitiveNeutral60)};
    mixer[kColorSchemesOutlineVariant] = {provider->GetColor(kColorPrimitiveNeutral30)};
    mixer[kColorSchemesPrimary] = {provider->GetColor(kColorPrimitivePrimary80)};
    mixer[kColorSchemesPrimaryContainer] = {provider->GetColor(kColorPrimitivePrimary30)};
    mixer[kColorSchemesPrimaryFixed] = {provider->GetColor(kColorPrimitivePrimary90)};
    mixer[kColorSchemesPrimaryFixedDim] = {provider->GetColor(kColorPrimitivePrimary80)};
    mixer[kColorSchemesScrim] = {provider->GetColor(kColorPrimitiveNeutral0)};
    mixer[kColorSchemesSecondary] = {provider->GetColor(kColorPrimitiveSecondary80)};
    mixer[kColorSchemesSecondaryContainer] = {provider->GetColor(kColorPrimitiveSecondary30)};
    mixer[kColorSchemesSecondaryFixed] = {provider->GetColor(kColorPrimitiveSecondary90)};
    mixer[kColorSchemesSecondaryFixedDim] = {provider->GetColor(kColorPrimitiveSecondary80)};
    mixer[kColorSchemesShadow] = {provider->GetColor(kColorPrimitiveNeutral0)};
    mixer[kColorSchemesSurface] = {provider->GetColor(kColorPrimitiveNeutral5)};
    mixer[kColorSchemesSurfaceBright] = {provider->GetColor(kColorPrimitiveNeutral25)};
    mixer[kColorSchemesSurfaceContainer] = {provider->GetColor(kColorPrimitiveNeutral10)};
    mixer[kColorSchemesSurfaceContainerHigh] = {provider->GetColor(kColorPrimitiveNeutral15)};
    mixer[kColorSchemesSurfaceContainerHighest] = {provider->GetColor(kColorPrimitiveNeutral20)};
    mixer[kColorSchemesSurfaceContainerLow] = {provider->GetColor(kColorPrimitiveNeutral5)};
    mixer[kColorSchemesSurfaceContainerLowest] = {provider->GetColor(kColorPrimitiveNeutral0)};
    mixer[kColorSchemesSurfaceDim] = {provider->GetColor(kColorPrimitiveNeutral5)};
    mixer[kColorSchemesSurfaceTint] = {provider->GetColor(kColorPrimitivePrimary80)};
    mixer[kColorSchemesSurfaceVariant] = {provider->GetColor(kColorPrimitiveNeutral30)};
    mixer[kColorSchemesTertiary] = {provider->GetColor(kColorPrimitiveTertiary80)};
    mixer[kColorSchemesTertiaryContainer] = {provider->GetColor(kColorPrimitiveTertiary30)};
    mixer[kColorSchemesTertiaryFixed] = {provider->GetColor(kColorPrimitiveTertiary90)};
    mixer[kColorSchemesTertiaryFixedDim] = {provider->GetColor(kColorPrimitiveTertiary80)};
    mixer[kColorNeutral10] = {provider->GetColor(kColorPrimitiveNeutral15)};
    mixer[kColorNeutral20] = {provider->GetColor(kColorPrimitiveNeutral25)};
    mixer[kColorNeutral30] = {provider->GetColor(kColorPrimitiveNeutral40)};
    mixer[kColorNeutral40] = {provider->GetColor(kColorPrimitiveNeutral50)};
    mixer[kColorNeutral50] = {provider->GetColor(kColorPrimitiveNeutral60)};
    mixer[kColorNeutral60] = {provider->GetColor(kColorPrimitiveNeutral80)};
    mixer[kColorNeutral70] = {provider->GetColor(kColorPrimitiveNeutral95)};
    mixer[kColorNeutralVariant10] = {provider->GetColor(kColorPrimitiveNeutralVariant15)};
    mixer[kColorNeutralVariant20] = {provider->GetColor(kColorPrimitiveNeutralVariant25)};
    mixer[kColorNeutralVariant30] = {provider->GetColor(kColorPrimitiveNeutralVariant40)};
    mixer[kColorNeutralVariant40] = {provider->GetColor(kColorPrimitiveNeutralVariant50)};
    mixer[kColorNeutralVariant50] = {provider->GetColor(kColorPrimitiveNeutralVariant60)};
    mixer[kColorNeutralVariant60] = {provider->GetColor(kColorPrimitiveNeutralVariant80)};
    mixer[kColorNeutralVariant70] = {provider->GetColor(kColorPrimitiveNeutralVariant95)};
    mixer[kColorElevationPrimary] = {SkColorSetARGB(0x1A, 0xFF, 0xFF, 0xFF)};
    mixer[kColorPrimary10] = {provider->GetColor(kColorPrimitivePrimary15)};
    mixer[kColorPrimary20] = {provider->GetColor(kColorPrimitivePrimary25)};
    mixer[kColorPrimary30] = {provider->GetColor(kColorPrimitivePrimary40)};
    mixer[kColorPrimary40] = {provider->GetColor(kColorPrimitivePrimary50)};
    mixer[kColorPrimary50] = {provider->GetColor(kColorPrimitivePrimary60)};
    mixer[kColorPrimary60] = {provider->GetColor(kColorPrimitivePrimary80)};
    mixer[kColorPrimary70] = {provider->GetColor(kColorPrimitivePrimary95)};
    mixer[kColorTextPrimary] = {provider->GetColor(kColorSchemesOnSurface)};
    mixer[kColorBlue10] = {provider->GetColor(kColorPrimitiveBlue15)};
    mixer[kColorBlue20] = {provider->GetColor(kColorPrimitiveBlue25)};
    mixer[kColorBlue30] = {provider->GetColor(kColorPrimitiveBlue40)};
    mixer[kColorBlue40] = {provider->GetColor(kColorPrimitiveBlue50)};
    mixer[kColorBlue50] = {provider->GetColor(kColorPrimitiveBlue60)};
    mixer[kColorBlue60] = {provider->GetColor(kColorPrimitiveBlue80)};
    mixer[kColorBlue70] = {provider->GetColor(kColorPrimitiveBlue95)};
    mixer[kColorBlurple10] = {provider->GetColor(kColorPrimitiveBlurple15)};
    mixer[kColorBlurple20] = {provider->GetColor(kColorPrimitiveBlurple25)};
    mixer[kColorBlurple30] = {provider->GetColor(kColorPrimitiveBlurple40)};
    mixer[kColorBlurple40] = {provider->GetColor(kColorPrimitiveBlurple50)};
    mixer[kColorBlurple50] = {provider->GetColor(kColorPrimitiveBlurple60)};
    mixer[kColorBlurple60] = {provider->GetColor(kColorPrimitiveBlurple80)};
    mixer[kColorBlurple70] = {provider->GetColor(kColorPrimitiveBlurple95)};
    mixer[kColorButtonBackground] = {provider->GetColor(kColorSchemesPrimary)};
    mixer[kColorButtonDisabled] = {SkColorSetARGB(0x33, 0xEB, 0xEE, 0xF0)};
    mixer[kColorButtonErrorBackground] = {provider->GetColor(kColorPrimitiveRed50)};
    mixer[kColorButtonSuccessBackground] = {provider->GetColor(kColorPrimitiveGreen50)};
    mixer[kColorContainerBackground] = {provider->GetColor(kColorPrimitiveNeutral5)};
    mixer[kColorContainerDisabled] = {provider->GetColor(kColorPrimitiveNeutral15)};
    mixer[kColorContainerHighlight] = {provider->GetColor(kColorPrimitiveNeutral10)};
    mixer[kColorContainerInteractive] = {provider->GetColor(kColorPrimitivePrimary10)};
    mixer[kColorDesktopbrowserChromeBackgroundDesktop] = {provider->GetColor(kColorPrimitiveNeutral20)};
    mixer[kColorDesktopbrowserChromeMenuBackground] = {provider->GetColor(kColorPrimitiveNeutral15)};
    mixer[kColorDesktopbrowserOmnibarBackgroundActive] = {provider->GetColor(kColorPrimitiveNeutral20)};
    mixer[kColorDesktopbrowserOmnibarBackgroundDesktop] = {provider->GetColor(kColorPrimitiveNeutral15)};
    mixer[kColorDesktopbrowserOmnibarBackgroundSelectedItem] = {provider->GetColor(kColorPrimitiveNeutral15)};
    mixer[kColorDesktopbrowserOmnibarButtonActive] = {provider->GetColor(kColorPrimitiveNeutral5)};
    mixer[kColorDesktopbrowserOmnibarButtonHover] = {provider->GetColor(kColorPrimitiveNeutral10)};
    mixer[kColorDesktopbrowserOmnibarDivider] = {provider->GetColor(kColorPrimitiveNeutral10)};
    mixer[kColorDesktopbrowserOmnibarSplitViewIconActive] = {provider->GetColor(kColorPrimitiveNeutral15)};
    mixer[kColorDesktopbrowserOmnibarSplitViewIconBackground] = {provider->GetColor(kColorPrimitiveNeutral10)};
    mixer[kColorDesktopbrowserTabbarActiveButtonBackground] = {provider->GetColor(kColorPrimitiveNeutral0)};
    mixer[kColorDesktopbrowserTabbarActiveTabHorizontal] = {provider->GetColor(kColorPrimitiveNeutral20)};
    mixer[kColorDesktopbrowserTabbarActiveTabVertical] = {provider->GetColor(kColorPrimitiveNeutral30)};
    mixer[kColorDesktopbrowserTabbarBackground] = {provider->GetColor(kColorPrimitiveNeutral10)};
    mixer[kColorDesktopbrowserTabbarHoverTabBackground] = {provider->GetColor(kColorPrimitiveNeutral15)};
    mixer[kColorDesktopbrowserTabbarPinnedTabOutlineHorizontal] = {provider->GetColor(kColorPrimitiveNeutral20)};
    mixer[kColorDesktopbrowserTabbarPinnedTabOutlineVertical] = {provider->GetColor(kColorPrimitiveNeutral30)};
    mixer[kColorDesktopbrowserTabbarSplitViewHorizontal] = {provider->GetColor(kColorPrimitiveNeutral0)};
    mixer[kColorDesktopbrowserTabbarSplitViewVertical] = {provider->GetColor(kColorPrimitiveNeutral10)};
    mixer[kColorDesktopbrowserToolbarButtonActive] = {provider->GetColor(kColorPrimitiveNeutral5)};
    mixer[kColorDesktopbrowserToolbarButtonHover] = {provider->GetColor(kColorPrimitiveNeutral15)};
    mixer[kColorDesktopbrowserToolbarButtonOutline] = {provider->GetColor(kColorPrimitiveNeutral30)};
    mixer[kColorDialogsButtonTransparentDefault] = {SkColorSetARGB(0x59, 0x0D, 0x12, 0x14)};
    mixer[kColorDialogsButtonTransparentHover] = {SkColorSetARGB(0x80, 0x0D, 0x12, 0x14)};
    mixer[kColorDialogsDivider] = {SkColorSetARGB(0xA6, 0x21, 0x27, 0x2A)};
    mixer[kColorDialogsScrimBackground] = {SkColorSetARGB(0xB3, 0x21, 0x27, 0x2A)};
    mixer[kColorDividerInteractive] = {provider->GetColor(kColorPrimitivePrimary30)};
    mixer[kColorDividerStrong] = {provider->GetColor(kColorPrimitiveNeutral30)};
    mixer[kColorDividerSubtle] = {provider->GetColor(kColorPrimitiveNeutral20)};
    mixer[kColorElevationSecondary] = {SkColorSetARGB(0x99, 0x00, 0x00, 0x00)};
    mixer[kColorForeground] = {provider->GetColor(kColorWhite)};
    mixer[kColorGreen10] = {provider->GetColor(kColorPrimitiveGreen15)};
    mixer[kColorGreen20] = {provider->GetColor(kColorPrimitiveGreen25)};
    mixer[kColorGreen30] = {provider->GetColor(kColorPrimitiveGreen40)};
    mixer[kColorGreen40] = {provider->GetColor(kColorPrimitiveGreen50)};
    mixer[kColorGreen50] = {provider->GetColor(kColorPrimitiveGreen60)};
    mixer[kColorGreen60] = {provider->GetColor(kColorPrimitiveGreen80)};
    mixer[kColorGreen70] = {provider->GetColor(kColorPrimitiveGreen95)};
    mixer[kColorIconDefault] = {provider->GetColor(kColorSchemesOnSurfaceVariant)};
    mixer[kColorIconDisabled] = {SkColorSetARGB(0x80, 0xC7, 0xC7, 0xCC)};
    mixer[kColorIconInteractive] = {provider->GetColor(kColorSchemesPrimary)};
    mixer[kColorIosBrowserBackgroundIos] = {provider->GetColor(kColorPrimitiveNeutral0)};
    mixer[kColorIosBrowserChromeBackgroundIos] = {provider->GetColor(kColorPrimitiveNeutral20)};
    mixer[kColorIosBrowserContainerHighlightIos] = {SkColorSetARGB(0x3D, 0x76, 0x76, 0x80)};
    mixer[kColorIosBrowserElevatedIos] = {provider->GetColor(kColorPrimitiveNeutral10)};
    mixer[kColorIosBrowserOmnibarBackground] = {provider->GetColor(kColorPrimitiveNeutral10)};
    mixer[kColorLegacyBackground1] = {SkColorSetRGB(0x1E, 0x20, 0x29)};
    mixer[kColorLegacyBackground2] = {SkColorSetRGB(0x17, 0x17, 0x1F)};
    mixer[kColorLegacyDisabled] = {SkColorSetRGB(0x34, 0x3A, 0x40)};
    mixer[kColorLegacyDivider1] = {SkColorSetRGB(0x3B, 0x3E, 0x4F)};
    mixer[kColorLegacyFocusBorder] = {SkColorSetRGB(0xA0, 0xA5, 0xEB)};
    mixer[kColorLegacyInteractive1] = {SkColorSetRGB(0xEA, 0x3A, 0x0D)};
    mixer[kColorLegacyInteractive2] = {SkColorSetRGB(0xFB, 0x54, 0x2B)};
    mixer[kColorLegacyInteractive3] = {SkColorSetRGB(0xFF, 0x76, 0x54)};
    mixer[kColorLegacyInteractive4] = {SkColorSetRGB(0x35, 0x3D, 0xAB)};
    mixer[kColorLegacyInteractive5] = {SkColorSetRGB(0x4C, 0x54, 0xD2)};
    mixer[kColorLegacyInteractive6] = {SkColorSetRGB(0x73, 0x7A, 0xDE)};
    mixer[kColorLegacyInteractive7] = {SkColorSetRGB(0xF0, 0xF2, 0xFF)};
    mixer[kColorLegacyInteractive8] = {SkColorSetRGB(0x5E, 0x61, 0x75)};
    mixer[kColorLegacyText1] = {SkColorSetRGB(0xF0, 0xF2, 0xFF)};
    mixer[kColorLegacyText2] = {SkColorSetRGB(0xC2, 0xC4, 0xCF)};
    mixer[kColorLegacyText3] = {SkColorSetRGB(0x84, 0x88, 0x9C)};
    mixer[kColorMaterialDivider] = {SkColorSetARGB(0x33, 0xFF, 0xFF, 0xFF)};
    mixer[kColorMaterialRegular] = {SkColorSetARGB(0xBF, 0x25, 0x25, 0x25)};
    mixer[kColorMaterialSeparator] = {SkColorSetARGB(0x29, 0x00, 0x00, 0x00)};
    mixer[kColorMaterialThick] = {SkColorSetARGB(0xE6, 0x25, 0x25, 0x25)};
    mixer[kColorMaterialThin] = {SkColorSetARGB(0x94, 0x25, 0x25, 0x25)};
    mixer[kColorMaterialUltrathin] = {SkColorSetARGB(0x63, 0x25, 0x25, 0x25)};
    mixer[kColorOrange10] = {provider->GetColor(kColorPrimitiveOrange15)};
    mixer[kColorOrange20] = {provider->GetColor(kColorPrimitiveOrange25)};
    mixer[kColorOrange30] = {provider->GetColor(kColorPrimitiveOrange40)};
    mixer[kColorOrange40] = {provider->GetColor(kColorPrimitiveOrange50)};
    mixer[kColorOrange50] = {provider->GetColor(kColorPrimitiveOrange60)};
    mixer[kColorOrange60] = {provider->GetColor(kColorPrimitiveOrange80)};
    mixer[kColorOrange70] = {provider->GetColor(kColorPrimitiveOrange95)};
    mixer[kColorPageBackground] = {provider->GetColor(kColorPrimitiveNeutral0)};
    mixer[kColorPink10] = {provider->GetColor(kColorPrimitivePink15)};
    mixer[kColorPink20] = {provider->GetColor(kColorPrimitivePink25)};
    mixer[kColorPink30] = {provider->GetColor(kColorPrimitivePink40)};
    mixer[kColorPink40] = {provider->GetColor(kColorPrimitivePink50)};
    mixer[kColorPink50] = {provider->GetColor(kColorPrimitivePink60)};
    mixer[kColorPink60] = {provider->GetColor(kColorPrimitivePink80)};
    mixer[kColorPink70] = {provider->GetColor(kColorPrimitivePink95)};
    mixer[kColorPrivateWindow10] = {provider->GetColor(kColorPrimitivePrivateWindow15)};
    mixer[kColorPrivateWindow20] = {provider->GetColor(kColorPrimitivePrivateWindow25)};
    mixer[kColorPrivateWindow30] = {provider->GetColor(kColorPrimitivePrivateWindow40)};
    mixer[kColorPrivateWindow40] = {provider->GetColor(kColorPrimitivePrivateWindow50)};
    mixer[kColorPrivateWindow50] = {provider->GetColor(kColorPrimitivePrivateWindow60)};
    mixer[kColorPrivateWindow60] = {provider->GetColor(kColorPrimitivePrivateWindow80)};
    mixer[kColorPrivateWindow70] = {provider->GetColor(kColorPrimitivePrivateWindow95)};
    mixer[kColorPurple10] = {provider->GetColor(kColorPrimitivePurple15)};
    mixer[kColorPurple20] = {provider->GetColor(kColorPrimitivePurple25)};
    mixer[kColorPurple30] = {provider->GetColor(kColorPrimitivePurple40)};
    mixer[kColorPurple40] = {provider->GetColor(kColorPrimitivePurple50)};
    mixer[kColorPurple50] = {provider->GetColor(kColorPrimitivePurple60)};
    mixer[kColorPurple60] = {provider->GetColor(kColorPrimitivePurple80)};
    mixer[kColorPurple70] = {provider->GetColor(kColorPrimitivePurple95)};
    mixer[kColorRed10] = {provider->GetColor(kColorPrimitiveRed15)};
    mixer[kColorRed20] = {provider->GetColor(kColorPrimitiveRed25)};
    mixer[kColorRed30] = {provider->GetColor(kColorPrimitiveRed40)};
    mixer[kColorRed40] = {provider->GetColor(kColorPrimitiveRed50)};
    mixer[kColorRed50] = {provider->GetColor(kColorPrimitiveRed60)};
    mixer[kColorRed60] = {provider->GetColor(kColorPrimitiveRed80)};
    mixer[kColorRed70] = {provider->GetColor(kColorPrimitiveRed95)};
    mixer[kColorSecondary10] = {provider->GetColor(kColorPrimitiveSecondary15)};
    mixer[kColorSecondary20] = {provider->GetColor(kColorPrimitiveSecondary25)};
    mixer[kColorSecondary30] = {provider->GetColor(kColorPrimitiveSecondary40)};
    mixer[kColorSecondary40] = {provider->GetColor(kColorPrimitiveSecondary50)};
    mixer[kColorSecondary50] = {provider->GetColor(kColorPrimitiveSecondary60)};
    mixer[kColorSecondary60] = {provider->GetColor(kColorPrimitiveSecondary80)};
    mixer[kColorSecondary70] = {provider->GetColor(kColorPrimitiveSecondary95)};
    mixer[kColorSystemfeedbackErrorBackground] = {provider->GetColor(kColorPrimitiveRed15)};
    mixer[kColorSystemfeedbackErrorIcon] = {provider->GetColor(kColorPrimitiveRed60)};
    mixer[kColorSystemfeedbackErrorText] = {provider->GetColor(kColorPrimitiveRed70)};
    mixer[kColorSystemfeedbackFocusButtonSpecial] = {provider->GetColor(kColorPrimary70)};
    mixer[kColorSystemfeedbackFocusDefault] = {provider->GetColor(kColorPrimary30)};
    mixer[kColorSystemfeedbackInfoBackground] = {provider->GetColor(kColorPrimitiveBlue15)};
    mixer[kColorSystemfeedbackInfoIcon] = {provider->GetColor(kColorPrimitiveBlue60)};
    mixer[kColorSystemfeedbackInfoText] = {provider->GetColor(kColorPrimitiveBlue70)};
    mixer[kColorSystemfeedbackSuccessBackground] = {provider->GetColor(kColorPrimitiveGreen15)};
    mixer[kColorSystemfeedbackSuccessIcon] = {provider->GetColor(kColorPrimitiveGreen60)};
    mixer[kColorSystemfeedbackSuccessText] = {provider->GetColor(kColorPrimitiveGreen70)};
    mixer[kColorSystemfeedbackWarningBackground] = {provider->GetColor(kColorPrimitiveYellow10)};
    mixer[kColorSystemfeedbackWarningIcon] = {provider->GetColor(kColorPrimitiveYellow60)};
    mixer[kColorSystemfeedbackWarningText] = {provider->GetColor(kColorPrimitiveYellow70)};
    mixer[kColorTeal10] = {provider->GetColor(kColorPrimitiveTeal15)};
    mixer[kColorTeal20] = {provider->GetColor(kColorPrimitiveTeal25)};
    mixer[kColorTeal30] = {provider->GetColor(kColorPrimitiveTeal40)};
    mixer[kColorTeal40] = {provider->GetColor(kColorPrimitiveTeal50)};
    mixer[kColorTeal50] = {provider->GetColor(kColorPrimitiveTeal60)};
    mixer[kColorTeal60] = {provider->GetColor(kColorPrimitiveTeal80)};
    mixer[kColorTeal70] = {provider->GetColor(kColorPrimitiveTeal95)};
    mixer[kColorTertiary10] = {provider->GetColor(kColorPrimitiveTertiary15)};
    mixer[kColorTertiary20] = {provider->GetColor(kColorPrimitiveTertiary25)};
    mixer[kColorTertiary30] = {provider->GetColor(kColorPrimitiveTertiary40)};
    mixer[kColorTertiary40] = {provider->GetColor(kColorPrimitiveTertiary50)};
    mixer[kColorTertiary50] = {provider->GetColor(kColorPrimitiveTertiary60)};
    mixer[kColorTertiary60] = {provider->GetColor(kColorPrimitiveTertiary80)};
    mixer[kColorTertiary70] = {provider->GetColor(kColorPrimitiveTertiary95)};
    mixer[kColorTextDisabled] = {SkColorSetARGB(0x80, 0xEB, 0xEE, 0xF0)};
    mixer[kColorTextInteractive] = {provider->GetColor(kColorSchemesPrimary)};
    mixer[kColorTextInteractiveVisited] = {provider->GetColor(kColorSchemesTertiary)};
    mixer[kColorTextSecondary] = {provider->GetColor(kColorSchemesOnSurfaceVariant)};
    mixer[kColorTextTertiary] = {provider->GetColor(kColorPrimitiveNeutral60)};
    mixer[kColorTorWindow10] = {provider->GetColor(kColorPrimitiveTorWindow15)};
    mixer[kColorTorWindow20] = {provider->GetColor(kColorPrimitiveTorWindow25)};
    mixer[kColorTorWindow30] = {provider->GetColor(kColorPrimitiveTorWindow40)};
    mixer[kColorTorWindow40] = {provider->GetColor(kColorPrimitiveTorWindow50)};
    mixer[kColorTorWindow50] = {provider->GetColor(kColorPrimitiveTorWindow60)};
    mixer[kColorTorWindow60] = {provider->GetColor(kColorPrimitiveTorWindow80)};
    mixer[kColorTorWindow70] = {provider->GetColor(kColorPrimitiveTorWindow95)};
    mixer[kColorYellow10] = {provider->GetColor(kColorPrimitiveYellow15)};
    mixer[kColorYellow20] = {provider->GetColor(kColorPrimitiveYellow25)};
    mixer[kColorYellow30] = {provider->GetColor(kColorPrimitiveYellow40)};
    mixer[kColorYellow40] = {provider->GetColor(kColorPrimitiveYellow50)};
    mixer[kColorYellow50] = {provider->GetColor(kColorPrimitiveYellow60)};
    mixer[kColorYellow60] = {provider->GetColor(kColorPrimitiveYellow80)};
    mixer[kColorYellow70] = {provider->GetColor(kColorPrimitiveYellow95)};
  } else {
    mixer[kColorSchemesBackground] = {provider->GetColor(kColorPrimitiveNeutral98)};
    mixer[kColorSchemesError] = {provider->GetColor(kColorPrimitiveRed35)};
    mixer[kColorSchemesErrorContainer] = {provider->GetColor(kColorPrimitiveRed90)};
    mixer[kColorSchemesInverseOnSurface] = {provider->GetColor(kColorPrimitiveNeutral95)};
    mixer[kColorSchemesInversePrimary] = {provider->GetColor(kColorPrimitivePrimary80)};
    mixer[kColorSchemesInverseSurface] = {provider->GetColor(kColorPrimitiveNeutral20)};
    mixer[kColorSchemesOnBackground] = {provider->GetColor(kColorPrimitiveNeutral10)};
    mixer[kColorSchemesOnError] = {provider->GetColor(kColorPrimitiveRed100)};
    mixer[kColorSchemesOnErrorContainer] = {provider->GetColor(kColorPrimitiveRed10)};
    mixer[kColorSchemesOnPrimary] = {provider->GetColor(kColorPrimitivePrimary100)};
    mixer[kColorSchemesOnPrimaryContainer] = {provider->GetColor(kColorPrimitivePrimary10)};
    mixer[kColorSchemesOnPrimaryFixed] = {provider->GetColor(kColorPrimitivePrimary10)};
    mixer[kColorSchemesOnPrimaryFixedVariant] = {provider->GetColor(kColorPrimitivePrimary30)};
    mixer[kColorSchemesOnSecondary] = {provider->GetColor(kColorPrimitiveSecondary100)};
    mixer[kColorSchemesOnSecondaryContainer] = {provider->GetColor(kColorPrimitiveSecondary10)};
    mixer[kColorSchemesOnSecondaryFixed] = {provider->GetColor(kColorPrimitiveSecondary10)};
    mixer[kColorSchemesOnSecondaryFixedVariant] = {provider->GetColor(kColorPrimitiveSecondary30)};
    mixer[kColorSchemesOnSurface] = {provider->GetColor(kColorPrimitiveNeutral10)};
    mixer[kColorSchemesOnSurfaceVariant] = {provider->GetColor(kColorPrimitiveNeutral30)};
    mixer[kColorSchemesOnTertiary] = {provider->GetColor(kColorPrimitiveTertiary100)};
    mixer[kColorSchemesOnTertiaryContainer] = {provider->GetColor(kColorPrimitiveTertiary10)};
    mixer[kColorSchemesOnTertiaryFixed] = {provider->GetColor(kColorPrimitiveTertiary10)};
    mixer[kColorSchemesOnTertiaryFixedVariant] = {provider->GetColor(kColorPrimitiveTertiary30)};
    mixer[kColorSchemesOutline] = {provider->GetColor(kColorPrimitiveNeutral50)};
    mixer[kColorSchemesOutlineVariant] = {provider->GetColor(kColorPrimitiveNeutral80)};
    mixer[kColorSchemesPrimary] = {provider->GetColor(kColorPrimitivePrimary35)};
    mixer[kColorSchemesPrimaryContainer] = {provider->GetColor(kColorPrimitivePrimary90)};
    mixer[kColorSchemesPrimaryFixed] = {provider->GetColor(kColorPrimitivePrimary90)};
    mixer[kColorSchemesPrimaryFixedDim] = {provider->GetColor(kColorPrimitivePrimary80)};
    mixer[kColorSchemesScrim] = {provider->GetColor(kColorPrimitiveNeutral0)};
    mixer[kColorSchemesSecondary] = {provider->GetColor(kColorPrimitiveSecondary35)};
    mixer[kColorSchemesSecondaryContainer] = {provider->GetColor(kColorPrimitiveSecondary90)};
    mixer[kColorSchemesSecondaryFixed] = {provider->GetColor(kColorPrimitiveSecondary90)};
    mixer[kColorSchemesSecondaryFixedDim] = {provider->GetColor(kColorPrimitiveSecondary80)};
    mixer[kColorSchemesShadow] = {provider->GetColor(kColorPrimitiveNeutral0)};
    mixer[kColorSchemesSurface] = {provider->GetColor(kColorPrimitiveNeutral98)};
    mixer[kColorSchemesSurfaceBright] = {provider->GetColor(kColorPrimitiveNeutral98)};
    mixer[kColorSchemesSurfaceContainer] = {provider->GetColor(kColorPrimitiveNeutral95)};
    mixer[kColorSchemesSurfaceContainerHigh] = {provider->GetColor(kColorPrimitiveNeutral90)};
    mixer[kColorSchemesSurfaceContainerHighest] = {provider->GetColor(kColorPrimitiveNeutral80)};
    mixer[kColorSchemesSurfaceContainerLow] = {provider->GetColor(kColorPrimitiveNeutral98)};
    mixer[kColorSchemesSurfaceContainerLowest] = {provider->GetColor(kColorPrimitiveNeutral100)};
    mixer[kColorSchemesSurfaceDim] = {provider->GetColor(kColorPrimitiveNeutral90)};
    mixer[kColorSchemesSurfaceTint] = {provider->GetColor(kColorPrimitivePrimary40)};
    mixer[kColorSchemesSurfaceVariant] = {provider->GetColor(kColorPrimitiveNeutral90)};
    mixer[kColorSchemesTertiary] = {provider->GetColor(kColorPrimitiveTertiary35)};
    mixer[kColorSchemesTertiaryContainer] = {provider->GetColor(kColorPrimitiveTertiary90)};
    mixer[kColorSchemesTertiaryFixed] = {provider->GetColor(kColorPrimitiveTertiary90)};
    mixer[kColorSchemesTertiaryFixedDim] = {provider->GetColor(kColorPrimitiveTertiary80)};
    mixer[kColorNeutral10] = {provider->GetColor(kColorPrimitiveNeutral95)};
    mixer[kColorNeutral20] = {provider->GetColor(kColorPrimitiveNeutral90)};
    mixer[kColorNeutral30] = {provider->GetColor(kColorPrimitiveNeutral60)};
    mixer[kColorNeutral40] = {provider->GetColor(kColorPrimitiveNeutral50)};
    mixer[kColorNeutral50] = {provider->GetColor(kColorPrimitiveNeutral40)};
    mixer[kColorNeutral60] = {provider->GetColor(kColorPrimitiveNeutral25)};
    mixer[kColorNeutral70] = {provider->GetColor(kColorPrimitiveNeutral10)};
    mixer[kColorNeutralVariant10] = {provider->GetColor(kColorPrimitiveNeutralVariant95)};
    mixer[kColorNeutralVariant20] = {provider->GetColor(kColorPrimitiveNeutralVariant90)};
    mixer[kColorNeutralVariant30] = {provider->GetColor(kColorPrimitiveNeutralVariant60)};
    mixer[kColorNeutralVariant40] = {provider->GetColor(kColorPrimitiveNeutralVariant50)};
    mixer[kColorNeutralVariant50] = {provider->GetColor(kColorPrimitiveNeutralVariant40)};
    mixer[kColorNeutralVariant60] = {provider->GetColor(kColorPrimitiveNeutralVariant25)};
    mixer[kColorNeutralVariant70] = {provider->GetColor(kColorPrimitiveNeutralVariant10)};
    mixer[kColorElevationPrimary] = {SkColorSetARGB(0x0D, 0x00, 0x00, 0x00)};
    mixer[kColorPrimary10] = {provider->GetColor(kColorPrimitivePrimary95)};
    mixer[kColorPrimary20] = {provider->GetColor(kColorPrimitivePrimary90)};
    mixer[kColorPrimary30] = {provider->GetColor(kColorPrimitivePrimary60)};
    mixer[kColorPrimary40] = {provider->GetColor(kColorPrimitivePrimary50)};
    mixer[kColorPrimary50] = {provider->GetColor(kColorPrimitivePrimary40)};
    mixer[kColorPrimary60] = {provider->GetColor(kColorPrimitivePrimary25)};
    mixer[kColorPrimary70] = {provider->GetColor(kColorPrimitivePrimary10)};
    mixer[kColorTextPrimary] = {provider->GetColor(kColorSchemesOnSurface)};
    mixer[kColorBlue10] = {provider->GetColor(kColorPrimitiveBlue95)};
    mixer[kColorBlue20] = {provider->GetColor(kColorPrimitiveBlue90)};
    mixer[kColorBlue30] = {provider->GetColor(kColorPrimitiveBlue60)};
    mixer[kColorBlue40] = {provider->GetColor(kColorPrimitiveBlue50)};
    mixer[kColorBlue50] = {provider->GetColor(kColorPrimitiveBlue40)};
    mixer[kColorBlue60] = {provider->GetColor(kColorPrimitiveBlue25)};
    mixer[kColorBlue70] = {provider->GetColor(kColorPrimitiveBlue10)};
    mixer[kColorBlurple10] = {provider->GetColor(kColorPrimitiveBlurple95)};
    mixer[kColorBlurple20] = {provider->GetColor(kColorPrimitiveBlurple90)};
    mixer[kColorBlurple30] = {provider->GetColor(kColorPrimitiveBlurple60)};
    mixer[kColorBlurple40] = {provider->GetColor(kColorPrimitiveBlurple50)};
    mixer[kColorBlurple50] = {provider->GetColor(kColorPrimitiveBlurple40)};
    mixer[kColorBlurple60] = {provider->GetColor(kColorPrimitiveBlurple25)};
    mixer[kColorBlurple70] = {provider->GetColor(kColorPrimitiveBlurple10)};
    mixer[kColorButtonBackground] = {provider->GetColor(kColorSchemesPrimary)};
    mixer[kColorButtonDisabled] = {SkColorSetARGB(0x33, 0x46, 0x46, 0x4A)};
    mixer[kColorButtonErrorBackground] = {provider->GetColor(kColorPrimitiveRed50)};
    mixer[kColorButtonSuccessBackground] = {provider->GetColor(kColorPrimitiveGreen50)};
    mixer[kColorContainerBackground] = {provider->GetColor(kColorPrimitiveNeutral100)};
    mixer[kColorContainerDisabled] = {provider->GetColor(kColorPrimitiveNeutral90)};
    mixer[kColorContainerHighlight] = {provider->GetColor(kColorPrimitiveNeutral98)};
    mixer[kColorContainerInteractive] = {provider->GetColor(kColorPrimitivePrimary98)};
    mixer[kColorDesktopbrowserChromeBackgroundDesktop] = {provider->GetColor(kColorPrimitiveNeutral98)};
    mixer[kColorDesktopbrowserChromeMenuBackground] = {provider->GetColor(kColorPrimitiveNeutral99)};
    mixer[kColorDesktopbrowserOmnibarBackgroundActive] = {provider->GetColor(kColorPrimitiveNeutral100)};
    mixer[kColorDesktopbrowserOmnibarBackgroundDesktop] = {provider->GetColor(kColorPrimitiveNeutral95)};
    mixer[kColorDesktopbrowserOmnibarBackgroundSelectedItem] = {provider->GetColor(kColorPrimitiveNeutral95)};
    mixer[kColorDesktopbrowserOmnibarButtonActive] = {provider->GetColor(kColorPrimitiveNeutral99)};
    mixer[kColorDesktopbrowserOmnibarButtonHover] = {provider->GetColor(kColorPrimitiveNeutral98)};
    mixer[kColorDesktopbrowserOmnibarDivider] = {provider->GetColor(kColorPrimitiveNeutral90)};
    mixer[kColorDesktopbrowserOmnibarSplitViewIconActive] = {provider->GetColor(kColorPrimitiveNeutral100)};
    mixer[kColorDesktopbrowserOmnibarSplitViewIconBackground] = {provider->GetColor(kColorPrimitiveNeutral90)};
    mixer[kColorDesktopbrowserTabbarActiveButtonBackground] = {provider->GetColor(kColorPrimitiveNeutral100)};
    mixer[kColorDesktopbrowserTabbarActiveTabHorizontal] = {provider->GetColor(kColorPrimitiveNeutral98)};
    mixer[kColorDesktopbrowserTabbarActiveTabVertical] = {provider->GetColor(kColorPrimitiveNeutral95)};
    mixer[kColorDesktopbrowserTabbarBackground] = {provider->GetColor(kColorPrimitiveNeutral90)};
    mixer[kColorDesktopbrowserTabbarHoverTabBackground] = {provider->GetColor(kColorPrimitiveNeutral95)};
    mixer[kColorDesktopbrowserTabbarPinnedTabOutlineHorizontal] = {provider->GetColor(kColorPrimitiveNeutral80)};
    mixer[kColorDesktopbrowserTabbarPinnedTabOutlineVertical] = {provider->GetColor(kColorPrimitiveNeutral90)};
    mixer[kColorDesktopbrowserTabbarSplitViewHorizontal] = {provider->GetColor(kColorPrimitiveNeutral80)};
    mixer[kColorDesktopbrowserTabbarSplitViewVertical] = {provider->GetColor(kColorPrimitiveNeutral90)};
    mixer[kColorDesktopbrowserToolbarButtonActive] = {provider->GetColor(kColorPrimitiveNeutral100)};
    mixer[kColorDesktopbrowserToolbarButtonHover] = {provider->GetColor(kColorPrimitiveNeutral95)};
    mixer[kColorDesktopbrowserToolbarButtonOutline] = {provider->GetColor(kColorPrimitiveNeutral90)};
    mixer[kColorDialogsButtonTransparentDefault] = {SkColorSetARGB(0x59, 0x0D, 0x12, 0x14)};
    mixer[kColorDialogsButtonTransparentHover] = {SkColorSetARGB(0x80, 0x0D, 0x12, 0x14)};
    mixer[kColorDialogsDivider] = {SkColorSetARGB(0x1A, 0x21, 0x27, 0x2A)};
    mixer[kColorDialogsScrimBackground] = {SkColorSetARGB(0x59, 0x0D, 0x12, 0x14)};
    mixer[kColorDividerInteractive] = {provider->GetColor(kColorPrimitivePrimary80)};
    mixer[kColorDividerStrong] = {provider->GetColor(kColorPrimitiveNeutral80)};
    mixer[kColorDividerSubtle] = {provider->GetColor(kColorPrimitiveNeutral90)};
    mixer[kColorElevationSecondary] = {SkColorSetARGB(0x1A, 0x00, 0x00, 0x00)};
    mixer[kColorForeground] = {provider->GetColor(kColorBlack)};
    mixer[kColorGreen10] = {provider->GetColor(kColorPrimitiveGreen95)};
    mixer[kColorGreen20] = {provider->GetColor(kColorPrimitiveGreen90)};
    mixer[kColorGreen30] = {provider->GetColor(kColorPrimitiveGreen60)};
    mixer[kColorGreen40] = {provider->GetColor(kColorPrimitiveGreen50)};
    mixer[kColorGreen50] = {provider->GetColor(kColorPrimitiveGreen40)};
    mixer[kColorGreen60] = {provider->GetColor(kColorPrimitiveGreen25)};
    mixer[kColorGreen70] = {provider->GetColor(kColorPrimitiveGreen10)};
    mixer[kColorIconDefault] = {provider->GetColor(kColorSchemesOnSurfaceVariant)};
    mixer[kColorIconDisabled] = {SkColorSetARGB(0x80, 0x46, 0x46, 0x4A)};
    mixer[kColorIconInteractive] = {provider->GetColor(kColorSchemesPrimary)};
    mixer[kColorIosBrowserBackgroundIos] = {provider->GetColor(kColorPrimitiveNeutral95)};
    mixer[kColorIosBrowserChromeBackgroundIos] = {provider->GetColor(kColorPrimitiveNeutral95)};
    mixer[kColorIosBrowserContainerHighlightIos] = {SkColorSetARGB(0x1F, 0x76, 0x76, 0x80)};
    mixer[kColorIosBrowserElevatedIos] = {provider->GetColor(kColorPrimitiveNeutral100)};
    mixer[kColorIosBrowserOmnibarBackground] = {provider->GetColor(kColorPrimitiveNeutral100)};
    mixer[kColorLegacyBackground1] = {SkColorSetRGB(0xFF, 0xFF, 0xFF)};
    mixer[kColorLegacyBackground2] = {SkColorSetRGB(0xF8, 0xF9, 0xFA)};
    mixer[kColorLegacyDisabled] = {SkColorSetRGB(0xDA, 0xDC, 0xE8)};
    mixer[kColorLegacyDivider1] = {SkColorSetRGB(0xE9, 0xE9, 0xF4)};
    mixer[kColorLegacyFocusBorder] = {SkColorSetRGB(0xA0, 0xA5, 0xEB)};
    mixer[kColorLegacyInteractive1] = {SkColorSetRGB(0xEA, 0x3A, 0x0D)};
    mixer[kColorLegacyInteractive2] = {SkColorSetRGB(0xFB, 0x54, 0x2B)};
    mixer[kColorLegacyInteractive3] = {SkColorSetRGB(0xFF, 0x76, 0x54)};
    mixer[kColorLegacyInteractive4] = {SkColorSetRGB(0x35, 0x3D, 0xAB)};
    mixer[kColorLegacyInteractive5] = {SkColorSetRGB(0x4C, 0x54, 0xD2)};
    mixer[kColorLegacyInteractive6] = {SkColorSetRGB(0x73, 0x7A, 0xDE)};
    mixer[kColorLegacyInteractive7] = {SkColorSetRGB(0x21, 0x25, 0x29)};
    mixer[kColorLegacyInteractive8] = {SkColorSetRGB(0xAE, 0xB1, 0xC2)};
    mixer[kColorLegacyText1] = {SkColorSetRGB(0x21, 0x25, 0x29)};
    mixer[kColorLegacyText2] = {SkColorSetRGB(0x49, 0x50, 0x57)};
    mixer[kColorLegacyText3] = {SkColorSetRGB(0x86, 0x8E, 0x96)};
    mixer[kColorMaterialDivider] = {SkColorSetARGB(0x40, 0x11, 0x11, 0x11)};
    mixer[kColorMaterialRegular] = {SkColorSetARGB(0xBA, 0xFF, 0xFF, 0xFF)};
    mixer[kColorMaterialSeparator] = {SkColorSetARGB(0x14, 0x00, 0x00, 0x00)};
    mixer[kColorMaterialThick] = {SkColorSetARGB(0xE8, 0xFF, 0xFF, 0xFF)};
    mixer[kColorMaterialThin] = {SkColorSetARGB(0x8C, 0xFF, 0xFF, 0xFF)};
    mixer[kColorMaterialUltrathin] = {SkColorSetARGB(0x52, 0xFF, 0xFF, 0xFF)};
    mixer[kColorOrange10] = {provider->GetColor(kColorPrimitiveOrange95)};
    mixer[kColorOrange20] = {provider->GetColor(kColorPrimitiveOrange90)};
    mixer[kColorOrange30] = {provider->GetColor(kColorPrimitiveOrange60)};
    mixer[kColorOrange40] = {provider->GetColor(kColorPrimitiveOrange50)};
    mixer[kColorOrange50] = {provider->GetColor(kColorPrimitiveOrange40)};
    mixer[kColorOrange60] = {provider->GetColor(kColorPrimitiveOrange25)};
    mixer[kColorOrange70] = {provider->GetColor(kColorPrimitiveOrange10)};
    mixer[kColorPageBackground] = {provider->GetColor(kColorPrimitiveNeutral95)};
    mixer[kColorPink10] = {provider->GetColor(kColorPrimitivePink95)};
    mixer[kColorPink20] = {provider->GetColor(kColorPrimitivePink90)};
    mixer[kColorPink30] = {provider->GetColor(kColorPrimitivePink60)};
    mixer[kColorPink40] = {provider->GetColor(kColorPrimitivePink50)};
    mixer[kColorPink50] = {provider->GetColor(kColorPrimitivePink40)};
    mixer[kColorPink60] = {provider->GetColor(kColorPrimitivePink25)};
    mixer[kColorPink70] = {provider->GetColor(kColorPrimitivePink10)};
    mixer[kColorPrivateWindow10] = {provider->GetColor(kColorPrimitivePrivateWindow95)};
    mixer[kColorPrivateWindow20] = {provider->GetColor(kColorPrimitivePrivateWindow90)};
    mixer[kColorPrivateWindow30] = {provider->GetColor(kColorPrimitivePrivateWindow60)};
    mixer[kColorPrivateWindow40] = {provider->GetColor(kColorPrimitivePrivateWindow50)};
    mixer[kColorPrivateWindow50] = {provider->GetColor(kColorPrimitivePrivateWindow40)};
    mixer[kColorPrivateWindow60] = {provider->GetColor(kColorPrimitivePrivateWindow25)};
    mixer[kColorPrivateWindow70] = {provider->GetColor(kColorPrimitivePrivateWindow10)};
    mixer[kColorPurple10] = {provider->GetColor(kColorPrimitivePurple95)};
    mixer[kColorPurple20] = {provider->GetColor(kColorPrimitivePurple90)};
    mixer[kColorPurple30] = {provider->GetColor(kColorPrimitivePurple60)};
    mixer[kColorPurple40] = {provider->GetColor(kColorPrimitivePurple50)};
    mixer[kColorPurple50] = {provider->GetColor(kColorPrimitivePurple40)};
    mixer[kColorPurple60] = {provider->GetColor(kColorPrimitivePurple25)};
    mixer[kColorPurple70] = {provider->GetColor(kColorPrimitivePurple10)};
    mixer[kColorRed10] = {provider->GetColor(kColorPrimitiveRed95)};
    mixer[kColorRed20] = {provider->GetColor(kColorPrimitiveRed90)};
    mixer[kColorRed30] = {provider->GetColor(kColorPrimitiveRed60)};
    mixer[kColorRed40] = {provider->GetColor(kColorPrimitiveRed50)};
    mixer[kColorRed50] = {provider->GetColor(kColorPrimitiveRed40)};
    mixer[kColorRed60] = {provider->GetColor(kColorPrimitiveRed25)};
    mixer[kColorRed70] = {provider->GetColor(kColorPrimitiveRed10)};
    mixer[kColorSecondary10] = {provider->GetColor(kColorPrimitiveSecondary95)};
    mixer[kColorSecondary20] = {provider->GetColor(kColorPrimitiveSecondary90)};
    mixer[kColorSecondary30] = {provider->GetColor(kColorPrimitiveSecondary60)};
    mixer[kColorSecondary40] = {provider->GetColor(kColorPrimitiveSecondary50)};
    mixer[kColorSecondary50] = {provider->GetColor(kColorPrimitiveSecondary40)};
    mixer[kColorSecondary60] = {provider->GetColor(kColorPrimitiveSecondary25)};
    mixer[kColorSecondary70] = {provider->GetColor(kColorPrimitiveSecondary10)};
    mixer[kColorSystemfeedbackErrorBackground] = {provider->GetColor(kColorPrimitiveRed95)};
    mixer[kColorSystemfeedbackErrorIcon] = {provider->GetColor(kColorPrimitiveRed50)};
    mixer[kColorSystemfeedbackErrorText] = {provider->GetColor(kColorPrimitiveRed40)};
    mixer[kColorSystemfeedbackFocusButtonSpecial] = {provider->GetColor(kColorPrimary70)};
    mixer[kColorSystemfeedbackFocusDefault] = {provider->GetColor(kColorPrimary30)};
    mixer[kColorSystemfeedbackInfoBackground] = {provider->GetColor(kColorPrimitiveBlue95)};
    mixer[kColorSystemfeedbackInfoIcon] = {provider->GetColor(kColorPrimitiveBlue50)};
    mixer[kColorSystemfeedbackInfoText] = {provider->GetColor(kColorPrimitiveBlue40)};
    mixer[kColorSystemfeedbackSuccessBackground] = {provider->GetColor(kColorPrimitiveGreen95)};
    mixer[kColorSystemfeedbackSuccessIcon] = {provider->GetColor(kColorPrimitiveGreen50)};
    mixer[kColorSystemfeedbackSuccessText] = {provider->GetColor(kColorPrimitiveGreen40)};
    mixer[kColorSystemfeedbackWarningBackground] = {provider->GetColor(kColorPrimitiveYellow95)};
    mixer[kColorSystemfeedbackWarningIcon] = {provider->GetColor(kColorPrimitiveYellow50)};
    mixer[kColorSystemfeedbackWarningText] = {provider->GetColor(kColorPrimitiveYellow40)};
    mixer[kColorTeal10] = {provider->GetColor(kColorPrimitiveTeal95)};
    mixer[kColorTeal20] = {provider->GetColor(kColorPrimitiveTeal90)};
    mixer[kColorTeal30] = {provider->GetColor(kColorPrimitiveTeal60)};
    mixer[kColorTeal40] = {provider->GetColor(kColorPrimitiveTeal50)};
    mixer[kColorTeal50] = {provider->GetColor(kColorPrimitiveTeal40)};
    mixer[kColorTeal60] = {provider->GetColor(kColorPrimitiveTeal25)};
    mixer[kColorTeal70] = {provider->GetColor(kColorPrimitiveTeal10)};
    mixer[kColorTertiary10] = {provider->GetColor(kColorPrimitiveTertiary95)};
    mixer[kColorTertiary20] = {provider->GetColor(kColorPrimitiveTertiary90)};
    mixer[kColorTertiary30] = {provider->GetColor(kColorPrimitiveTertiary60)};
    mixer[kColorTertiary40] = {provider->GetColor(kColorPrimitiveTertiary50)};
    mixer[kColorTertiary50] = {provider->GetColor(kColorPrimitiveTertiary40)};
    mixer[kColorTertiary60] = {provider->GetColor(kColorPrimitiveTertiary25)};
    mixer[kColorTertiary70] = {provider->GetColor(kColorPrimitiveTertiary10)};
    mixer[kColorTextDisabled] = {SkColorSetARGB(0x80, 0x21, 0x27, 0x2A)};
    mixer[kColorTextInteractive] = {provider->GetColor(kColorSchemesPrimary)};
    mixer[kColorTextInteractiveVisited] = {provider->GetColor(kColorSchemesTertiary)};
    mixer[kColorTextSecondary] = {provider->GetColor(kColorSchemesOnSurfaceVariant)};
    mixer[kColorTextTertiary] = {provider->GetColor(kColorPrimitiveNeutral50)};
    mixer[kColorTorWindow10] = {provider->GetColor(kColorPrimitiveTorWindow95)};
    mixer[kColorTorWindow20] = {provider->GetColor(kColorPrimitiveTorWindow90)};
    mixer[kColorTorWindow30] = {provider->GetColor(kColorPrimitiveTorWindow60)};
    mixer[kColorTorWindow40] = {provider->GetColor(kColorPrimitiveTorWindow50)};
    mixer[kColorTorWindow50] = {provider->GetColor(kColorPrimitiveTorWindow40)};
    mixer[kColorTorWindow60] = {provider->GetColor(kColorPrimitiveTorWindow25)};
    mixer[kColorTorWindow70] = {provider->GetColor(kColorPrimitiveTorWindow10)};
    mixer[kColorYellow10] = {provider->GetColor(kColorPrimitiveYellow95)};
    mixer[kColorYellow20] = {provider->GetColor(kColorPrimitiveYellow90)};
    mixer[kColorYellow30] = {provider->GetColor(kColorPrimitiveYellow60)};
    mixer[kColorYellow40] = {provider->GetColor(kColorPrimitiveYellow50)};
    mixer[kColorYellow50] = {provider->GetColor(kColorPrimitiveYellow40)};
    mixer[kColorYellow60] = {provider->GetColor(kColorPrimitiveYellow25)};
    mixer[kColorYellow70] = {provider->GetColor(kColorPrimitiveYellow10)};
  }
}

} // namespace nala
